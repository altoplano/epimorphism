ALPHA:


FIX IT!
	- modules/scripts/etc are out of control.  too damn many of them or something
	  - inheritence?
		- inline scripts?
		- dynamic creation (??? parameterized?)
  - is this shit with the ref pools necessary & clean enough?
  - weird divide by zero issue - glitch in content
	- switching states causes the system to glitch out for a second.  because of image uploading?
  - initAuxImages is mad ghetto
	- library isn't thought out well enough.  basically just shitty content
	- too many debug statements going on
	- debugging is kind of obnoxious
	- script level patterns(what is this?)
	- way of switching modules while keeping phase.  isn't recompiling ghetto?
	- clean up flags.  how???
	- make patterns modules??
	- clean up scripts
  - ABSOLUTE ADDRESSING FOR IDX & MOD SWITCHING??	not necessary if we stop using sub for t


CONFIG
  - cleanup/finish parsing of libs & slibs
    - general refactoring
    - clean up error messages
	- rethink flags
  - saving
  - data on engine_conf/state, etc split across library, engine, config :/
	- module inheritence? this stuff is mildly out of control
	- indexes
	  - deriving family - @seed:0 @seed:1, etc?

ENGINE
  - fract
UI

PATTERN
  - keep scripts when switching modules?
MISC
  - build out library
  - feature parity with existing app

LATER
  - remove mid from scripts?
  - maybe pixel alignment issues with images
  - remote control (webui, websockets, etc)
  - currently manually implementing GL.repeat for aux
  - shader indentation issues with switching
  - too many switches can cause par & zn overflow
	- clean up Pattern.purs & Script.purs
  - findParent is kind of ghetto
  - add dimension to component family (vec2, vec4, etc)
  - ModRef used inconsistiently
  - investigate dsl for scripts
  - use fb as texture source
  - enforce integrity of pools & module references
	- scripts conflicting with each other
  - module/submodule cycles??
  - real fullscreen mode
  - handle window resizing
  - ERROR HANDLING for createImage - missing images & sync issues & the unusable image issue
  - number parsing flakey?
  - engine stability/lost context - https://www.khronos.org/registry/webgl/extensions/WEBGL_lose_context/
  - compiler performance
  - database support
  - compiler substitutions %XXXX%, etc can still cause errors?  dont remember what kind
  - check out setTimeout vs requestAminFrame
  - figure out how to render UI
  - build some kind of UI
  - video rendering
	- old style (automation) scripts
  - config/ lib file comments
  - detect system/perf profile
  - test on windows
  - test on ipad
  - test on android
	- https://www.khronos.org/registry/webgl/extensions/WEBGL_debug_shaders/
	- unit tests
  - website
  - logging system
  - programming guidelines document - i.e make sure all tree modifications rebuild mod ref lib
  - better kernel debug support
  - par, zn, and aux lengths are fixed
  - save images
  - webcam input
  - benchmarking tools
  - image comparison testing
  - preprocesser malfunctions give weird errors
  - passing context to loadLib is annoying
  - main & disp share includes
  - complex numbers library?
  - better engine error checking/handling
  - texture organization
  - better data organization
	  - put configs in states?
		- where do things go?
		- put ref pools in pattern?
		- some kind of reactive data tree?
