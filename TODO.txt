SYSTEM
	- SWITCHING & REF POOLS
	  - way of switching modules while keeping phase.  isn't recompiling ghetto?
	  - is this shit with the ref pools necessary & clean enough?
	  - switching states causes the system to glitch out for a second.  because of image uploading?
    - ABSOLUTE ADDRESSING FOR IDX & MOD SWITCHING??	not necessary if we stop using sub for t
		- keep scripts when switching modules?

ENGINE
  - fract
PATTERN
	- make patterns modules??
	- pattern level scripts
  - remove mid from scripts?
MISC
  - initAuxImages is mad ghetto
	- too many debug statements going on
	- debugging is kind of obnoxious
  - logging?
FINAL
  - BETA INFRASTRUCTURE PASS
  - build out library & interface
  - weird divide by zero issue - glitch in content

LATER
  - make flags a set?
	- saving
	- next config/library pass (maybe better error detection)
  - how do we figure out the family of a submodle?  can't always use the name
	  -  like if it's a multi_seed ie. @seed:0 @seed:1, etc?
  - namespace collision in modules.lib?
  - maybe pixel alignment issues with images
  - remote control (webui, websockets, etc)
  - currently manually implementing GL.repeat for aux
  - shader indentation issues with switching
  - too many switches can cause par & zn overflow
	- clean up Pattern.purs & Script.purs
  - findParent is kind of ghetto
  - add dimension to component family (vec2, vec4, etc)
  - ModRef used inconsistiently
  - investigate dsl for scripts
  - use fb as texture source
  - enforce integrity of pools & module references
	- scripts conflicting with each other
  - module/submodule cycles??
  - real fullscreen mode
  - handle window resizing
  - ERROR HANDLING for createImage - missing images & sync issues & the unusable image issue
  - number parsing flakey?
  - engine stability/lost context - https://www.khronos.org/registry/webgl/extensions/WEBGL_lose_context/
  - compiler performance
  - database support
  - compiler substitutions %XXXX%, etc can still cause errors?  dont remember what kind
  - check out setTimeout vs requestAminFrame
  - figure out how to render UI
  - build some kind of UI
  - video rendering
	- old style (automation) scripts
  - config/ lib file comments
  - detect system/perf profile
  - test on windows
  - test on ipad
  - test on android
	- https://www.khronos.org/registry/webgl/extensions/WEBGL_debug_shaders/
	- unit tests
  - website
  - logging system
  - programming guidelines document - i.e make sure all tree modifications rebuild mod ref lib
  - better kernel debug support
  - par, zn, and aux lengths are fixed
  - save images
  - webcam input
  - benchmarking tools
  - image comparison testing
  - preprocesser malfunctions give weird errors
  - passing context to loadLib is annoying
  - main & disp share includes
  - complex numbers library?
	- complex parsing - currently need both components i.e 0.0 + 1.3i
  - better engine error checking/handling
  - texture organization
  - better data organization
	  - put configs in states?
		- where do things go?
		- put ref pools in pattern?
		- some kind of reactive data tree?
  - think of T as vector fields, composition -> vector flow?
