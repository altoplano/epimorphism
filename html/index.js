(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.Main = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({"/Users/gene/Programming/pure_morph/output/Command/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Control_Monad_ST = require("Control.Monad.ST");
var Config = require("Config");
var JSUtil = require("JSUtil");
var command = function (ucRef) {
    return function (ecRef) {
        return function (esRef) {
            return function (pRef) {
                return function (msg) {
                    return function __do() {
                        var v = Control_Monad_ST.readSTRef(ucRef)();
                        var v1 = Control_Monad_ST.readSTRef(ecRef)();
                        var v2 = Control_Monad_ST.readSTRef(esRef)();
                        var v3 = Control_Monad_ST.readSTRef(pRef)();
                        JSUtil.unsafeLog(Prelude.show(Prelude.showString)(msg))();
                        (function () {
                            if (msg === "pause") {
                                return Control_Monad_ST.modifySTRef(pRef)(function (p) {
                                    var $9 = {};
                                    for (var $10 in p) {
                                        if (p.hasOwnProperty($10)) {
                                            $9[$10] = p[$10];
                                        };
                                    };
                                    $9.tSpd = 1.0 - p.tSpd;
                                    return $9;
                                });
                            };
                            throw new Error("Failed pattern match at Command line 11, column 1 - line 12, column 1: " + [ msg.constructor.name ]);
                        })()();
                        return Prelude.unit;
                    };
                };
            };
        };
    };
};
module.exports = {
    command: command
};

},{"Config":"/Users/gene/Programming/pure_morph/output/Config/index.js","Control.Monad.Eff":"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff/index.js","Control.Monad.ST":"/Users/gene/Programming/pure_morph/output/Control.Monad.ST/index.js","JSUtil":"/Users/gene/Programming/pure_morph/output/JSUtil/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Config/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Data_Maybe = require("Data.Maybe");
var Data_Tuple = require("Data.Tuple");
var Data_StrMap = require("Data.StrMap");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Control_Monad_Except_Trans = require("Control.Monad.Except.Trans");
var Graphics_WebGL_Types = require("Graphics.WebGL.Types");
var Graphics_Canvas = require("Graphics.Canvas");
var DOM = require("DOM");
var SubModules = function (x) {
    return x;
};
module.exports = {
    SubModules: SubModules
};

},{"Control.Monad.Eff":"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff/index.js","Control.Monad.Except.Trans":"/Users/gene/Programming/pure_morph/output/Control.Monad.Except.Trans/index.js","DOM":"/Users/gene/Programming/pure_morph/output/DOM/index.js","Data.Maybe":"/Users/gene/Programming/pure_morph/output/Data.Maybe/index.js","Data.StrMap":"/Users/gene/Programming/pure_morph/output/Data.StrMap/index.js","Data.Tuple":"/Users/gene/Programming/pure_morph/output/Data.Tuple/index.js","Graphics.Canvas":"/Users/gene/Programming/pure_morph/output/Graphics.Canvas/index.js","Graphics.WebGL.Types":"/Users/gene/Programming/pure_morph/output/Graphics.WebGL.Types/index.js"}],"/Users/gene/Programming/pure_morph/output/Control.Alt/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var Alt = function (__superclass_Prelude$dotFunctor_0, alt) {
    this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    this.alt = alt;
};
var altArray = new Alt(function () {
    return Prelude.functorArray;
}, Prelude.append(Prelude.semigroupArray));
var alt = function (dict) {
    return dict.alt;
};
var $less$bar$greater = function (dictAlt) {
    return alt(dictAlt);
};
module.exports = {
    Alt: Alt, 
    "<|>": $less$bar$greater, 
    alt: alt, 
    altArray: altArray
};

},{"Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Control.Alternative/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Plus = require("Control.Plus");
var Alternative = function (__superclass_Control$dotPlus$dotPlus_1, __superclass_Prelude$dotApplicative_0) {
    this["__superclass_Control.Plus.Plus_1"] = __superclass_Control$dotPlus$dotPlus_1;
    this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
};
var alternativeArray = new Alternative(function () {
    return Control_Plus.plusArray;
}, function () {
    return Prelude.applicativeArray;
});
module.exports = {
    Alternative: Alternative, 
    alternativeArray: alternativeArray
};

},{"Control.Plus":"/Users/gene/Programming/pure_morph/output/Control.Plus/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Control.Apply/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var $less$times = function (dictApply) {
    return function (a) {
        return function (b) {
            return Prelude["<*>"](dictApply)(Prelude["<$>"](dictApply["__superclass_Prelude.Functor_0"]())(Prelude["const"])(a))(b);
        };
    };
};
var $times$greater = function (dictApply) {
    return function (a) {
        return function (b) {
            return Prelude["<*>"](dictApply)(Prelude["<$>"](dictApply["__superclass_Prelude.Functor_0"]())(Prelude["const"](Prelude.id(Prelude.categoryFn)))(a))(b);
        };
    };
};
var lift5 = function (dictApply) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return function (e) {
                            return Prelude["<*>"](dictApply)(Prelude["<*>"](dictApply)(Prelude["<*>"](dictApply)(Prelude["<*>"](dictApply)(Prelude["<$>"](dictApply["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c))(d))(e);
                        };
                    };
                };
            };
        };
    };
};
var lift4 = function (dictApply) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return function (d) {
                        return Prelude["<*>"](dictApply)(Prelude["<*>"](dictApply)(Prelude["<*>"](dictApply)(Prelude["<$>"](dictApply["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c))(d);
                    };
                };
            };
        };
    };
};
var lift3 = function (dictApply) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return Prelude["<*>"](dictApply)(Prelude["<*>"](dictApply)(Prelude["<$>"](dictApply["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c);
                };
            };
        };
    };
};
var lift2 = function (dictApply) {
    return function (f) {
        return function (a) {
            return function (b) {
                return Prelude["<*>"](dictApply)(Prelude["<$>"](dictApply["__superclass_Prelude.Functor_0"]())(f)(a))(b);
            };
        };
    };
};
module.exports = {
    lift5: lift5, 
    lift4: lift4, 
    lift3: lift3, 
    lift2: lift2, 
    "*>": $times$greater, 
    "<*": $less$times
};

},{"Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Control.Biapplicative/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Biapply = require("Control.Biapply");
var Biapplicative = function (__superclass_Control$dotBiapply$dotBiapply_0, bipure) {
    this["__superclass_Control.Biapply.Biapply_0"] = __superclass_Control$dotBiapply$dotBiapply_0;
    this.bipure = bipure;
};
var bipure = function (dict) {
    return dict.bipure;
};
module.exports = {
    Biapplicative: Biapplicative, 
    bipure: bipure
};

},{"Control.Biapply":"/Users/gene/Programming/pure_morph/output/Control.Biapply/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Control.Biapply/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Bifunctor = require("Data.Bifunctor");
var Biapply = function (__superclass_Data$dotBifunctor$dotBifunctor_0, biapply) {
    this["__superclass_Data.Bifunctor.Bifunctor_0"] = __superclass_Data$dotBifunctor$dotBifunctor_0;
    this.biapply = biapply;
};
var $less$less$dollar$greater$greater = Prelude.id(Prelude.categoryFn);
var biapply = function (dict) {
    return dict.biapply;
};
var $less$less$times$greater$greater = function (dictBiapply) {
    return biapply(dictBiapply);
};
var bilift2 = function (dictBiapply) {
    return function (f) {
        return function (g) {
            return function (a) {
                return function (b) {
                    return $less$less$times$greater$greater(dictBiapply)($less$less$dollar$greater$greater(Data_Bifunctor.bimap(dictBiapply["__superclass_Data.Bifunctor.Bifunctor_0"]())(f)(g))(a))(b);
                };
            };
        };
    };
};
var bilift3 = function (dictBiapply) {
    return function (f) {
        return function (g) {
            return function (a) {
                return function (b) {
                    return function (c) {
                        return $less$less$times$greater$greater(dictBiapply)($less$less$times$greater$greater(dictBiapply)($less$less$dollar$greater$greater(Data_Bifunctor.bimap(dictBiapply["__superclass_Data.Bifunctor.Bifunctor_0"]())(f)(g))(a))(b))(c);
                    };
                };
            };
        };
    };
};
var $times$greater$greater = function (dictBiapply) {
    return function (a) {
        return function (b) {
            return $less$less$times$greater$greater(dictBiapply)($less$less$dollar$greater$greater(Data_Bifunctor.bimap(dictBiapply["__superclass_Data.Bifunctor.Bifunctor_0"]())(Prelude["const"](Prelude.id(Prelude.categoryFn)))(Prelude["const"](Prelude.id(Prelude.categoryFn))))(a))(b);
        };
    };
};
var $less$less$times = function (dictBiapply) {
    return function (a) {
        return function (b) {
            return $less$less$times$greater$greater(dictBiapply)($less$less$dollar$greater$greater(Data_Bifunctor.bimap(dictBiapply["__superclass_Data.Bifunctor.Bifunctor_0"]())(Prelude["const"])(Prelude["const"]))(a))(b);
        };
    };
};
module.exports = {
    Biapply: Biapply, 
    bilift3: bilift3, 
    bilift2: bilift2, 
    "<<*": $less$less$times, 
    "*>>": $times$greater$greater, 
    "<<*>>": $less$less$times$greater$greater, 
    biapply: biapply, 
    "<<$>>": $less$less$dollar$greater$greater
};

},{"Data.Bifunctor":"/Users/gene/Programming/pure_morph/output/Data.Bifunctor/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Control.Comonad/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Extend = require("Control.Extend");
var Comonad = function (__superclass_Control$dotExtend$dotExtend_0, extract) {
    this["__superclass_Control.Extend.Extend_0"] = __superclass_Control$dotExtend$dotExtend_0;
    this.extract = extract;
};
var extract = function (dict) {
    return dict.extract;
};
module.exports = {
    Comonad: Comonad, 
    extract: extract
};

},{"Control.Extend":"/Users/gene/Programming/pure_morph/output/Control.Extend/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Control.Extend/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var Extend = function (__superclass_Prelude$dotFunctor_0, extend) {
    this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    this.extend = extend;
};
var extendFn = function (dictSemigroup) {
    return new Extend(function () {
        return Prelude.functorFn;
    }, function (f) {
        return function (g) {
            return function (w) {
                return f(function (w$prime) {
                    return g(Prelude["<>"](dictSemigroup)(w)(w$prime));
                });
            };
        };
    });
};
var extend = function (dict) {
    return dict.extend;
};
var $less$less$eq = function (dictExtend) {
    return extend(dictExtend);
};
var $eq$less$eq = function (dictExtend) {
    return function (f) {
        return function (g) {
            return function (w) {
                return f($less$less$eq(dictExtend)(g)(w));
            };
        };
    };
};
var $eq$greater$eq = function (dictExtend) {
    return function (f) {
        return function (g) {
            return function (w) {
                return g($less$less$eq(dictExtend)(f)(w));
            };
        };
    };
};
var $eq$greater$greater = function (dictExtend) {
    return function (w) {
        return function (f) {
            return $less$less$eq(dictExtend)(f)(w);
        };
    };
};
var duplicate = function (dictExtend) {
    return extend(dictExtend)(Prelude.id(Prelude.categoryFn));
};
module.exports = {
    Extend: Extend, 
    duplicate: duplicate, 
    "=<=": $eq$less$eq, 
    "=>=": $eq$greater$eq, 
    "=>>": $eq$greater$greater, 
    "<<=": $less$less$eq, 
    extend: extend, 
    extendFn: extendFn
};

},{"Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Control.Lazy/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var Lazy = function (defer) {
    this.defer = defer;
};
var defer = function (dict) {
    return dict.defer;
};
var fix = function (dictLazy) {
    return function (f) {
        return defer(dictLazy)(function (v) {
            return f(fix(dictLazy)(f));
        });
    };
};
module.exports = {
    Lazy: Lazy, 
    fix: fix, 
    defer: defer
};

},{"Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Control.Monad.Cont.Class/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var MonadCont = function (__superclass_Prelude$dotMonad_0, callCC) {
    this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
    this.callCC = callCC;
};
var callCC = function (dict) {
    return dict.callCC;
};
module.exports = {
    MonadCont: MonadCont, 
    callCC: callCC
};

},{"Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff.Class/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("../Prelude");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var MonadEff = function (__superclass_Prelude$dotMonad_0, liftEff) {
    this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
    this.liftEff = liftEff;
};
var monadEffEff = new MonadEff(function () {
    return Control_Monad_Eff.monadEff;
}, Prelude.id(Prelude.categoryFn));
var liftEff = function (dict) {
    return dict.liftEff;
};
module.exports = {
    MonadEff: MonadEff, 
    liftEff: liftEff, 
    monadEffEff: monadEffEff
};

},{"../Control.Monad.Eff":"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff/index.js","../Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff.Console/foreign.js":[function(require,module,exports){
/* global exports, console */
"use strict";

// module Control.Monad.Eff.Console

exports.log = function (s) {
  return function () {
    console.log(s);
    return {};
  };
};

exports.error = function (s) {
  return function () {
    console.error(s);
    return {};
  };
};

},{}],"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff.Console/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("../Prelude");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var print = function (dictShow) {
    return function ($1) {
        return $foreign.log(Prelude.show(dictShow)($1));
    };
};
module.exports = {
    print: print, 
    error: $foreign.error, 
    log: $foreign.log
};

},{"../Control.Monad.Eff":"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff/index.js","../Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js","./foreign":"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff.Console/foreign.js"}],"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff.Exception.Unsafe/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Monad_Eff_Unsafe = require("Control.Monad.Eff.Unsafe");
var Control_Monad_Eff_Exception = require("Control.Monad.Eff.Exception");
var unsafeThrowException = function ($0) {
    return Control_Monad_Eff_Unsafe.unsafePerformEff(Control_Monad_Eff_Exception.throwException($0));
};
var unsafeThrow = function ($1) {
    return unsafeThrowException(Control_Monad_Eff_Exception.error($1));
};
module.exports = {
    unsafeThrow: unsafeThrow, 
    unsafeThrowException: unsafeThrowException
};

},{"Control.Monad.Eff.Exception":"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff.Exception/index.js","Control.Monad.Eff.Unsafe":"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff.Unsafe/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff.Exception/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Control.Monad.Eff.Exception

exports.showErrorImpl = function (err) {
  return err.stack || err.toString();
};

exports.error = function (msg) {
  return new Error(msg);
};

exports.message = function (e) {
  return e.message;
};

exports.stackImpl = function (just) {
  return function (nothing) {
    return function (e) {
      return e.stack ? just(e.stack) : nothing;
    };
  };
};

exports.throwException = function (e) {
  return function () {
    throw e;
  };
};

exports.catchException = function (c) {
  return function (t) {
    return function () {
      try {
        return t();
      } catch (e) {
        if (e instanceof Error || Object.prototype.toString.call(e) === "[object Error]") {
          return c(e)();
        } else {
          return c(new Error(e.toString()))();
        }
      }
    };
  };
};

},{}],"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff.Exception/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Control_Monad_Eff = require("Control.Monad.Eff");
var $$throw = function ($0) {
    return $foreign.throwException($foreign.error($0));
};
var stack = $foreign.stackImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var showError = new Prelude.Show($foreign.showErrorImpl);
module.exports = {
    "throw": $$throw, 
    stack: stack, 
    showError: showError, 
    catchException: $foreign.catchException, 
    throwException: $foreign.throwException, 
    message: $foreign.message, 
    error: $foreign.error
};

},{"./foreign":"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff.Exception/foreign.js","Control.Monad.Eff":"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff/index.js","Data.Maybe":"/Users/gene/Programming/pure_morph/output/Data.Maybe/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff.Unsafe/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Control.Monad.Eff.Unsafe

exports.unsafeInterleaveEff = function (f) {
  return f;
};

},{}],"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff.Unsafe/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("../Prelude");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var unsafePerformEff = function ($0) {
    return Control_Monad_Eff.runPure($foreign.unsafeInterleaveEff($0));
};
module.exports = {
    unsafePerformEff: unsafePerformEff, 
    unsafeInterleaveEff: $foreign.unsafeInterleaveEff
};

},{"../Control.Monad.Eff":"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff/index.js","../Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js","./foreign":"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff.Unsafe/foreign.js"}],"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Control.Monad.Eff

exports.returnE = function (a) {
  return function () {
    return a;
  };
};

exports.bindE = function (a) {
  return function (f) {
    return function () {
      return f(a())();
    };
  };
};

exports.runPure = function (f) {
  return f();
};

exports.untilE = function (f) {
  return function () {
    while (!f());
    return {};
  };
};

exports.whileE = function (f) {
  return function (a) {
    return function () {
      while (f()) {
        a();
      }
      return {};
    };
  };
};

exports.forE = function (lo) {
  return function (hi) {
    return function (f) {
      return function () {
        for (var i = lo; i < hi; i++) {
          f(i)();
        }
      };
    };
  };
};

exports.foreachE = function (as) {
  return function (f) {
    return function () {
      for (var i = 0, l = as.length; i < l; i++) {
        f(as[i])();
      }
    };
  };
};

},{}],"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("../Prelude");
var monadEff = new Prelude.Monad(function () {
    return applicativeEff;
}, function () {
    return bindEff;
});
var bindEff = new Prelude.Bind(function () {
    return applyEff;
}, $foreign.bindE);
var applyEff = new Prelude.Apply(function () {
    return functorEff;
}, Prelude.ap(monadEff));
var applicativeEff = new Prelude.Applicative(function () {
    return applyEff;
}, $foreign.returnE);
var functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));
module.exports = {
    functorEff: functorEff, 
    applyEff: applyEff, 
    applicativeEff: applicativeEff, 
    bindEff: bindEff, 
    monadEff: monadEff, 
    foreachE: $foreign.foreachE, 
    forE: $foreign.forE, 
    whileE: $foreign.whileE, 
    untilE: $foreign.untilE, 
    runPure: $foreign.runPure
};

},{"../Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js","./foreign":"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff/foreign.js"}],"/Users/gene/Programming/pure_morph/output/Control.Monad.Error.Class/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Either = require("Data.Either");
var MonadError = function (__superclass_Prelude$dotMonad_0, catchError, throwError) {
    this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
    this.catchError = catchError;
    this.throwError = throwError;
};
var throwError = function (dict) {
    return dict.throwError;
};
var monadErrorMaybe = new MonadError(function () {
    return Data_Maybe.monadMaybe;
}, function (v) {
    return function (v1) {
        if (v instanceof Data_Maybe.Nothing) {
            return v1(Prelude.unit);
        };
        if (v instanceof Data_Maybe.Just) {
            return new Data_Maybe.Just(v.value0);
        };
        throw new Error("Failed pattern match at Control.Monad.Error.Class line 51, column 1 - line 54, column 32: " + [ v.constructor.name, v1.constructor.name ]);
    };
}, Prelude["const"](Data_Maybe.Nothing.value));
var monadErrorEither = new MonadError(function () {
    return Data_Either.monadEither;
}, function (v) {
    return function (v1) {
        if (v instanceof Data_Either.Left) {
            return v1(v.value0);
        };
        if (v instanceof Data_Either.Right) {
            return new Data_Either.Right(v.value0);
        };
        throw new Error("Failed pattern match at Control.Monad.Error.Class line 46, column 1 - line 51, column 1: " + [ v.constructor.name, v1.constructor.name ]);
    };
}, Data_Either.Left.create);
var catchError = function (dict) {
    return dict.catchError;
};
var catchJust = function (dictMonadError) {
    return function (p) {
        return function (act) {
            return function (handler) {
                var handle = function (e) {
                    var $12 = p(e);
                    if ($12 instanceof Data_Maybe.Nothing) {
                        return throwError(dictMonadError)(e);
                    };
                    if ($12 instanceof Data_Maybe.Just) {
                        return handler($12.value0);
                    };
                    throw new Error("Failed pattern match at Control.Monad.Error.Class line 41, column 3 - line 46, column 1: " + [ $12.constructor.name ]);
                };
                return catchError(dictMonadError)(act)(handle);
            };
        };
    };
};
module.exports = {
    MonadError: MonadError, 
    catchJust: catchJust, 
    catchError: catchError, 
    throwError: throwError, 
    monadErrorEither: monadErrorEither, 
    monadErrorMaybe: monadErrorMaybe
};

},{"Data.Either":"/Users/gene/Programming/pure_morph/output/Data.Either/index.js","Data.Maybe":"/Users/gene/Programming/pure_morph/output/Data.Maybe/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Control.Monad.Except.Trans/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Tuple = require("Data.Tuple");
var Data_Either = require("Data.Either");
var Data_Monoid = require("Data.Monoid");
var Control_Alt = require("Control.Alt");
var Control_Alternative = require("Control.Alternative");
var Control_Monad_Cont_Class = require("Control.Monad.Cont.Class");
var Control_Monad_Eff_Class = require("Control.Monad.Eff.Class");
var Control_Monad_Error_Class = require("Control.Monad.Error.Class");
var Control_Monad_Reader_Class = require("Control.Monad.Reader.Class");
var Control_Monad_Rec_Class = require("Control.Monad.Rec.Class");
var Control_Monad_RWS_Class = require("Control.Monad.RWS.Class");
var Control_Monad_State_Class = require("Control.Monad.State.Class");
var Control_Monad_Trans = require("Control.Monad.Trans");
var Control_Monad_Writer_Class = require("Control.Monad.Writer.Class");
var Control_MonadPlus = require("Control.MonadPlus");
var Control_Plus = require("Control.Plus");
var ExceptT = function (x) {
    return x;
};
var runExceptT = function (v) {
    return v;
};
var withExceptT = function (dictFunctor) {
    return function (f) {
        var mapLeft = function (v) {
            return function (v1) {
                if (v1 instanceof Data_Either.Right) {
                    return new Data_Either.Right(v1.value0);
                };
                if (v1 instanceof Data_Either.Left) {
                    return new Data_Either.Left(v(v1.value0));
                };
                throw new Error("Failed pattern match at Control.Monad.Except.Trans line 43, column 3 - line 44, column 3: " + [ v.constructor.name, v1.constructor.name ]);
            };
        };
        return function ($67) {
            return ExceptT(Prelude["<$>"](dictFunctor)(mapLeft(f))(runExceptT($67)));
        };
    };
};
var monadTransExceptT = new Control_Monad_Trans.MonadTrans(function (dictMonad) {
    return function (m) {
        return ExceptT(Prelude.bind(dictMonad["__superclass_Prelude.Bind_1"]())(m)(function (v) {
            return Prelude["return"](dictMonad["__superclass_Prelude.Applicative_0"]())(new Data_Either.Right(v));
        }));
    };
});
var mapExceptT = function (f) {
    return function (m) {
        return f(runExceptT(m));
    };
};
var functorExceptT = function (dictFunctor) {
    return new Prelude.Functor(function (f) {
        return mapExceptT(Prelude["<$>"](dictFunctor)(Prelude["<$>"](Data_Either.functorEither)(f)));
    });
};
var applyExceptT = function (dictApply) {
    return new Prelude.Apply(function () {
        return functorExceptT(dictApply["__superclass_Prelude.Functor_0"]());
    }, function (v) {
        return function (v1) {
            var f$prime = Prelude["<$>"](dictApply["__superclass_Prelude.Functor_0"]())(Prelude["<*>"](Data_Either.applyEither))(v);
            var x$prime = Prelude["<*>"](dictApply)(f$prime)(v1);
            return x$prime;
        };
    });
};
var bindExceptT = function (dictMonad) {
    return new Prelude.Bind(function () {
        return applyExceptT((dictMonad["__superclass_Prelude.Bind_1"]())["__superclass_Prelude.Apply_0"]());
    }, function (m) {
        return function (k) {
            return Prelude[">>="](dictMonad["__superclass_Prelude.Bind_1"]())(runExceptT(m))(Data_Either.either(function ($68) {
                return Prelude["return"](dictMonad["__superclass_Prelude.Applicative_0"]())(Data_Either.Left.create($68));
            })(function ($69) {
                return runExceptT(k($69));
            }));
        };
    });
};
var applicativeExceptT = function (dictApplicative) {
    return new Prelude.Applicative(function () {
        return applyExceptT(dictApplicative["__superclass_Prelude.Apply_0"]());
    }, function ($70) {
        return ExceptT(Prelude.pure(dictApplicative)(Data_Either.Right.create($70)));
    });
};
var monadExceptT = function (dictMonad) {
    return new Prelude.Monad(function () {
        return applicativeExceptT(dictMonad["__superclass_Prelude.Applicative_0"]());
    }, function () {
        return bindExceptT(dictMonad);
    });
};
var monadContExceptT = function (dictMonadCont) {
    return new Control_Monad_Cont_Class.MonadCont(function () {
        return monadExceptT(dictMonadCont["__superclass_Prelude.Monad_0"]());
    }, function (f) {
        return ExceptT(Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
            return runExceptT(f(function (a) {
                return ExceptT(c(new Data_Either.Right(a)));
            }));
        }));
    });
};
var monadEffExceptT = function (dictMonadEff) {
    return new Control_Monad_Eff_Class.MonadEff(function () {
        return monadExceptT(dictMonadEff["__superclass_Prelude.Monad_0"]());
    }, function ($71) {
        return Control_Monad_Trans.lift(monadTransExceptT)(dictMonadEff["__superclass_Prelude.Monad_0"]())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($71));
    });
};
var monadErrorExceptT = function (dictMonad) {
    return new Control_Monad_Error_Class.MonadError(function () {
        return monadExceptT(dictMonad);
    }, function (m) {
        return function (handler) {
            return Prelude[">>="](dictMonad["__superclass_Prelude.Bind_1"]())(runExceptT(m))(Data_Either.either(function ($72) {
                return runExceptT(handler($72));
            })(function ($73) {
                return Prelude.pure(dictMonad["__superclass_Prelude.Applicative_0"]())(Data_Either.Right.create($73));
            }));
        };
    }, function ($74) {
        return ExceptT(Prelude.pure(dictMonad["__superclass_Prelude.Applicative_0"]())(Data_Either.Left.create($74)));
    });
};
var monadReaderExceptT = function (dictMonadReader) {
    return new Control_Monad_Reader_Class.MonadReader(function () {
        return monadExceptT(dictMonadReader["__superclass_Prelude.Monad_0"]());
    }, Control_Monad_Trans.lift(monadTransExceptT)(dictMonadReader["__superclass_Prelude.Monad_0"]())(Control_Monad_Reader_Class.ask(dictMonadReader)), function (f) {
        return mapExceptT(Control_Monad_Reader_Class.local(dictMonadReader)(f));
    });
};
var monadRecExceptT = function (dictMonadRec) {
    return new Control_Monad_Rec_Class.MonadRec(function () {
        return monadExceptT(dictMonadRec["__superclass_Prelude.Monad_0"]());
    }, function (f) {
        return function ($75) {
            return ExceptT(Control_Monad_Rec_Class.tailRecM(dictMonadRec)(function (a) {
                return Prelude.bind((dictMonadRec["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Bind_1"]())(runExceptT(f(a)))(function (v) {
                    return Prelude["return"]((dictMonadRec["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())((function () {
                        if (v instanceof Data_Either.Left) {
                            return new Data_Either.Right(new Data_Either.Left(v.value0));
                        };
                        if (v instanceof Data_Either.Right && v.value0 instanceof Data_Either.Left) {
                            return new Data_Either.Left(v.value0.value0);
                        };
                        if (v instanceof Data_Either.Right && v.value0 instanceof Data_Either.Right) {
                            return new Data_Either.Right(new Data_Either.Right(v.value0.value0));
                        };
                        throw new Error("Failed pattern match at Control.Monad.Except.Trans line 68, column 1 - line 76, column 1: " + [ v.constructor.name ]);
                    })());
                });
            })($75));
        };
    });
};
var monadStateExceptT = function (dictMonadState) {
    return new Control_Monad_State_Class.MonadState(function () {
        return monadExceptT(dictMonadState["__superclass_Prelude.Monad_0"]());
    }, function (f) {
        return Control_Monad_Trans.lift(monadTransExceptT)(dictMonadState["__superclass_Prelude.Monad_0"]())(Control_Monad_State_Class.state(dictMonadState)(f));
    });
};
var monadWriterExceptT = function (dictMonadWriter) {
    return new Control_Monad_Writer_Class.MonadWriter(function () {
        return monadExceptT(dictMonadWriter["__superclass_Prelude.Monad_0"]());
    }, mapExceptT(function (m) {
        return Prelude.bind((dictMonadWriter["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Bind_1"]())(Control_Monad_Writer_Class.listen(dictMonadWriter)(m))(function (v) {
            return Prelude["return"]((dictMonadWriter["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())(Prelude["<$>"](Data_Either.functorEither)(function (r) {
                return new Data_Tuple.Tuple(r, v.value1);
            })(v.value0));
        });
    }), mapExceptT(function (m) {
        return Control_Monad_Writer_Class.pass(dictMonadWriter)(Prelude.bind((dictMonadWriter["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Bind_1"]())(m)(function (v) {
            return Prelude["return"]((dictMonadWriter["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())((function () {
                if (v instanceof Data_Either.Left) {
                    return new Data_Tuple.Tuple(new Data_Either.Left(v.value0), Prelude.id(Prelude.categoryFn));
                };
                if (v instanceof Data_Either.Right) {
                    return new Data_Tuple.Tuple(new Data_Either.Right(v.value0.value0), v.value0.value1);
                };
                throw new Error("Failed pattern match at Control.Monad.Except.Trans line 116, column 1 - line 127, column 1: " + [ v.constructor.name ]);
            })());
        }));
    }), function (wd) {
        return Control_Monad_Trans.lift(monadTransExceptT)(dictMonadWriter["__superclass_Prelude.Monad_0"]())(Control_Monad_Writer_Class.writer(dictMonadWriter)(wd));
    });
};
var monadRWSExceptT = function (dictMonoid) {
    return function (dictMonadRWS) {
        return new Control_Monad_RWS_Class.MonadRWS(function () {
            return monadReaderExceptT(dictMonadRWS["__superclass_Control.Monad.Reader.Class.MonadReader_1"]());
        }, function () {
            return monadStateExceptT(dictMonadRWS["__superclass_Control.Monad.State.Class.MonadState_3"]());
        }, function () {
            return monadWriterExceptT(dictMonadRWS["__superclass_Control.Monad.Writer.Class.MonadWriter_2"]());
        }, function () {
            return dictMonoid;
        });
    };
};
var altExceptT = function (dictSemigroup) {
    return function (dictMonad) {
        return new Control_Alt.Alt(function () {
            return functorExceptT(((dictMonad["__superclass_Prelude.Bind_1"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
        }, function (m) {
            return function (n) {
                return ExceptT(Prelude.bind(dictMonad["__superclass_Prelude.Bind_1"]())(runExceptT(m))(function (v) {
                    if (v instanceof Data_Either.Right) {
                        return Prelude.pure(dictMonad["__superclass_Prelude.Applicative_0"]())(new Data_Either.Right(v.value0));
                    };
                    if (v instanceof Data_Either.Left) {
                        return Prelude.bind(dictMonad["__superclass_Prelude.Bind_1"]())(runExceptT(n))(function (v1) {
                            if (v1 instanceof Data_Either.Right) {
                                return Prelude.pure(dictMonad["__superclass_Prelude.Applicative_0"]())(new Data_Either.Right(v1.value0));
                            };
                            if (v1 instanceof Data_Either.Left) {
                                return Prelude.pure(dictMonad["__superclass_Prelude.Applicative_0"]())(new Data_Either.Left(Prelude["<>"](dictSemigroup)(v.value0)(v1.value0)));
                            };
                            throw new Error("Failed pattern match at Control.Monad.Except.Trans line 76, column 1 - line 87, column 1: " + [ v1.constructor.name ]);
                        });
                    };
                    throw new Error("Failed pattern match at Control.Monad.Except.Trans line 76, column 1 - line 87, column 1: " + [ v.constructor.name ]);
                }));
            };
        });
    };
};
var plusExceptT = function (dictMonoid) {
    return function (dictMonad) {
        return new Control_Plus.Plus(function () {
            return altExceptT(dictMonoid["__superclass_Prelude.Semigroup_0"]())(dictMonad);
        }, Control_Monad_Error_Class.throwError(monadErrorExceptT(dictMonad))(Data_Monoid.mempty(dictMonoid)));
    };
};
var alternativeExceptT = function (dictMonoid) {
    return function (dictMonad) {
        return new Control_Alternative.Alternative(function () {
            return plusExceptT(dictMonoid)(dictMonad);
        }, function () {
            return applicativeExceptT(dictMonad["__superclass_Prelude.Applicative_0"]());
        });
    };
};
var monadPlusExceptT = function (dictMonoid) {
    return function (dictMonad) {
        return new Control_MonadPlus.MonadPlus(function () {
            return alternativeExceptT(dictMonoid)(dictMonad);
        }, function () {
            return monadExceptT(dictMonad);
        });
    };
};
module.exports = {
    ExceptT: ExceptT, 
    mapExceptT: mapExceptT, 
    withExceptT: withExceptT, 
    runExceptT: runExceptT, 
    functorExceptT: functorExceptT, 
    applyExceptT: applyExceptT, 
    applicativeExceptT: applicativeExceptT, 
    bindExceptT: bindExceptT, 
    monadExceptT: monadExceptT, 
    monadRecExceptT: monadRecExceptT, 
    altExceptT: altExceptT, 
    plusExceptT: plusExceptT, 
    alternativeExceptT: alternativeExceptT, 
    monadPlusExceptT: monadPlusExceptT, 
    monadTransExceptT: monadTransExceptT, 
    monadEffExceptT: monadEffExceptT, 
    monadContExceptT: monadContExceptT, 
    monadErrorExceptT: monadErrorExceptT, 
    monadReaderExceptT: monadReaderExceptT, 
    monadStateExceptT: monadStateExceptT, 
    monadWriterExceptT: monadWriterExceptT, 
    monadRWSExceptT: monadRWSExceptT
};

},{"Control.Alt":"/Users/gene/Programming/pure_morph/output/Control.Alt/index.js","Control.Alternative":"/Users/gene/Programming/pure_morph/output/Control.Alternative/index.js","Control.Monad.Cont.Class":"/Users/gene/Programming/pure_morph/output/Control.Monad.Cont.Class/index.js","Control.Monad.Eff.Class":"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff.Class/index.js","Control.Monad.Error.Class":"/Users/gene/Programming/pure_morph/output/Control.Monad.Error.Class/index.js","Control.Monad.RWS.Class":"/Users/gene/Programming/pure_morph/output/Control.Monad.RWS.Class/index.js","Control.Monad.Reader.Class":"/Users/gene/Programming/pure_morph/output/Control.Monad.Reader.Class/index.js","Control.Monad.Rec.Class":"/Users/gene/Programming/pure_morph/output/Control.Monad.Rec.Class/index.js","Control.Monad.State.Class":"/Users/gene/Programming/pure_morph/output/Control.Monad.State.Class/index.js","Control.Monad.Trans":"/Users/gene/Programming/pure_morph/output/Control.Monad.Trans/index.js","Control.Monad.Writer.Class":"/Users/gene/Programming/pure_morph/output/Control.Monad.Writer.Class/index.js","Control.MonadPlus":"/Users/gene/Programming/pure_morph/output/Control.MonadPlus/index.js","Control.Plus":"/Users/gene/Programming/pure_morph/output/Control.Plus/index.js","Data.Either":"/Users/gene/Programming/pure_morph/output/Data.Either/index.js","Data.Monoid":"/Users/gene/Programming/pure_morph/output/Data.Monoid/index.js","Data.Tuple":"/Users/gene/Programming/pure_morph/output/Data.Tuple/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Control.Monad.RWS.Class/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Monoid = require("Data.Monoid");
var Control_Monad_Trans = require("Control.Monad.Trans");
var Control_Monad_Reader_Class = require("Control.Monad.Reader.Class");
var Control_Monad_State_Class = require("Control.Monad.State.Class");
var Control_Monad_Writer_Class = require("Control.Monad.Writer.Class");
var MonadRWS = function (__superclass_Control$dotMonad$dotReader$dotClass$dotMonadReader_1, __superclass_Control$dotMonad$dotState$dotClass$dotMonadState_3, __superclass_Control$dotMonad$dotWriter$dotClass$dotMonadWriter_2, __superclass_Data$dotMonoid$dotMonoid_0) {
    this["__superclass_Control.Monad.Reader.Class.MonadReader_1"] = __superclass_Control$dotMonad$dotReader$dotClass$dotMonadReader_1;
    this["__superclass_Control.Monad.State.Class.MonadState_3"] = __superclass_Control$dotMonad$dotState$dotClass$dotMonadState_3;
    this["__superclass_Control.Monad.Writer.Class.MonadWriter_2"] = __superclass_Control$dotMonad$dotWriter$dotClass$dotMonadWriter_2;
    this["__superclass_Data.Monoid.Monoid_0"] = __superclass_Data$dotMonoid$dotMonoid_0;
};
module.exports = {
    MonadRWS: MonadRWS
};

},{"Control.Monad.Reader.Class":"/Users/gene/Programming/pure_morph/output/Control.Monad.Reader.Class/index.js","Control.Monad.State.Class":"/Users/gene/Programming/pure_morph/output/Control.Monad.State.Class/index.js","Control.Monad.Trans":"/Users/gene/Programming/pure_morph/output/Control.Monad.Trans/index.js","Control.Monad.Writer.Class":"/Users/gene/Programming/pure_morph/output/Control.Monad.Writer.Class/index.js","Data.Monoid":"/Users/gene/Programming/pure_morph/output/Data.Monoid/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Control.Monad.Reader.Class/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var MonadReader = function (__superclass_Prelude$dotMonad_0, ask, local) {
    this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
    this.ask = ask;
    this.local = local;
};
var monadReaderFun = new MonadReader(function () {
    return Prelude.monadFn;
}, Prelude.id(Prelude.categoryFn), Prelude[">>>"](Prelude.semigroupoidFn));
var local = function (dict) {
    return dict.local;
};
var ask = function (dict) {
    return dict.ask;
};
var reader = function (dictMonadReader) {
    return function (f) {
        return Prelude[">>="]((dictMonadReader["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Bind_1"]())(ask(dictMonadReader))(function ($1) {
            return Prelude["return"]((dictMonadReader["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())(f($1));
        });
    };
};
module.exports = {
    MonadReader: MonadReader, 
    reader: reader, 
    local: local, 
    ask: ask, 
    monadReaderFun: monadReaderFun
};

},{"Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Control.Monad.Reader.Trans/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Alt = require("Control.Alt");
var Control_Alternative = require("Control.Alternative");
var Control_Monad_Cont_Class = require("Control.Monad.Cont.Class");
var Control_Monad_Eff_Class = require("Control.Monad.Eff.Class");
var Control_Monad_Error_Class = require("Control.Monad.Error.Class");
var Control_Monad_Reader_Class = require("Control.Monad.Reader.Class");
var Control_Monad_Rec_Class = require("Control.Monad.Rec.Class");
var Control_Monad_State_Class = require("Control.Monad.State.Class");
var Control_Monad_Trans = require("Control.Monad.Trans");
var Control_Monad_Writer_Class = require("Control.Monad.Writer.Class");
var Control_MonadPlus = require("Control.MonadPlus");
var Control_Plus = require("Control.Plus");
var Data_Distributive = require("Data.Distributive");
var Data_Either = require("Data.Either");
var ReaderT = function (x) {
    return x;
};
var runReaderT = function (v) {
    return v;
};
var withReaderT = function (f) {
    return function (m) {
        return ReaderT(function ($27) {
            return runReaderT(m)(f($27));
        });
    };
};
var monadTransReaderT = new Control_Monad_Trans.MonadTrans(function (dictMonad) {
    return function ($28) {
        return ReaderT(Prelude["const"]($28));
    };
});
var mapReaderT = function (f) {
    return function (m) {
        return ReaderT(function ($29) {
            return f(runReaderT(m)($29));
        });
    };
};
var functorReaderT = function (dictFunctor) {
    return new Prelude.Functor(function (f) {
        return mapReaderT(Prelude["<$>"](dictFunctor)(f));
    });
};
var distributiveReaderT = function (dictDistributive) {
    return new Data_Distributive.Distributive(function () {
        return functorReaderT(dictDistributive["__superclass_Prelude.Functor_0"]());
    }, function (dictFunctor) {
        return function (f) {
            return function ($30) {
                return Data_Distributive.distribute(distributiveReaderT(dictDistributive))(dictFunctor)(Prelude.map(dictFunctor)(f)($30));
            };
        };
    }, function (dictFunctor) {
        return function (a) {
            return function (e) {
                return Data_Distributive.collect(dictDistributive)(dictFunctor)(Prelude.flip(runReaderT)(e))(a);
            };
        };
    });
};
var applyReaderT = function (dictApplicative) {
    return new Prelude.Apply(function () {
        return functorReaderT((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
    }, function (f) {
        return function (v) {
            return function (r) {
                return Prelude["<*>"](dictApplicative["__superclass_Prelude.Apply_0"]())(runReaderT(f)(r))(runReaderT(v)(r));
            };
        };
    });
};
var bindReaderT = function (dictMonad) {
    return new Prelude.Bind(function () {
        return applyReaderT(dictMonad["__superclass_Prelude.Applicative_0"]());
    }, function (m) {
        return function (k) {
            return function (r) {
                return Prelude.bind(dictMonad["__superclass_Prelude.Bind_1"]())(runReaderT(m)(r))(function (v) {
                    return runReaderT(k(v))(r);
                });
            };
        };
    });
};
var applicativeReaderT = function (dictApplicative) {
    return new Prelude.Applicative(function () {
        return applyReaderT(dictApplicative);
    }, function ($31) {
        return ReaderT(Prelude["const"](Prelude.pure(dictApplicative)($31)));
    });
};
var monadReaderT = function (dictMonad) {
    return new Prelude.Monad(function () {
        return applicativeReaderT(dictMonad["__superclass_Prelude.Applicative_0"]());
    }, function () {
        return bindReaderT(dictMonad);
    });
};
var monadContReaderT = function (dictMonadCont) {
    return new Control_Monad_Cont_Class.MonadCont(function () {
        return monadReaderT(dictMonadCont["__superclass_Prelude.Monad_0"]());
    }, function (f) {
        return ReaderT(function (r) {
            return Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
                return runReaderT(f(function (a) {
                    return ReaderT(Prelude["const"](c(a)));
                }))(r);
            });
        });
    });
};
var monadEffReader = function (dictMonadEff) {
    return new Control_Monad_Eff_Class.MonadEff(function () {
        return monadReaderT(dictMonadEff["__superclass_Prelude.Monad_0"]());
    }, function ($32) {
        return Control_Monad_Trans.lift(monadTransReaderT)(dictMonadEff["__superclass_Prelude.Monad_0"]())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($32));
    });
};
var monadErrorReaderT = function (dictMonadError) {
    return new Control_Monad_Error_Class.MonadError(function () {
        return monadReaderT(dictMonadError["__superclass_Prelude.Monad_0"]());
    }, function (m) {
        return function (h) {
            return ReaderT(function (r) {
                return Control_Monad_Error_Class.catchError(dictMonadError)(runReaderT(m)(r))(function (e) {
                    return runReaderT(h(e))(r);
                });
            });
        };
    }, function (e) {
        return Control_Monad_Trans.lift(monadTransReaderT)(dictMonadError["__superclass_Prelude.Monad_0"]())(Control_Monad_Error_Class.throwError(dictMonadError)(e));
    });
};
var monadReaderReaderT = function (dictMonad) {
    return new Control_Monad_Reader_Class.MonadReader(function () {
        return monadReaderT(dictMonad);
    }, Prelude["return"](dictMonad["__superclass_Prelude.Applicative_0"]()), withReaderT);
};
var monadRecReaderT = function (dictMonadRec) {
    return new Control_Monad_Rec_Class.MonadRec(function () {
        return monadReaderT(dictMonadRec["__superclass_Prelude.Monad_0"]());
    }, function (k) {
        return function (a) {
            var k$prime = function (r) {
                return function (a1) {
                    return Prelude.bind((dictMonadRec["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Bind_1"]())(runReaderT(k(a1))(r))(function (v) {
                        return Prelude["return"]((dictMonadRec["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())(Data_Either.either(Data_Either.Left.create)(Data_Either.Right.create)(v));
                    });
                };
            };
            return function (r) {
                return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(k$prime(r))(a);
            };
        };
    });
};
var monadStateReaderT = function (dictMonadState) {
    return new Control_Monad_State_Class.MonadState(function () {
        return monadReaderT(dictMonadState["__superclass_Prelude.Monad_0"]());
    }, function (f) {
        return Control_Monad_Trans.lift(monadTransReaderT)(dictMonadState["__superclass_Prelude.Monad_0"]())(Control_Monad_State_Class.state(dictMonadState)(f));
    });
};
var monadWriterReaderT = function (dictMonad) {
    return function (dictMonadWriter) {
        return new Control_Monad_Writer_Class.MonadWriter(function () {
            return monadReaderT(dictMonad);
        }, mapReaderT(Control_Monad_Writer_Class.listen(dictMonadWriter)), mapReaderT(Control_Monad_Writer_Class.pass(dictMonadWriter)), function (wd) {
            return Control_Monad_Trans.lift(monadTransReaderT)(dictMonad)(Control_Monad_Writer_Class.writer(dictMonadWriter)(wd));
        });
    };
};
var altReaderT = function (dictAlt) {
    return new Control_Alt.Alt(function () {
        return functorReaderT(dictAlt["__superclass_Prelude.Functor_0"]());
    }, function (m) {
        return function (n) {
            return function (r) {
                return Control_Alt["<|>"](dictAlt)(runReaderT(m)(r))(runReaderT(n)(r));
            };
        };
    });
};
var plusReaderT = function (dictPlus) {
    return new Control_Plus.Plus(function () {
        return altReaderT(dictPlus["__superclass_Control.Alt.Alt_0"]());
    }, Prelude["const"](Control_Plus.empty(dictPlus)));
};
var alternativeReaderT = function (dictAlternative) {
    return new Control_Alternative.Alternative(function () {
        return plusReaderT(dictAlternative["__superclass_Control.Plus.Plus_1"]());
    }, function () {
        return applicativeReaderT(dictAlternative["__superclass_Prelude.Applicative_0"]());
    });
};
var monadPlusReaderT = function (dictMonadPlus) {
    return new Control_MonadPlus.MonadPlus(function () {
        return alternativeReaderT(dictMonadPlus["__superclass_Control.Alternative.Alternative_1"]());
    }, function () {
        return monadReaderT(dictMonadPlus["__superclass_Prelude.Monad_0"]());
    });
};
module.exports = {
    ReaderT: ReaderT, 
    mapReaderT: mapReaderT, 
    withReaderT: withReaderT, 
    runReaderT: runReaderT, 
    functorReaderT: functorReaderT, 
    applyReaderT: applyReaderT, 
    applicativeReaderT: applicativeReaderT, 
    altReaderT: altReaderT, 
    plusReaderT: plusReaderT, 
    alternativeReaderT: alternativeReaderT, 
    bindReaderT: bindReaderT, 
    monadReaderT: monadReaderT, 
    monadPlusReaderT: monadPlusReaderT, 
    monadTransReaderT: monadTransReaderT, 
    monadEffReader: monadEffReader, 
    monadContReaderT: monadContReaderT, 
    monadErrorReaderT: monadErrorReaderT, 
    monadReaderReaderT: monadReaderReaderT, 
    monadStateReaderT: monadStateReaderT, 
    monadWriterReaderT: monadWriterReaderT, 
    distributiveReaderT: distributiveReaderT, 
    monadRecReaderT: monadRecReaderT
};

},{"Control.Alt":"/Users/gene/Programming/pure_morph/output/Control.Alt/index.js","Control.Alternative":"/Users/gene/Programming/pure_morph/output/Control.Alternative/index.js","Control.Monad.Cont.Class":"/Users/gene/Programming/pure_morph/output/Control.Monad.Cont.Class/index.js","Control.Monad.Eff.Class":"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff.Class/index.js","Control.Monad.Error.Class":"/Users/gene/Programming/pure_morph/output/Control.Monad.Error.Class/index.js","Control.Monad.Reader.Class":"/Users/gene/Programming/pure_morph/output/Control.Monad.Reader.Class/index.js","Control.Monad.Rec.Class":"/Users/gene/Programming/pure_morph/output/Control.Monad.Rec.Class/index.js","Control.Monad.State.Class":"/Users/gene/Programming/pure_morph/output/Control.Monad.State.Class/index.js","Control.Monad.Trans":"/Users/gene/Programming/pure_morph/output/Control.Monad.Trans/index.js","Control.Monad.Writer.Class":"/Users/gene/Programming/pure_morph/output/Control.Monad.Writer.Class/index.js","Control.MonadPlus":"/Users/gene/Programming/pure_morph/output/Control.MonadPlus/index.js","Control.Plus":"/Users/gene/Programming/pure_morph/output/Control.Plus/index.js","Data.Distributive":"/Users/gene/Programming/pure_morph/output/Data.Distributive/index.js","Data.Either":"/Users/gene/Programming/pure_morph/output/Data.Either/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Control.Monad.Rec.Class/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Control_Monad_ST = require("Control.Monad.ST");
var Data_Either = require("Data.Either");
var Data_Functor = require("Data.Functor");
var Data_Identity = require("Data.Identity");
var Control_Monad_Eff_Unsafe = require("Control.Monad.Eff.Unsafe");
var Data_Either_Unsafe = require("Data.Either.Unsafe");
var MonadRec = function (__superclass_Prelude$dotMonad_0, tailRecM) {
    this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
    this.tailRecM = tailRecM;
};
var tailRecM = function (dict) {
    return dict.tailRecM;
};
var tailRecM2 = function (dictMonadRec) {
    return function (f) {
        return function (a) {
            return function (b) {
                return tailRecM(dictMonadRec)(function (o) {
                    return f(o.a)(o.b);
                })({
                    a: a, 
                    b: b
                });
            };
        };
    };
};
var tailRecM3 = function (dictMonadRec) {
    return function (f) {
        return function (a) {
            return function (b) {
                return function (c) {
                    return tailRecM(dictMonadRec)(function (o) {
                        return f(o.a)(o.b)(o.c);
                    })({
                        a: a, 
                        b: b, 
                        c: c
                    });
                };
            };
        };
    };
};
var tailRecEff = function (f) {
    return function (a) {
        var f$prime = function ($18) {
            return Control_Monad_Eff_Unsafe.unsafeInterleaveEff(f($18));
        };
        return function __do() {
            var v = f$prime(a)();
            var v1 = {
                value: v
            };
            (function () {
                while (!(function __do() {
                    var v2 = v1.value;
                    if (v2 instanceof Data_Either.Left) {
                        var v3 = f$prime(v2.value0)();
                        v1.value = v3;
                        return false;
                    };
                    if (v2 instanceof Data_Either.Right) {
                        return true;
                    };
                    throw new Error("Failed pattern match at Control.Monad.Rec.Class line 75, column 1 - line 76, column 1: " + [ v2.constructor.name ]);
                })()) {

                };
                return {};
            })();
            return Prelude["<$>"](Control_Monad_Eff.functorEff)(Data_Either_Unsafe.fromRight)(Control_Monad_ST.readSTRef(v1))();
        };
    };
};
var tailRec = function (f) {
    return function (a) {
        var go = function (__copy_v) {
            var v = __copy_v;
            tco: while (true) {
                if (v instanceof Data_Either.Left) {
                    var __tco_v = f(v.value0);
                    v = __tco_v;
                    continue tco;
                };
                if (v instanceof Data_Either.Right) {
                    return v.value0;
                };
                throw new Error("Failed pattern match at Control.Monad.Rec.Class line 63, column 1 - line 64, column 1: " + [ v.constructor.name ]);
            };
        };
        return go(f(a));
    };
};
var monadRecIdentity = new MonadRec(function () {
    return Data_Identity.monadIdentity;
}, function (f) {
    return function ($19) {
        return Data_Identity.Identity(tailRec(function ($20) {
            return Data_Identity.runIdentity(f($20));
        })($19));
    };
});
var monadRecEff = new MonadRec(function () {
    return Control_Monad_Eff.monadEff;
}, tailRecEff);
var forever = function (dictMonadRec) {
    return function (ma) {
        return tailRecM(dictMonadRec)(function (u) {
            return Data_Functor["<$"]((((dictMonadRec["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Bind_1"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(new Data_Either.Left(u))(ma);
        })(Prelude.unit);
    };
};
module.exports = {
    MonadRec: MonadRec, 
    forever: forever, 
    tailRecM3: tailRecM3, 
    tailRecM2: tailRecM2, 
    tailRecM: tailRecM, 
    tailRec: tailRec, 
    monadRecIdentity: monadRecIdentity, 
    monadRecEff: monadRecEff
};

},{"Control.Monad.Eff":"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff/index.js","Control.Monad.Eff.Unsafe":"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff.Unsafe/index.js","Control.Monad.ST":"/Users/gene/Programming/pure_morph/output/Control.Monad.ST/index.js","Data.Either":"/Users/gene/Programming/pure_morph/output/Data.Either/index.js","Data.Either.Unsafe":"/Users/gene/Programming/pure_morph/output/Data.Either.Unsafe/index.js","Data.Functor":"/Users/gene/Programming/pure_morph/output/Data.Functor/index.js","Data.Identity":"/Users/gene/Programming/pure_morph/output/Data.Identity/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Control.Monad.ST/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Control.Monad.ST

exports.newSTRef = function (val) {
  return function () {
    return { value: val };
  };
};

exports.readSTRef = function (ref) {
  return function () {
    return ref.value;
  };
};

exports.modifySTRef = function (ref) {
  return function (f) {
    return function () {
      /* jshint boss: true */
      return ref.value = f(ref.value);
    };
  };
};

exports.writeSTRef = function (ref) {
  return function (a) {
    return function () {
      /* jshint boss: true */
      return ref.value = a;
    };
  };
};

exports.runST = function (f) {
  return f;
};

},{}],"/Users/gene/Programming/pure_morph/output/Control.Monad.ST/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Control_Monad_Eff = require("Control.Monad.Eff");
var pureST = function (st) {
    return Control_Monad_Eff.runPure($foreign.runST(st));
};
module.exports = {
    pureST: pureST, 
    runST: $foreign.runST, 
    writeSTRef: $foreign.writeSTRef, 
    modifySTRef: $foreign.modifySTRef, 
    readSTRef: $foreign.readSTRef, 
    newSTRef: $foreign.newSTRef
};

},{"./foreign":"/Users/gene/Programming/pure_morph/output/Control.Monad.ST/foreign.js","Control.Monad.Eff":"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Control.Monad.State.Class/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Tuple = require("Data.Tuple");
var MonadState = function (__superclass_Prelude$dotMonad_0, state) {
    this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
    this.state = state;
};
var state = function (dict) {
    return dict.state;
};
var put = function (dictMonadState) {
    return function (s) {
        return state(dictMonadState)(function (v) {
            return new Data_Tuple.Tuple(Prelude.unit, s);
        });
    };
};
var modify = function (dictMonadState) {
    return function (f) {
        return state(dictMonadState)(function (s) {
            return new Data_Tuple.Tuple(Prelude.unit, f(s));
        });
    };
};
var gets = function (dictMonadState) {
    return function (f) {
        return state(dictMonadState)(function (s) {
            return new Data_Tuple.Tuple(f(s), s);
        });
    };
};
var get = function (dictMonadState) {
    return state(dictMonadState)(function (s) {
        return new Data_Tuple.Tuple(s, s);
    });
};
module.exports = {
    MonadState: MonadState, 
    modify: modify, 
    put: put, 
    gets: gets, 
    get: get, 
    state: state
};

},{"Data.Tuple":"/Users/gene/Programming/pure_morph/output/Data.Tuple/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Control.Monad.Trans/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var MonadTrans = function (lift) {
    this.lift = lift;
};
var lift = function (dict) {
    return dict.lift;
};
module.exports = {
    MonadTrans: MonadTrans, 
    lift: lift
};

},{"Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Control.Monad.Writer.Class/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Monoid = require("Data.Monoid");
var Data_Tuple = require("Data.Tuple");
var MonadWriter = function (__superclass_Prelude$dotMonad_0, listen, pass, writer) {
    this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
    this.listen = listen;
    this.pass = pass;
    this.writer = writer;
};
var writer = function (dict) {
    return dict.writer;
};
var tell = function (dictMonoid) {
    return function (dictMonad) {
        return function (dictMonadWriter) {
            return function (w) {
                return writer(dictMonadWriter)(new Data_Tuple.Tuple(Prelude.unit, w));
            };
        };
    };
};
var pass = function (dict) {
    return dict.pass;
};
var listen = function (dict) {
    return dict.listen;
};
var listens = function (dictMonoid) {
    return function (dictMonad) {
        return function (dictMonadWriter) {
            return function (f) {
                return function (m) {
                    return Prelude.bind(dictMonad["__superclass_Prelude.Bind_1"]())(listen(dictMonadWriter)(m))(function (v) {
                        return Prelude["return"](dictMonad["__superclass_Prelude.Applicative_0"]())(new Data_Tuple.Tuple(v.value0, f(v.value1)));
                    });
                };
            };
        };
    };
};
var censor = function (dictMonoid) {
    return function (dictMonad) {
        return function (dictMonadWriter) {
            return function (f) {
                return function (m) {
                    return pass(dictMonadWriter)(Prelude.bind(dictMonad["__superclass_Prelude.Bind_1"]())(m)(function (v) {
                        return Prelude["return"](dictMonad["__superclass_Prelude.Applicative_0"]())(new Data_Tuple.Tuple(v, f));
                    }));
                };
            };
        };
    };
};
module.exports = {
    MonadWriter: MonadWriter, 
    censor: censor, 
    listens: listens, 
    tell: tell, 
    pass: pass, 
    listen: listen, 
    writer: writer
};

},{"Data.Monoid":"/Users/gene/Programming/pure_morph/output/Data.Monoid/index.js","Data.Tuple":"/Users/gene/Programming/pure_morph/output/Data.Tuple/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Control.Monad/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var when = function (dictMonad) {
    return function (v) {
        return function (v1) {
            if (v) {
                return v1;
            };
            if (!v) {
                return Prelude["return"](dictMonad["__superclass_Prelude.Applicative_0"]())(Prelude.unit);
            };
            throw new Error("Failed pattern match at Control.Monad line 8, column 1 - line 9, column 1: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
};
var unless = function (dictMonad) {
    return function (v) {
        return function (v1) {
            if (!v) {
                return v1;
            };
            if (v) {
                return Prelude["return"](dictMonad["__superclass_Prelude.Applicative_0"]())(Prelude.unit);
            };
            throw new Error("Failed pattern match at Control.Monad line 13, column 1 - line 14, column 1: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
};
module.exports = {
    unless: unless, 
    when: when
};

},{"Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Control.MonadPlus/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Alternative = require("Control.Alternative");
var Control_Plus = require("Control.Plus");
var MonadPlus = function (__superclass_Control$dotAlternative$dotAlternative_1, __superclass_Prelude$dotMonad_0) {
    this["__superclass_Control.Alternative.Alternative_1"] = __superclass_Control$dotAlternative$dotAlternative_1;
    this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
};
var monadPlusArray = new MonadPlus(function () {
    return Control_Alternative.alternativeArray;
}, function () {
    return Prelude.monadArray;
});
var guard = function (dictMonadPlus) {
    return function (v) {
        if (v) {
            return Prelude["return"]((dictMonadPlus["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Prelude.Applicative_0"]())(Prelude.unit);
        };
        if (!v) {
            return Control_Plus.empty((dictMonadPlus["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Control.Plus.Plus_1"]());
        };
        throw new Error("Failed pattern match at Control.MonadPlus line 35, column 1 - line 36, column 1: " + [ v.constructor.name ]);
    };
};
module.exports = {
    MonadPlus: MonadPlus, 
    guard: guard, 
    monadPlusArray: monadPlusArray
};

},{"Control.Alternative":"/Users/gene/Programming/pure_morph/output/Control.Alternative/index.js","Control.Plus":"/Users/gene/Programming/pure_morph/output/Control.Plus/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Control.Plus/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Alt = require("Control.Alt");
var Plus = function (__superclass_Control$dotAlt$dotAlt_0, empty) {
    this["__superclass_Control.Alt.Alt_0"] = __superclass_Control$dotAlt$dotAlt_0;
    this.empty = empty;
};
var plusArray = new Plus(function () {
    return Control_Alt.altArray;
}, [  ]);
var empty = function (dict) {
    return dict.empty;
};
module.exports = {
    Plus: Plus, 
    empty: empty, 
    plusArray: plusArray
};

},{"Control.Alt":"/Users/gene/Programming/pure_morph/output/Control.Alt/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/DOM.Event.Types/foreign.js":[function(require,module,exports){
/* global exports, EventTarget */
"use strict";

// module DOM.Event.Types

exports._readEventTarget = function (left) {
  return function (right) {
    return function (foreign) {
      return foreign instanceof EventTarget ? left("Value is not an EventTarget") : right(foreign);
    };
  };
};

},{}],"/Users/gene/Programming/pure_morph/output/DOM.Event.Types/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Either = require("Data.Either");
var Data_Foreign = require("Data.Foreign");
var Data_Foreign_Class = require("Data.Foreign.Class");
var Unsafe_Coerce = require("Unsafe.Coerce");
var EventType = function (x) {
    return x;
};
var unsafeToEvent = Unsafe_Coerce.unsafeCoerce;
var userProximityEventToEvent = unsafeToEvent;
var wheelEventToEvent = unsafeToEvent;
var uiEventToEvent = unsafeToEvent;
var transitionEventToEvent = unsafeToEvent;
var touchEventToEvent = unsafeToEvent;
var timeEventToEvent = unsafeToEvent;
var svgZoomEventToEvent = unsafeToEvent;
var svgEventToEvent = unsafeToEvent;
var storageEventToEvent = unsafeToEvent;
var sensorEventToEvent = unsafeToEvent;
var rtcPeerConnectionIceEventToEvent = unsafeToEvent;
var rtcIdentityEventToEvent = unsafeToEvent;
var rtcIdentityErrorEventToEvent = unsafeToEvent;
var rtcDataChannelEventToEvent = unsafeToEvent;
var relatedEventToEvent = unsafeToEvent;
var readWheelEvent = Data_Foreign.unsafeReadTagged("WheelEvent");
var readUserProximityEvent = Data_Foreign.unsafeReadTagged("UserProximityEvent");
var readUIEvent = Data_Foreign.unsafeReadTagged("UIEvent");
var readTransitionEvent = Data_Foreign.unsafeReadTagged("TransitionEvent");
var readTouchEvent = Data_Foreign.unsafeReadTagged("TouchEvent");
var readTimeEvent = Data_Foreign.unsafeReadTagged("TimeEvent");
var readStorageEvent = Data_Foreign.unsafeReadTagged("StorageEvent");
var readSensorEvent = Data_Foreign.unsafeReadTagged("SensorEvent");
var readSVGZoomEvent = Data_Foreign.unsafeReadTagged("SVGZoomEvent");
var readSVGEvent = Data_Foreign.unsafeReadTagged("SVGEvent");
var readRelatedEvent = Data_Foreign.unsafeReadTagged("RelatedEvent");
var readRTCPeerConnectionIceEvent = Data_Foreign.unsafeReadTagged("RTCPeerConnectionIceEvent");
var readRTCIdentityEvent = Data_Foreign.unsafeReadTagged("RTCIdentityEvent");
var readRTCIdentityErrorEvent = Data_Foreign.unsafeReadTagged("RTCIdentityErrorEvent");
var readRTCDataChannelEvent = Data_Foreign.unsafeReadTagged("RTCDataChannelEvent");
var readProgressEvent = Data_Foreign.unsafeReadTagged("ProgressEvent");
var readPopStateEvent = Data_Foreign.unsafeReadTagged("PopStateEvent");
var readPointerEvent = Data_Foreign.unsafeReadTagged("PointerEvent");
var readPageTransitionEvent = Data_Foreign.unsafeReadTagged("PageTransitionEvent");
var readOfflineAudioCompletionEvent = Data_Foreign.unsafeReadTagged("OfflineAudioCompletionEvent");
var readMutationEvent = Data_Foreign.unsafeReadTagged("MutationEvent");
var readMouseEvent = Data_Foreign.unsafeReadTagged("MouseEvent");
var readMessageEvent = Data_Foreign.unsafeReadTagged("MessageEvent");
var readMediaStreamEvent = Data_Foreign.unsafeReadTagged("MediaStreamEvent");
var readKeyboardEvent = Data_Foreign.unsafeReadTagged("KeyboardEvent");
var readInputEvent = Data_Foreign.unsafeReadTagged("InputEvent");
var readIDBVersionChangeEvent = Data_Foreign.unsafeReadTagged("IDBVersionChangeEvent");
var readHashChangeEvent = Data_Foreign.unsafeReadTagged("HashChangeEvent");
var readGamepadEvent = Data_Foreign.unsafeReadTagged("GamepadEvent");
var readFocusEvent = Data_Foreign.unsafeReadTagged("FocusEvent");
var readFetchEvent = Data_Foreign.unsafeReadTagged("FetchEvent");
var readEventTarget = $foreign._readEventTarget(Data_Either.Left.create)(Data_Either.Right.create);
var readErrorEvent = Data_Foreign.unsafeReadTagged("ErrorEvent");
var readEditingBeforeInputEvent = Data_Foreign.unsafeReadTagged("EditingBeforeInputEvent");
var readDragEvent = Data_Foreign.unsafeReadTagged("DragEvent");
var readDeviceProximityEvent = Data_Foreign.unsafeReadTagged("DeviceProximityEvent");
var readDeviceOrientationEvent = Data_Foreign.unsafeReadTagged("DeviceOrientationEvent");
var readDeviceMotionEvent = Data_Foreign.unsafeReadTagged("DeviceMotionEvent");
var readDeviceLightEvent = Data_Foreign.unsafeReadTagged("DeviceLightEvent");
var readDOMTransactionEvent = Data_Foreign.unsafeReadTagged("DOMTransactionEvent");
var readCustomEvent = Data_Foreign.unsafeReadTagged("CustomEvent");
var readCompositionEvent = Data_Foreign.unsafeReadTagged("CompositionEvent");
var readCloseEvent = Data_Foreign.unsafeReadTagged("CloseEvent");
var readClipboardEvent = Data_Foreign.unsafeReadTagged("ClipboardEvent");
var readCSSFontFaceLoadEvent = Data_Foreign.unsafeReadTagged("CSSFontFaceLoadEvent");
var readBlobEvent = Data_Foreign.unsafeReadTagged("BlobEvent");
var readBeforeUnloadEvent = Data_Foreign.unsafeReadTagged("BeforeUnloadEvent");
var readBeforeInputEvent = Data_Foreign.unsafeReadTagged("BeforeInputEvent");
var readAudioProcessingEvent = Data_Foreign.unsafeReadTagged("AudioProcessingEvent");
var readAnimationEvent = Data_Foreign.unsafeReadTagged("AnimationEvent");
var progressEventToEvent = unsafeToEvent;
var popStateEventToEvent = unsafeToEvent;
var pointerEventToEvent = unsafeToEvent;
var pageTransitionEventToEvent = unsafeToEvent;
var offlineAudioCompletionEventToEvent = unsafeToEvent;
var mutationEventToEvent = unsafeToEvent;
var mouseEventToEvent = unsafeToEvent;
var messageEventToEvent = unsafeToEvent;
var mediaStreamEventToEvent = unsafeToEvent;
var keyboardEventToEvent = unsafeToEvent;
var isForeignWheelEvent = new Data_Foreign_Class.IsForeign(readWheelEvent);
var isForeignUserProximityEvent = new Data_Foreign_Class.IsForeign(readUserProximityEvent);
var isForeignUIEvent = new Data_Foreign_Class.IsForeign(readUIEvent);
var isForeignTransitionEvent = new Data_Foreign_Class.IsForeign(readTransitionEvent);
var isForeignTouchEvent = new Data_Foreign_Class.IsForeign(readTouchEvent);
var isForeignTimeEvent = new Data_Foreign_Class.IsForeign(readTimeEvent);
var isForeignStorageEvent = new Data_Foreign_Class.IsForeign(readStorageEvent);
var isForeignSensorEvent = new Data_Foreign_Class.IsForeign(readSensorEvent);
var isForeignSVGZoomEvent = new Data_Foreign_Class.IsForeign(readSVGZoomEvent);
var isForeignSVGEvent = new Data_Foreign_Class.IsForeign(readSVGEvent);
var isForeignRelatedEvent = new Data_Foreign_Class.IsForeign(readRelatedEvent);
var isForeignRTCPeerConnectionIceEvent = new Data_Foreign_Class.IsForeign(readRTCPeerConnectionIceEvent);
var isForeignRTCIdentityEvent = new Data_Foreign_Class.IsForeign(readRTCIdentityEvent);
var isForeignRTCIdentityErrorEvent = new Data_Foreign_Class.IsForeign(readRTCIdentityErrorEvent);
var isForeignRTCDataChannelEvent = new Data_Foreign_Class.IsForeign(readRTCDataChannelEvent);
var isForeignProgressEvent = new Data_Foreign_Class.IsForeign(readProgressEvent);
var isForeignPopStateEvent = new Data_Foreign_Class.IsForeign(readPopStateEvent);
var isForeignPointerEvent = new Data_Foreign_Class.IsForeign(readPointerEvent);
var isForeignPageTransitionEvent = new Data_Foreign_Class.IsForeign(readPageTransitionEvent);
var isForeignOfflineAudioCompletionEvent = new Data_Foreign_Class.IsForeign(readOfflineAudioCompletionEvent);
var isForeignMutationEvent = new Data_Foreign_Class.IsForeign(readMutationEvent);
var isForeignMouseEvent = new Data_Foreign_Class.IsForeign(readMouseEvent);
var isForeignMessageEvent = new Data_Foreign_Class.IsForeign(readMessageEvent);
var isForeignMediaStreamEvent = new Data_Foreign_Class.IsForeign(readMediaStreamEvent);
var isForeignKeyboardEvent = new Data_Foreign_Class.IsForeign(readKeyboardEvent);
var isForeignInputEvent = new Data_Foreign_Class.IsForeign(readInputEvent);
var isForeignIDBVersionChangeEvent = new Data_Foreign_Class.IsForeign(readIDBVersionChangeEvent);
var isForeignHashChangeEvent = new Data_Foreign_Class.IsForeign(readHashChangeEvent);
var isForeignGamepadEvent = new Data_Foreign_Class.IsForeign(readGamepadEvent);
var isForeignFocusEvent = new Data_Foreign_Class.IsForeign(readFocusEvent);
var isForeignFetchEvent = new Data_Foreign_Class.IsForeign(readFetchEvent);
var isForeignEventTarget = new Data_Foreign_Class.IsForeign(readEventTarget);
var isForeignErrorEvent = new Data_Foreign_Class.IsForeign(readErrorEvent);
var isForeignEditingBeforeInputEvent = new Data_Foreign_Class.IsForeign(readEditingBeforeInputEvent);
var isForeignDragEvent = new Data_Foreign_Class.IsForeign(readDragEvent);
var isForeignDeviceProximityEvent = new Data_Foreign_Class.IsForeign(readDeviceProximityEvent);
var isForeignDeviceOrientationEvent = new Data_Foreign_Class.IsForeign(readDeviceOrientationEvent);
var isForeignDeviceMotionEvent = new Data_Foreign_Class.IsForeign(readDeviceMotionEvent);
var isForeignDeviceLightEvent = new Data_Foreign_Class.IsForeign(readDeviceLightEvent);
var isForeignDOMTransactionEvent = new Data_Foreign_Class.IsForeign(readDOMTransactionEvent);
var isForeignCustomEvent = new Data_Foreign_Class.IsForeign(readCustomEvent);
var isForeignCompositionEvent = new Data_Foreign_Class.IsForeign(readCompositionEvent);
var isForeignCloseEvent = new Data_Foreign_Class.IsForeign(readCloseEvent);
var isForeignClipboardEvent = new Data_Foreign_Class.IsForeign(readClipboardEvent);
var isForeignCSSFontFaceLoadEvent = new Data_Foreign_Class.IsForeign(readCSSFontFaceLoadEvent);
var isForeignBlobEvent = new Data_Foreign_Class.IsForeign(readBlobEvent);
var isForeignBeforeUnloadEvent = new Data_Foreign_Class.IsForeign(readBeforeUnloadEvent);
var isForeignBeforeInputEvent = new Data_Foreign_Class.IsForeign(readBeforeInputEvent);
var isForeignAudioProcessingEvent = new Data_Foreign_Class.IsForeign(readAudioProcessingEvent);
var isForeignAnimationEvent = new Data_Foreign_Class.IsForeign(readAnimationEvent);
var inputEventToEvent = unsafeToEvent;
var idbVersionChangeEventToEvent = unsafeToEvent;
var hashChangeEventToEvent = unsafeToEvent;
var gamepadEventToEvent = unsafeToEvent;
var focusEventToEvent = unsafeToEvent;
var fetchEventToEvent = unsafeToEvent;
var errorEventToEvent = unsafeToEvent;
var eqEventType = new Prelude.Eq(function (v) {
    return function (v1) {
        return v === v1;
    };
});
var ordEventType = new Prelude.Ord(function () {
    return eqEventType;
}, function (v) {
    return function (v1) {
        return Prelude.compare(Prelude.ordString)(v)(v1);
    };
});
var editingBeforeInputEventToEvent = unsafeToEvent;
var dragEventToEvent = unsafeToEvent;
var domTransactionEventToEvent = unsafeToEvent;
var deviceProximityEventToEvent = unsafeToEvent;
var deviceOrientationEventToEvent = unsafeToEvent;
var deviceMotionEventToEvent = unsafeToEvent;
var deviceLightEventToEvent = unsafeToEvent;
var customEventToEvent = unsafeToEvent;
var cssFontFaceLoadEventToEvent = unsafeToEvent;
var compositionEventToEvent = unsafeToEvent;
var closeEventToEvent = unsafeToEvent;
var clipboardEventToEvent = unsafeToEvent;
var blobEventToEvent = unsafeToEvent;
var beforeUnloadEventToEvent = unsafeToEvent;
var beforeInputEventToEvent = unsafeToEvent;
var audioProcessingEventToEvent = unsafeToEvent;
var animationEventToEvent = unsafeToEvent;
module.exports = {
    EventType: EventType, 
    readWheelEvent: readWheelEvent, 
    wheelEventToEvent: wheelEventToEvent, 
    readUserProximityEvent: readUserProximityEvent, 
    userProximityEventToEvent: userProximityEventToEvent, 
    readUIEvent: readUIEvent, 
    uiEventToEvent: uiEventToEvent, 
    readTransitionEvent: readTransitionEvent, 
    transitionEventToEvent: transitionEventToEvent, 
    readTouchEvent: readTouchEvent, 
    touchEventToEvent: touchEventToEvent, 
    readTimeEvent: readTimeEvent, 
    timeEventToEvent: timeEventToEvent, 
    readSVGZoomEvent: readSVGZoomEvent, 
    svgZoomEventToEvent: svgZoomEventToEvent, 
    readSVGEvent: readSVGEvent, 
    svgEventToEvent: svgEventToEvent, 
    readStorageEvent: readStorageEvent, 
    storageEventToEvent: storageEventToEvent, 
    readSensorEvent: readSensorEvent, 
    sensorEventToEvent: sensorEventToEvent, 
    readRTCPeerConnectionIceEvent: readRTCPeerConnectionIceEvent, 
    rtcPeerConnectionIceEventToEvent: rtcPeerConnectionIceEventToEvent, 
    readRTCIdentityEvent: readRTCIdentityEvent, 
    rtcIdentityEventToEvent: rtcIdentityEventToEvent, 
    readRTCIdentityErrorEvent: readRTCIdentityErrorEvent, 
    rtcIdentityErrorEventToEvent: rtcIdentityErrorEventToEvent, 
    readRTCDataChannelEvent: readRTCDataChannelEvent, 
    rtcDataChannelEventToEvent: rtcDataChannelEventToEvent, 
    readRelatedEvent: readRelatedEvent, 
    relatedEventToEvent: relatedEventToEvent, 
    readProgressEvent: readProgressEvent, 
    progressEventToEvent: progressEventToEvent, 
    readPopStateEvent: readPopStateEvent, 
    popStateEventToEvent: popStateEventToEvent, 
    readPointerEvent: readPointerEvent, 
    pointerEventToEvent: pointerEventToEvent, 
    readPageTransitionEvent: readPageTransitionEvent, 
    pageTransitionEventToEvent: pageTransitionEventToEvent, 
    readOfflineAudioCompletionEvent: readOfflineAudioCompletionEvent, 
    offlineAudioCompletionEventToEvent: offlineAudioCompletionEventToEvent, 
    readMutationEvent: readMutationEvent, 
    mutationEventToEvent: mutationEventToEvent, 
    readMouseEvent: readMouseEvent, 
    mouseEventToEvent: mouseEventToEvent, 
    readMessageEvent: readMessageEvent, 
    messageEventToEvent: messageEventToEvent, 
    readMediaStreamEvent: readMediaStreamEvent, 
    mediaStreamEventToEvent: mediaStreamEventToEvent, 
    readKeyboardEvent: readKeyboardEvent, 
    keyboardEventToEvent: keyboardEventToEvent, 
    readInputEvent: readInputEvent, 
    inputEventToEvent: inputEventToEvent, 
    readIDBVersionChangeEvent: readIDBVersionChangeEvent, 
    idbVersionChangeEventToEvent: idbVersionChangeEventToEvent, 
    readHashChangeEvent: readHashChangeEvent, 
    hashChangeEventToEvent: hashChangeEventToEvent, 
    readGamepadEvent: readGamepadEvent, 
    gamepadEventToEvent: gamepadEventToEvent, 
    readFocusEvent: readFocusEvent, 
    focusEventToEvent: focusEventToEvent, 
    readFetchEvent: readFetchEvent, 
    fetchEventToEvent: fetchEventToEvent, 
    readErrorEvent: readErrorEvent, 
    errorEventToEvent: errorEventToEvent, 
    readEditingBeforeInputEvent: readEditingBeforeInputEvent, 
    editingBeforeInputEventToEvent: editingBeforeInputEventToEvent, 
    readDragEvent: readDragEvent, 
    dragEventToEvent: dragEventToEvent, 
    readDOMTransactionEvent: readDOMTransactionEvent, 
    domTransactionEventToEvent: domTransactionEventToEvent, 
    readDeviceProximityEvent: readDeviceProximityEvent, 
    deviceProximityEventToEvent: deviceProximityEventToEvent, 
    readDeviceOrientationEvent: readDeviceOrientationEvent, 
    deviceOrientationEventToEvent: deviceOrientationEventToEvent, 
    readDeviceMotionEvent: readDeviceMotionEvent, 
    deviceMotionEventToEvent: deviceMotionEventToEvent, 
    readDeviceLightEvent: readDeviceLightEvent, 
    deviceLightEventToEvent: deviceLightEventToEvent, 
    readCustomEvent: readCustomEvent, 
    customEventToEvent: customEventToEvent, 
    readCSSFontFaceLoadEvent: readCSSFontFaceLoadEvent, 
    cssFontFaceLoadEventToEvent: cssFontFaceLoadEventToEvent, 
    readCompositionEvent: readCompositionEvent, 
    compositionEventToEvent: compositionEventToEvent, 
    readCloseEvent: readCloseEvent, 
    closeEventToEvent: closeEventToEvent, 
    readClipboardEvent: readClipboardEvent, 
    clipboardEventToEvent: clipboardEventToEvent, 
    readBlobEvent: readBlobEvent, 
    blobEventToEvent: blobEventToEvent, 
    readBeforeUnloadEvent: readBeforeUnloadEvent, 
    beforeUnloadEventToEvent: beforeUnloadEventToEvent, 
    readBeforeInputEvent: readBeforeInputEvent, 
    beforeInputEventToEvent: beforeInputEventToEvent, 
    readAudioProcessingEvent: readAudioProcessingEvent, 
    audioProcessingEventToEvent: audioProcessingEventToEvent, 
    readAnimationEvent: readAnimationEvent, 
    animationEventToEvent: animationEventToEvent, 
    readEventTarget: readEventTarget, 
    eqEventType: eqEventType, 
    ordEventType: ordEventType, 
    isForeignEventTarget: isForeignEventTarget, 
    isForeignAnimationEvent: isForeignAnimationEvent, 
    isForeignAudioProcessingEvent: isForeignAudioProcessingEvent, 
    isForeignBeforeInputEvent: isForeignBeforeInputEvent, 
    isForeignBeforeUnloadEvent: isForeignBeforeUnloadEvent, 
    isForeignBlobEvent: isForeignBlobEvent, 
    isForeignClipboardEvent: isForeignClipboardEvent, 
    isForeignCloseEvent: isForeignCloseEvent, 
    isForeignCompositionEvent: isForeignCompositionEvent, 
    isForeignCSSFontFaceLoadEvent: isForeignCSSFontFaceLoadEvent, 
    isForeignCustomEvent: isForeignCustomEvent, 
    isForeignDeviceLightEvent: isForeignDeviceLightEvent, 
    isForeignDeviceMotionEvent: isForeignDeviceMotionEvent, 
    isForeignDeviceOrientationEvent: isForeignDeviceOrientationEvent, 
    isForeignDeviceProximityEvent: isForeignDeviceProximityEvent, 
    isForeignDOMTransactionEvent: isForeignDOMTransactionEvent, 
    isForeignDragEvent: isForeignDragEvent, 
    isForeignEditingBeforeInputEvent: isForeignEditingBeforeInputEvent, 
    isForeignErrorEvent: isForeignErrorEvent, 
    isForeignFetchEvent: isForeignFetchEvent, 
    isForeignFocusEvent: isForeignFocusEvent, 
    isForeignGamepadEvent: isForeignGamepadEvent, 
    isForeignHashChangeEvent: isForeignHashChangeEvent, 
    isForeignIDBVersionChangeEvent: isForeignIDBVersionChangeEvent, 
    isForeignInputEvent: isForeignInputEvent, 
    isForeignKeyboardEvent: isForeignKeyboardEvent, 
    isForeignMediaStreamEvent: isForeignMediaStreamEvent, 
    isForeignMessageEvent: isForeignMessageEvent, 
    isForeignMouseEvent: isForeignMouseEvent, 
    isForeignMutationEvent: isForeignMutationEvent, 
    isForeignOfflineAudioCompletionEvent: isForeignOfflineAudioCompletionEvent, 
    isForeignPageTransitionEvent: isForeignPageTransitionEvent, 
    isForeignPointerEvent: isForeignPointerEvent, 
    isForeignPopStateEvent: isForeignPopStateEvent, 
    isForeignProgressEvent: isForeignProgressEvent, 
    isForeignRelatedEvent: isForeignRelatedEvent, 
    isForeignRTCDataChannelEvent: isForeignRTCDataChannelEvent, 
    isForeignRTCIdentityErrorEvent: isForeignRTCIdentityErrorEvent, 
    isForeignRTCIdentityEvent: isForeignRTCIdentityEvent, 
    isForeignRTCPeerConnectionIceEvent: isForeignRTCPeerConnectionIceEvent, 
    isForeignSensorEvent: isForeignSensorEvent, 
    isForeignStorageEvent: isForeignStorageEvent, 
    isForeignSVGEvent: isForeignSVGEvent, 
    isForeignSVGZoomEvent: isForeignSVGZoomEvent, 
    isForeignTimeEvent: isForeignTimeEvent, 
    isForeignTouchEvent: isForeignTouchEvent, 
    isForeignTransitionEvent: isForeignTransitionEvent, 
    isForeignUIEvent: isForeignUIEvent, 
    isForeignUserProximityEvent: isForeignUserProximityEvent, 
    isForeignWheelEvent: isForeignWheelEvent
};

},{"./foreign":"/Users/gene/Programming/pure_morph/output/DOM.Event.Types/foreign.js","Data.Either":"/Users/gene/Programming/pure_morph/output/Data.Either/index.js","Data.Foreign":"/Users/gene/Programming/pure_morph/output/Data.Foreign/index.js","Data.Foreign.Class":"/Users/gene/Programming/pure_morph/output/Data.Foreign.Class/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js","Unsafe.Coerce":"/Users/gene/Programming/pure_morph/output/Unsafe.Coerce/index.js"}],"/Users/gene/Programming/pure_morph/output/DOM.Node.Types/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var DOM_Event_Types = require("DOM.Event.Types");
var Unsafe_Coerce = require("Unsafe.Coerce");
var ElementId = function (x) {
    return x;
};
var textToNode = Unsafe_Coerce.unsafeCoerce;
var processingInstructionToNode = Unsafe_Coerce.unsafeCoerce;
var elementToParentNode = Unsafe_Coerce.unsafeCoerce;
var elementToNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var elementToNode = Unsafe_Coerce.unsafeCoerce;
var elementToEventTarget = Unsafe_Coerce.unsafeCoerce;
var documentTypeToNode = Unsafe_Coerce.unsafeCoerce;
var documentToParentNode = Unsafe_Coerce.unsafeCoerce;
var documentToNonElementParentNode = Unsafe_Coerce.unsafeCoerce;
var documentToNode = Unsafe_Coerce.unsafeCoerce;
var documentToEventTarget = Unsafe_Coerce.unsafeCoerce;
var documentFragmentToParentNode = Unsafe_Coerce.unsafeCoerce;
var documentFragmentToNonElementParentNode = Unsafe_Coerce.unsafeCoerce;
var documentFragmentToNode = Unsafe_Coerce.unsafeCoerce;
var commentToNode = Unsafe_Coerce.unsafeCoerce;
var characterDataToNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
module.exports = {
    ElementId: ElementId, 
    documentTypeToNode: documentTypeToNode, 
    documentFragmentToNode: documentFragmentToNode, 
    documentFragmentToParentNode: documentFragmentToParentNode, 
    documentFragmentToNonElementParentNode: documentFragmentToNonElementParentNode, 
    processingInstructionToNode: processingInstructionToNode, 
    commentToNode: commentToNode, 
    textToNode: textToNode, 
    characterDataToNonDocumentTypeChildNode: characterDataToNonDocumentTypeChildNode, 
    elementToEventTarget: elementToEventTarget, 
    elementToNode: elementToNode, 
    elementToNonDocumentTypeChildNode: elementToNonDocumentTypeChildNode, 
    elementToParentNode: elementToParentNode, 
    documentToEventTarget: documentToEventTarget, 
    documentToNode: documentToNode, 
    documentToParentNode: documentToParentNode, 
    documentToNonElementParentNode: documentToNonElementParentNode
};

},{"DOM.Event.Types":"/Users/gene/Programming/pure_morph/output/DOM.Event.Types/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js","Unsafe.Coerce":"/Users/gene/Programming/pure_morph/output/Unsafe.Coerce/index.js"}],"/Users/gene/Programming/pure_morph/output/DOM/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
module.exports = {};

},{}],"/Users/gene/Programming/pure_morph/output/Data.Array.ST/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Array.ST

exports.runSTArray = function (f) {
  return f;
};

exports.emptySTArray = function () {
  return [];
};

exports.peekSTArrayImpl = function (just) {
  return function (nothing) {
    return function (xs) {
      return function (i) {
        return function () {
          return i >= 0 && i < xs.length ? just(xs[i]) : nothing;
        };
      };
    };
  };
};

exports.pokeSTArray = function (xs) {
  return function (i) {
    return function (a) {
      return function () {
        var ret = i >= 0 && i < xs.length;
        if (ret) xs[i] = a;
        return ret;
      };
    };
  };
};

exports.pushAllSTArray = function (xs) {
  return function (as) {
    return function () {
      return xs.push.apply(xs, as);
    };
  };
};

exports.spliceSTArray = function (xs) {
  return function (i) {
    return function (howMany) {
      return function (bs) {
        return function () {
          return xs.splice.apply(xs, [i, howMany].concat(bs));
        };
      };
    };
  };
};

exports.copyImpl = function (xs) {
  return function () {
    return xs.slice();
  };
};

exports.toAssocArray = function (xs) {
  return function () {
    var n = xs.length;
    var as = new Array(n);
    for (var i = 0; i < n; i++) as[i] = { value: xs[i], index: i };
    return as;
  };
};

},{}],"/Users/gene/Programming/pure_morph/output/Data.Array.ST/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Control_Monad_ST = require("Control.Monad.ST");
var Data_Maybe = require("Data.Maybe");
var thaw = $foreign.copyImpl;
var pushSTArray = function (arr) {
    return function (a) {
        return $foreign.pushAllSTArray(arr)([ a ]);
    };
};
var peekSTArray = $foreign.peekSTArrayImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var freeze = $foreign.copyImpl;
module.exports = {
    thaw: thaw, 
    freeze: freeze, 
    pushSTArray: pushSTArray, 
    peekSTArray: peekSTArray, 
    toAssocArray: $foreign.toAssocArray, 
    spliceSTArray: $foreign.spliceSTArray, 
    pushAllSTArray: $foreign.pushAllSTArray, 
    pokeSTArray: $foreign.pokeSTArray, 
    emptySTArray: $foreign.emptySTArray, 
    runSTArray: $foreign.runSTArray
};

},{"./foreign":"/Users/gene/Programming/pure_morph/output/Data.Array.ST/foreign.js","Control.Monad.Eff":"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff/index.js","Control.Monad.ST":"/Users/gene/Programming/pure_morph/output/Control.Monad.ST/index.js","Data.Maybe":"/Users/gene/Programming/pure_morph/output/Data.Maybe/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Data.Array/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Array

//------------------------------------------------------------------------------
// Array creation --------------------------------------------------------------
//------------------------------------------------------------------------------

exports.range = function (start) {
  return function (end) {
    var step = start > end ? -1 : 1;
    var result = [];
    for (var i = start, n = 0; i !== end; i += step) {
      result[n++] = i;
    }
    result[n] = i;
    return result;
  };
};

exports.replicate = function (n) {
  return function (v) {
    if (n < 1) return [];
    var r = new Array(n);
    for (var i = 0; i < n; i++) r[i] = v;
    return r;
  };
};

//------------------------------------------------------------------------------
// Array size ------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.length = function (xs) {
  return xs.length;
};

//------------------------------------------------------------------------------
// Extending arrays ------------------------------------------------------------
//------------------------------------------------------------------------------

exports.cons = function (e) {
  return function (l) {
    return [e].concat(l);
  };
};

exports.snoc = function (l) {
  return function (e) {
    var l1 = l.slice();
    l1.push(e);
    return l1;
  };
};

//------------------------------------------------------------------------------
// Non-indexed reads -----------------------------------------------------------
//------------------------------------------------------------------------------

exports["uncons'"] = function (empty) {
  return function (next) {
    return function (xs) {
      return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));
    };
  };
};

//------------------------------------------------------------------------------
// Indexed operations ----------------------------------------------------------
//------------------------------------------------------------------------------

exports.indexImpl = function (just) {
  return function (nothing) {
    return function (xs) {
      return function (i) {
        return i < 0 || i >= xs.length ? nothing :  just(xs[i]);
      };
    };
  };
};

exports.findIndexImpl = function (just) {
  return function (nothing) {
    return function (f) {
      return function (xs) {
        for (var i = 0, l = xs.length; i < l; i++) {
          if (f(xs[i])) return just(i);
        }
        return nothing;
      };
    };
  };
};

exports.findLastIndexImpl = function (just) {
  return function (nothing) {
    return function (f) {
      return function (xs) {
        for (var i = xs.length - 1; i >= 0; i--) {
          if (f(xs[i])) return just(i);
        }
        return nothing;
      };
    };
  };
};

exports._insertAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (a) {
        return function (l) {
          if (i < 0 || i > l.length) return nothing;
          var l1 = l.slice();
          l1.splice(i, 0, a);
          return just(l1);
        };
      };
    };
  };
};

exports._deleteAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (l) {
        if (i < 0 || i >= l.length) return nothing;
        var l1 = l.slice();
        l1.splice(i, 1);
        return just(l1);
      };
    };
  };
};

exports._updateAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (a) {
        return function (l) {
          if (i < 0 || i >= l.length) return nothing;
          var l1 = l.slice();
          l1[i] = a;
          return just(l1);
        };
      };
    };
  };
};

//------------------------------------------------------------------------------
// Transformations -------------------------------------------------------------
//------------------------------------------------------------------------------

exports.reverse = function (l) {
  return l.slice().reverse();
};

exports.concat = function (xss) {
  var result = [];
  for (var i = 0, l = xss.length; i < l; i++) {
    var xs = xss[i];
    for (var j = 0, m = xs.length; j < m; j++) {
      result.push(xs[j]);
    }
  }
  return result;
};

exports.filter = function (f) {
  return function (xs) {
    return xs.filter(f);
  };
};

//------------------------------------------------------------------------------
// Sorting ---------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.sortImpl = function (f) {
  return function (l) {
    /* jshint maxparams: 2 */
    return l.slice().sort(function (x, y) {
      return f(x)(y);
    });
  };
};

//------------------------------------------------------------------------------
// Subarrays -------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.slice = function (s) {
  return function (e) {
    return function (l) {
      return l.slice(s, e);
    };
  };
};

exports.drop = function (n) {
  return function (l) {
    return n < 1 ? l : l.slice(n);
  };
};

//------------------------------------------------------------------------------
// Zipping ---------------------------------------------------------------------
//------------------------------------------------------------------------------

exports.zipWith = function (f) {
  return function (xs) {
    return function (ys) {
      var l = xs.length < ys.length ? xs.length : ys.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(xs[i])(ys[i]);
      }
      return result;
    };
  };
};

},{}],"/Users/gene/Programming/pure_morph/output/Data.Array/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Control_Alt = require("Control.Alt");
var Control_Alternative = require("Control.Alternative");
var Control_Lazy = require("Control.Lazy");
var Control_MonadPlus = require("Control.MonadPlus");
var Control_Plus = require("Control.Plus");
var Data_Foldable = require("Data.Foldable");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Data_Maybe = require("Data.Maybe");
var Data_Monoid = require("Data.Monoid");
var Data_Traversable = require("Data.Traversable");
var Data_Tuple = require("Data.Tuple");
var Data_Maybe_Unsafe = require("Data.Maybe.Unsafe");
var $colon = $foreign.cons;
var $dot$dot = $foreign.range;
var zipWithA = function (dictApplicative) {
    return function (f) {
        return function (xs) {
            return function (ys) {
                return Data_Traversable.sequence(Data_Traversable.traversableArray)(dictApplicative)($foreign.zipWith(f)(xs)(ys));
            };
        };
    };
};
var zip = $foreign.zipWith(Data_Tuple.Tuple.create);
var updateAt = $foreign._updateAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var unzip = $foreign["uncons'"](function (v) {
    return new Data_Tuple.Tuple([  ], [  ]);
})(function (v) {
    return function (ts) {
        var $36 = unzip(ts);
        return new Data_Tuple.Tuple($colon(v.value0)($36.value0), $colon(v.value1)($36.value1));
    };
});
var uncons = $foreign["uncons'"](Prelude["const"](Data_Maybe.Nothing.value))(function (x) {
    return function (xs) {
        return new Data_Maybe.Just({
            head: x, 
            tail: xs
        });
    };
});
var take = $foreign.slice(0);
var tail = $foreign["uncons'"](Prelude["const"](Data_Maybe.Nothing.value))(function (v) {
    return function (xs) {
        return new Data_Maybe.Just(xs);
    };
});
var span = function (p) {
    var go = function (__copy_acc) {
        return function (__copy_xs) {
            var acc = __copy_acc;
            var xs = __copy_xs;
            tco: while (true) {
                var $42 = uncons(xs);
                if ($42 instanceof Data_Maybe.Just && p($42.value0.head)) {
                    var __tco_acc = $colon($42.value0.head)(acc);
                    acc = __tco_acc;
                    xs = $42.value0.tail;
                    continue tco;
                };
                return {
                    init: $foreign.reverse(acc), 
                    rest: xs
                };
            };
        };
    };
    return go([  ]);
};
var takeWhile = function (p) {
    return function (xs) {
        return (span(p)(xs)).init;
    };
};
var sortBy = function (comp) {
    return function (xs) {
        var comp$prime = function (x) {
            return function (y) {
                var $46 = comp(x)(y);
                if ($46 instanceof Prelude.GT) {
                    return 1;
                };
                if ($46 instanceof Prelude.EQ) {
                    return 0;
                };
                if ($46 instanceof Prelude.LT) {
                    return -1;
                };
                throw new Error("Failed pattern match at Data.Array line 409, column 3 - line 414, column 1: " + [ $46.constructor.name ]);
            };
        };
        return $foreign.sortImpl(comp$prime)(xs);
    };
};
var sort = function (dictOrd) {
    return function (xs) {
        return sortBy(Prelude.compare(dictOrd))(xs);
    };
};
var singleton = function (a) {
    return [ a ];
};
var replicateM = function (dictMonad) {
    return function (n) {
        return function (m) {
            if (n < 1) {
                return Prelude["return"](dictMonad["__superclass_Prelude.Applicative_0"]())([  ]);
            };
            if (Prelude.otherwise) {
                return Data_Traversable.sequence(Data_Traversable.traversableArray)(dictMonad["__superclass_Prelude.Applicative_0"]())($foreign.replicate(n)(m));
            };
            throw new Error("Failed pattern match at Data.Array line 136, column 1 - line 137, column 1: " + [ n.constructor.name, m.constructor.name ]);
        };
    };
};
var $$null = function (xs) {
    return $foreign.length(xs) === 0;
};
var nubBy = function (eq) {
    return function (xs) {
        var $49 = uncons(xs);
        if ($49 instanceof Data_Maybe.Just) {
            return $colon($49.value0.head)(nubBy(eq)($foreign.filter(function (y) {
                return !eq($49.value0.head)(y);
            })($49.value0.tail)));
        };
        if ($49 instanceof Data_Maybe.Nothing) {
            return [  ];
        };
        throw new Error("Failed pattern match: " + [ $49.constructor.name ]);
    };
};
var nub = function (dictEq) {
    return nubBy(Prelude.eq(dictEq));
};
var some = function (dictAlternative) {
    return function (dictLazy) {
        return function (v) {
            return Prelude["<*>"]((dictAlternative["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())(Prelude["<$>"](((dictAlternative["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())["__superclass_Prelude.Functor_0"]())($colon)(v))(Control_Lazy.defer(dictLazy)(function (v1) {
                return many(dictAlternative)(dictLazy)(v);
            }));
        };
    };
};
var many = function (dictAlternative) {
    return function (dictLazy) {
        return function (v) {
            return Control_Alt["<|>"]((dictAlternative["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())(some(dictAlternative)(dictLazy)(v))(Prelude.pure(dictAlternative["__superclass_Prelude.Applicative_0"]())([  ]));
        };
    };
};
var insertAt = $foreign._insertAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var init = function (xs) {
    if ($$null(xs)) {
        return Data_Maybe.Nothing.value;
    };
    if (Prelude.otherwise) {
        return new Data_Maybe.Just($foreign.slice(0)($foreign.length(xs) - 1)(xs));
    };
    throw new Error("Failed pattern match at Data.Array line 226, column 1 - line 227, column 1: " + [ xs.constructor.name ]);
};
var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var $bang$bang = index;
var last = function (xs) {
    return $bang$bang(xs)($foreign.length(xs) - 1);
};
var modifyAt = function (i) {
    return function (f) {
        return function (xs) {
            var go = function (x) {
                return updateAt(i)(f(x))(xs);
            };
            return Data_Maybe.maybe(Data_Maybe.Nothing.value)(go)($bang$bang(xs)(i));
        };
    };
};
var head = $foreign["uncons'"](Prelude["const"](Data_Maybe.Nothing.value))(function (x) {
    return function (v) {
        return new Data_Maybe.Just(x);
    };
});
var groupBy = function (op) {
    var go = function (__copy_acc) {
        return function (__copy_xs) {
            var acc = __copy_acc;
            var xs = __copy_xs;
            tco: while (true) {
                var $54 = uncons(xs);
                if ($54 instanceof Data_Maybe.Just) {
                    var sp = span(op($54.value0.head))($54.value0.tail);
                    var __tco_acc = $colon($colon($54.value0.head)(sp.init))(acc);
                    acc = __tco_acc;
                    xs = sp.rest;
                    continue tco;
                };
                if ($54 instanceof Data_Maybe.Nothing) {
                    return $foreign.reverse(acc);
                };
                throw new Error("Failed pattern match at Data.Array line 476, column 1 - line 477, column 1: " + [ $54.constructor.name ]);
            };
        };
    };
    return go([  ]);
};
var group = function (dictEq) {
    return function (xs) {
        return groupBy(Prelude.eq(dictEq))(xs);
    };
};
var group$prime = function (dictOrd) {
    return function ($68) {
        return group(dictOrd["__superclass_Prelude.Eq_0"]())(sort(dictOrd)($68));
    };
};
var foldM = function (dictMonad) {
    return function (f) {
        return function (a) {
            return $foreign["uncons'"](function (v) {
                return Prelude["return"](dictMonad["__superclass_Prelude.Applicative_0"]())(a);
            })(function (b) {
                return function (bs) {
                    return Prelude[">>="](dictMonad["__superclass_Prelude.Bind_1"]())(f(a)(b))(function (a$prime) {
                        return foldM(dictMonad)(f)(a$prime)(bs);
                    });
                };
            });
        };
    };
};
var findLastIndex = $foreign.findLastIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var insertBy = function (cmp) {
    return function (x) {
        return function (ys) {
            var i = Data_Maybe.maybe(0)(function (v) {
                return v + 1 | 0;
            })(findLastIndex(function (y) {
                return Prelude["=="](Prelude.eqOrdering)(cmp(x)(y))(Prelude.GT.value);
            })(ys));
            return Data_Maybe_Unsafe.fromJust(insertAt(i)(x)(ys));
        };
    };
};
var insert = function (dictOrd) {
    return insertBy(Prelude.compare(dictOrd));
};
var findIndex = $foreign.findIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var intersectBy = function (eq) {
    return function (xs) {
        return function (ys) {
            return $foreign.filter(function (x) {
                return Data_Maybe.isJust(findIndex(eq(x))(ys));
            })(xs);
        };
    };
};
var intersect = function (dictEq) {
    return intersectBy(Prelude.eq(dictEq));
};
var filterM = function (dictMonad) {
    return function (p) {
        return $foreign["uncons'"](function (v) {
            return Prelude.pure(dictMonad["__superclass_Prelude.Applicative_0"]())([  ]);
        })(function (x) {
            return function (xs) {
                return Prelude.bind(dictMonad["__superclass_Prelude.Bind_1"]())(p(x))(function (v) {
                    return Prelude.bind(dictMonad["__superclass_Prelude.Bind_1"]())(filterM(dictMonad)(p)(xs))(function (v1) {
                        return Prelude["return"](dictMonad["__superclass_Prelude.Applicative_0"]())((function () {
                            if (v) {
                                return $colon(x)(v1);
                            };
                            if (!v) {
                                return v1;
                            };
                            throw new Error("Failed pattern match: " + [ v.constructor.name ]);
                        })());
                    });
                });
            };
        });
    };
};
var elemLastIndex = function (dictEq) {
    return function (x) {
        return findLastIndex(function (v) {
            return Prelude["=="](dictEq)(v)(x);
        });
    };
};
var elemIndex = function (dictEq) {
    return function (x) {
        return findIndex(function (v) {
            return Prelude["=="](dictEq)(v)(x);
        });
    };
};
var dropWhile = function (p) {
    return function (xs) {
        return (span(p)(xs)).rest;
    };
};
var deleteAt = $foreign._deleteAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var deleteBy = function (v) {
    return function (v1) {
        return function (v2) {
            if (v2.length === 0) {
                return [  ];
            };
            return Data_Maybe.maybe(v2)(function (i) {
                return Data_Maybe_Unsafe.fromJust(deleteAt(i)(v2));
            })(findIndex(v(v1))(v2));
        };
    };
};
var unionBy = function (eq) {
    return function (xs) {
        return function (ys) {
            return Prelude["++"](Prelude.semigroupArray)(xs)(Data_Foldable.foldl(Data_Foldable.foldableArray)(Prelude.flip(deleteBy(eq)))(nubBy(eq)(ys))(xs));
        };
    };
};
var union = function (dictEq) {
    return unionBy(Prelude["=="](dictEq));
};
var $$delete = function (dictEq) {
    return deleteBy(Prelude.eq(dictEq));
};
var $bslash$bslash = function (dictEq) {
    return function (xs) {
        return function (ys) {
            if ($$null(xs)) {
                return [  ];
            };
            if (Prelude.otherwise) {
                return $foreign["uncons'"](Prelude["const"](xs))(function (y) {
                    return function (ys2) {
                        return $bslash$bslash(dictEq)($$delete(dictEq)(y)(xs))(ys2);
                    };
                })(ys);
            };
            throw new Error("Failed pattern match: " + [ xs.constructor.name, ys.constructor.name ]);
        };
    };
};
var concatMap = Prelude.flip(Prelude.bind(Prelude.bindArray));
var mapMaybe = function (f) {
    return concatMap(function ($69) {
        return Data_Maybe.maybe([  ])(singleton)(f($69));
    });
};
var catMaybes = mapMaybe(Prelude.id(Prelude.categoryFn));
var alterAt = function (i) {
    return function (f) {
        return function (xs) {
            var go = function (x) {
                var $66 = f(x);
                if ($66 instanceof Data_Maybe.Nothing) {
                    return deleteAt(i)(xs);
                };
                if ($66 instanceof Data_Maybe.Just) {
                    return updateAt(i)($66.value0)(xs);
                };
                throw new Error("Failed pattern match at Data.Array line 349, column 3 - line 358, column 1: " + [ $66.constructor.name ]);
            };
            return Data_Maybe.maybe(Data_Maybe.Nothing.value)(go)($bang$bang(xs)(i));
        };
    };
};
module.exports = {
    foldM: foldM, 
    unzip: unzip, 
    zip: zip, 
    zipWithA: zipWithA, 
    intersectBy: intersectBy, 
    intersect: intersect, 
    "\\\\": $bslash$bslash, 
    deleteBy: deleteBy, 
    "delete": $$delete, 
    unionBy: unionBy, 
    union: union, 
    nubBy: nubBy, 
    nub: nub, 
    groupBy: groupBy, 
    "group'": group$prime, 
    group: group, 
    span: span, 
    dropWhile: dropWhile, 
    takeWhile: takeWhile, 
    take: take, 
    sortBy: sortBy, 
    sort: sort, 
    catMaybes: catMaybes, 
    mapMaybe: mapMaybe, 
    filterM: filterM, 
    concatMap: concatMap, 
    alterAt: alterAt, 
    modifyAt: modifyAt, 
    updateAt: updateAt, 
    deleteAt: deleteAt, 
    insertAt: insertAt, 
    findLastIndex: findLastIndex, 
    findIndex: findIndex, 
    elemLastIndex: elemLastIndex, 
    elemIndex: elemIndex, 
    index: index, 
    "!!": $bang$bang, 
    uncons: uncons, 
    init: init, 
    tail: tail, 
    last: last, 
    head: head, 
    insertBy: insertBy, 
    insert: insert, 
    ":": $colon, 
    "null": $$null, 
    many: many, 
    some: some, 
    replicateM: replicateM, 
    "..": $dot$dot, 
    singleton: singleton, 
    zipWith: $foreign.zipWith, 
    drop: $foreign.drop, 
    slice: $foreign.slice, 
    filter: $foreign.filter, 
    concat: $foreign.concat, 
    reverse: $foreign.reverse, 
    snoc: $foreign.snoc, 
    cons: $foreign.cons, 
    length: $foreign.length, 
    replicate: $foreign.replicate, 
    range: $foreign.range
};

},{"./foreign":"/Users/gene/Programming/pure_morph/output/Data.Array/foreign.js","Control.Alt":"/Users/gene/Programming/pure_morph/output/Control.Alt/index.js","Control.Alternative":"/Users/gene/Programming/pure_morph/output/Control.Alternative/index.js","Control.Lazy":"/Users/gene/Programming/pure_morph/output/Control.Lazy/index.js","Control.MonadPlus":"/Users/gene/Programming/pure_morph/output/Control.MonadPlus/index.js","Control.Plus":"/Users/gene/Programming/pure_morph/output/Control.Plus/index.js","Data.Foldable":"/Users/gene/Programming/pure_morph/output/Data.Foldable/index.js","Data.Functor.Invariant":"/Users/gene/Programming/pure_morph/output/Data.Functor.Invariant/index.js","Data.Maybe":"/Users/gene/Programming/pure_morph/output/Data.Maybe/index.js","Data.Maybe.Unsafe":"/Users/gene/Programming/pure_morph/output/Data.Maybe.Unsafe/index.js","Data.Monoid":"/Users/gene/Programming/pure_morph/output/Data.Monoid/index.js","Data.Traversable":"/Users/gene/Programming/pure_morph/output/Data.Traversable/index.js","Data.Tuple":"/Users/gene/Programming/pure_morph/output/Data.Tuple/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Data.ArrayBuffer.Types/index.js":[function(require,module,exports){
arguments[4]["/Users/gene/Programming/pure_morph/output/DOM/index.js"][0].apply(exports,arguments)
},{}],"/Users/gene/Programming/pure_morph/output/Data.Bifoldable/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Apply = require("Control.Apply");
var Data_Monoid = require("Data.Monoid");
var Data_Monoid_Disj = require("Data.Monoid.Disj");
var Data_Monoid_Conj = require("Data.Monoid.Conj");
var Data_Monoid_Endo = require("Data.Monoid.Endo");
var Data_Monoid_Dual = require("Data.Monoid.Dual");
var Bifoldable = function (bifoldMap, bifoldl, bifoldr) {
    this.bifoldMap = bifoldMap;
    this.bifoldl = bifoldl;
    this.bifoldr = bifoldr;
};
var bifoldr = function (dict) {
    return dict.bifoldr;
};
var bitraverse_ = function (dictBifoldable) {
    return function (dictApplicative) {
        return function (f) {
            return function (g) {
                return bifoldr(dictBifoldable)(function ($18) {
                    return Control_Apply["*>"](dictApplicative["__superclass_Prelude.Apply_0"]())(f($18));
                })(function ($19) {
                    return Control_Apply["*>"](dictApplicative["__superclass_Prelude.Apply_0"]())(g($19));
                })(Prelude.pure(dictApplicative)(Prelude.unit));
            };
        };
    };
};
var bifor_ = function (dictBifoldable) {
    return function (dictApplicative) {
        return function (t) {
            return function (f) {
                return function (g) {
                    return bitraverse_(dictBifoldable)(dictApplicative)(f)(g)(t);
                };
            };
        };
    };
};
var bisequence_ = function (dictBifoldable) {
    return function (dictApplicative) {
        return bitraverse_(dictBifoldable)(dictApplicative)(Prelude.id(Prelude.categoryFn))(Prelude.id(Prelude.categoryFn));
    };
};
var bifoldl = function (dict) {
    return dict.bifoldl;
};
var bifoldMapDefaultR = function (dictBifoldable) {
    return function (dictMonoid) {
        return function (f) {
            return function (g) {
                return function (p) {
                    return bifoldr(dictBifoldable)(function ($20) {
                        return Prelude["<>"](dictMonoid["__superclass_Prelude.Semigroup_0"]())(f($20));
                    })(function ($21) {
                        return Prelude["<>"](dictMonoid["__superclass_Prelude.Semigroup_0"]())(g($21));
                    })(Data_Monoid.mempty(dictMonoid))(p);
                };
            };
        };
    };
};
var bifoldMapDefaultL = function (dictBifoldable) {
    return function (dictMonoid) {
        return function (f) {
            return function (g) {
                return function (p) {
                    return bifoldl(dictBifoldable)(function (m) {
                        return function (a) {
                            return Prelude["<>"](dictMonoid["__superclass_Prelude.Semigroup_0"]())(m)(f(a));
                        };
                    })(function (m) {
                        return function (b) {
                            return Prelude["<>"](dictMonoid["__superclass_Prelude.Semigroup_0"]())(m)(g(b));
                        };
                    })(Data_Monoid.mempty(dictMonoid))(p);
                };
            };
        };
    };
};
var bifoldMap = function (dict) {
    return dict.bifoldMap;
};
var bifoldlDefault = function (dictBifoldable) {
    return function (f) {
        return function (g) {
            return function (z) {
                return function (p) {
                    return Data_Monoid_Endo.runEndo(Data_Monoid_Dual.runDual(bifoldMap(dictBifoldable)(Data_Monoid_Dual.monoidDual(Data_Monoid_Endo.monoidEndo))(function ($22) {
                        return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Prelude.flip(f)($22)));
                    })(function ($23) {
                        return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Prelude.flip(g)($23)));
                    })(p)))(z);
                };
            };
        };
    };
};
var bifoldrDefault = function (dictBifoldable) {
    return function (f) {
        return function (g) {
            return function (z) {
                return function (p) {
                    return Data_Monoid_Endo.runEndo(bifoldMap(dictBifoldable)(Data_Monoid_Endo.monoidEndo)(function ($24) {
                        return Data_Monoid_Endo.Endo(f($24));
                    })(function ($25) {
                        return Data_Monoid_Endo.Endo(g($25));
                    })(p))(z);
                };
            };
        };
    };
};
var bifold = function (dictBifoldable) {
    return function (dictMonoid) {
        return bifoldMap(dictBifoldable)(dictMonoid)(Prelude.id(Prelude.categoryFn))(Prelude.id(Prelude.categoryFn));
    };
};
var biany = function (dictBifoldable) {
    return function (dictBooleanAlgebra) {
        return function (p) {
            return function (q) {
                return function ($26) {
                    return Data_Monoid_Disj.runDisj(bifoldMap(dictBifoldable)(Data_Monoid_Disj.monoidDisj(dictBooleanAlgebra))(function ($27) {
                        return Data_Monoid_Disj.Disj(p($27));
                    })(function ($28) {
                        return Data_Monoid_Disj.Disj(q($28));
                    })($26));
                };
            };
        };
    };
};
var biall = function (dictBifoldable) {
    return function (dictBooleanAlgebra) {
        return function (p) {
            return function (q) {
                return function ($29) {
                    return Data_Monoid_Conj.runConj(bifoldMap(dictBifoldable)(Data_Monoid_Conj.monoidConj(dictBooleanAlgebra))(function ($30) {
                        return Data_Monoid_Conj.Conj(p($30));
                    })(function ($31) {
                        return Data_Monoid_Conj.Conj(q($31));
                    })($29));
                };
            };
        };
    };
};
module.exports = {
    Bifoldable: Bifoldable, 
    biall: biall, 
    biany: biany, 
    bisequence_: bisequence_, 
    bifor_: bifor_, 
    bitraverse_: bitraverse_, 
    bifold: bifold, 
    bifoldMapDefaultL: bifoldMapDefaultL, 
    bifoldMapDefaultR: bifoldMapDefaultR, 
    bifoldlDefault: bifoldlDefault, 
    bifoldrDefault: bifoldrDefault, 
    bifoldMap: bifoldMap, 
    bifoldl: bifoldl, 
    bifoldr: bifoldr
};

},{"Control.Apply":"/Users/gene/Programming/pure_morph/output/Control.Apply/index.js","Data.Monoid":"/Users/gene/Programming/pure_morph/output/Data.Monoid/index.js","Data.Monoid.Conj":"/Users/gene/Programming/pure_morph/output/Data.Monoid.Conj/index.js","Data.Monoid.Disj":"/Users/gene/Programming/pure_morph/output/Data.Monoid.Disj/index.js","Data.Monoid.Dual":"/Users/gene/Programming/pure_morph/output/Data.Monoid.Dual/index.js","Data.Monoid.Endo":"/Users/gene/Programming/pure_morph/output/Data.Monoid.Endo/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Data.Bifunctor/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var Bifunctor = function (bimap) {
    this.bimap = bimap;
};
var bimap = function (dict) {
    return dict.bimap;
};
var lmap = function (dictBifunctor) {
    return function (f) {
        return bimap(dictBifunctor)(f)(Prelude.id(Prelude.categoryFn));
    };
};
var rmap = function (dictBifunctor) {
    return bimap(dictBifunctor)(Prelude.id(Prelude.categoryFn));
};
module.exports = {
    Bifunctor: Bifunctor, 
    rmap: rmap, 
    lmap: lmap, 
    bimap: bimap
};

},{"Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Data.Bitraversable/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Bifoldable = require("Data.Bifoldable");
var Data_Bifunctor = require("Data.Bifunctor");
var Bitraversable = function (__superclass_Data$dotBifoldable$dotBifoldable_1, __superclass_Data$dotBifunctor$dotBifunctor_0, bisequence, bitraverse) {
    this["__superclass_Data.Bifoldable.Bifoldable_1"] = __superclass_Data$dotBifoldable$dotBifoldable_1;
    this["__superclass_Data.Bifunctor.Bifunctor_0"] = __superclass_Data$dotBifunctor$dotBifunctor_0;
    this.bisequence = bisequence;
    this.bitraverse = bitraverse;
};
var bitraverse = function (dict) {
    return dict.bitraverse;
};
var bisequenceDefault = function (dictBitraversable) {
    return function (dictApplicative) {
        return function (t) {
            return bitraverse(dictBitraversable)(dictApplicative)(Prelude.id(Prelude.categoryFn))(Prelude.id(Prelude.categoryFn))(t);
        };
    };
};
var bisequence = function (dict) {
    return dict.bisequence;
};
var bitraverseDefault = function (dictBitraversable) {
    return function (dictApplicative) {
        return function (f) {
            return function (g) {
                return function (t) {
                    return bisequence(dictBitraversable)(dictApplicative)(Data_Bifunctor.bimap(dictBitraversable["__superclass_Data.Bifunctor.Bifunctor_0"]())(f)(g)(t));
                };
            };
        };
    };
};
var bifor = function (dictBitraversable) {
    return function (dictApplicative) {
        return function (t) {
            return function (f) {
                return function (g) {
                    return bitraverse(dictBitraversable)(dictApplicative)(f)(g)(t);
                };
            };
        };
    };
};
module.exports = {
    Bitraversable: Bitraversable, 
    bifor: bifor, 
    bisequenceDefault: bisequenceDefault, 
    bitraverseDefault: bitraverseDefault, 
    bisequence: bisequence, 
    bitraverse: bitraverse
};

},{"Data.Bifoldable":"/Users/gene/Programming/pure_morph/output/Data.Bifoldable/index.js","Data.Bifunctor":"/Users/gene/Programming/pure_morph/output/Data.Bifunctor/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Data.Char/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Char

exports.toString = function (c) {
  return c;
};

exports.toCharCode = function (c) {
  return c.charCodeAt(0);
};

exports.fromCharCode = function (c) {
  return String.fromCharCode(c);
};

exports.toLower = function (c) {
  return c.toLowerCase();
};

exports.toUpper = function (c) {
  return c.toUpperCase();
};

},{}],"/Users/gene/Programming/pure_morph/output/Data.Char/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
module.exports = {
    toUpper: $foreign.toUpper, 
    toLower: $foreign.toLower, 
    toCharCode: $foreign.toCharCode, 
    fromCharCode: $foreign.fromCharCode, 
    toString: $foreign.toString
};

},{"./foreign":"/Users/gene/Programming/pure_morph/output/Data.Char/foreign.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Data.DOM.Simple.Document/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var DOM = require("DOM");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_DOM_Simple_Types = require("Data.DOM.Simple.Types");
var Data_DOM_Simple_Element = require("Data.DOM.Simple.Element");
var Data_DOM_Simple_Unsafe_Utils = require("Data.DOM.Simple.Unsafe.Utils");
var Data_DOM_Simple_Unsafe_Element = require("Data.DOM.Simple.Unsafe.Element");
var Data_DOM_Simple_Unsafe_Document = require("Data.DOM.Simple.Unsafe.Document");
var Document = function (body, createElement, setBody, setTitle, title) {
    this.body = body;
    this.createElement = createElement;
    this.setBody = setBody;
    this.setTitle = setTitle;
    this.title = title;
};
var title = function (dict) {
    return dict.title;
};
var showHtmlDocument = new Prelude.Show(Data_DOM_Simple_Unsafe_Utils.showImpl);
var setTitle = function (dict) {
    return dict.setTitle;
};
var setBody = function (dict) {
    return dict.setBody;
};
var htmlDocumentElement = new Data_DOM_Simple_Element.Element(Data_DOM_Simple_Unsafe_Element.unsafeAppendChild, Data_DOM_Simple_Unsafe_Element.unsafeChildren, Data_DOM_Simple_Unsafe_Element.unsafeClassAdd, Data_DOM_Simple_Unsafe_Element.unsafeClassContains, Data_DOM_Simple_Unsafe_Element.unsafeClassRemove, Data_DOM_Simple_Unsafe_Element.unsafeClassToggle, Data_DOM_Simple_Unsafe_Element.unsafeContentWindow, Data_DOM_Simple_Unsafe_Element.unsafeGetAttribute, function (id) {
    return function (el) {
        return function __do() {
            var $0 = Data_DOM_Simple_Unsafe_Element.unsafeGetElementById(id)(el)();
            return Data_DOM_Simple_Unsafe_Utils.ensure($0);
        };
    };
}, Data_DOM_Simple_Unsafe_Element.unsafeGetElementsByClassName, Data_DOM_Simple_Unsafe_Element.unsafeGetElementsByName, Data_DOM_Simple_Unsafe_Element.unsafeGetStyleAttr, Data_DOM_Simple_Unsafe_Element.unsafeHasAttribute, Data_DOM_Simple_Unsafe_Element.unsafeInnerHTML, Data_DOM_Simple_Unsafe_Element.unsafeOffsetHeight, Data_DOM_Simple_Unsafe_Element.unsafeOffsetLeft, function (el) {
    return function __do() {
        var $1 = Data_DOM_Simple_Unsafe_Element.unsafeOffsetParent(el)();
        return Data_DOM_Simple_Unsafe_Utils.ensure($1);
    };
}, Data_DOM_Simple_Unsafe_Element.unsafeOffsetTop, Data_DOM_Simple_Unsafe_Element.unsafeOffsetWidth, function (sel) {
    return function (el) {
        return function __do() {
            var $2 = Data_DOM_Simple_Unsafe_Element.unsafeQuerySelector(sel)(el)();
            return Data_DOM_Simple_Unsafe_Utils.ensure($2);
        };
    };
}, Data_DOM_Simple_Unsafe_Element.unsafeQuerySelectorAll, Data_DOM_Simple_Unsafe_Element.unsafeRemoveAttribute, Data_DOM_Simple_Unsafe_Element.unsafeSetAttribute, Data_DOM_Simple_Unsafe_Element.unsafeSetInnerHTML, Data_DOM_Simple_Unsafe_Element.unsafeSetStyleAttr, Data_DOM_Simple_Unsafe_Element.unsafeSetTextContent, Data_DOM_Simple_Unsafe_Element.unsafeSetValue, Data_DOM_Simple_Unsafe_Element.unsafeTextContent, Data_DOM_Simple_Unsafe_Element.unsafeValue);
var htmlDocument = new Document(Data_DOM_Simple_Unsafe_Document.unsafeBody, Data_DOM_Simple_Unsafe_Document.unsafeCreateElement, Data_DOM_Simple_Unsafe_Document.unsafeSetBody, Data_DOM_Simple_Unsafe_Document.unsafeSetTitle, Data_DOM_Simple_Unsafe_Document.unsafeTitle);
var createElement = function (dict) {
    return dict.createElement;
};
var body = function (dict) {
    return dict.body;
};
module.exports = {
    Document: Document, 
    createElement: createElement, 
    setBody: setBody, 
    body: body, 
    setTitle: setTitle, 
    title: title, 
    htmlDocumentElement: htmlDocumentElement, 
    htmlDocument: htmlDocument, 
    showHtmlDocument: showHtmlDocument
};

},{"Control.Monad.Eff":"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff/index.js","DOM":"/Users/gene/Programming/pure_morph/output/DOM/index.js","Data.DOM.Simple.Element":"/Users/gene/Programming/pure_morph/output/Data.DOM.Simple.Element/index.js","Data.DOM.Simple.Types":"/Users/gene/Programming/pure_morph/output/Data.DOM.Simple.Types/index.js","Data.DOM.Simple.Unsafe.Document":"/Users/gene/Programming/pure_morph/output/Data.DOM.Simple.Unsafe.Document/index.js","Data.DOM.Simple.Unsafe.Element":"/Users/gene/Programming/pure_morph/output/Data.DOM.Simple.Unsafe.Element/index.js","Data.DOM.Simple.Unsafe.Utils":"/Users/gene/Programming/pure_morph/output/Data.DOM.Simple.Unsafe.Utils/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Data.DOM.Simple.Element/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Monad_Eff = require("Control.Monad.Eff");
var DOM = require("DOM");
var DOM_Node_Types = require("DOM.Node.Types");
var Data_DOM_Simple_Unsafe_Utils = require("Data.DOM.Simple.Unsafe.Utils");
var Data_DOM_Simple_Unsafe_Element = require("Data.DOM.Simple.Unsafe.Element");
var Data_DOM_Simple_Types = require("Data.DOM.Simple.Types");
var Data_Foldable = require("Data.Foldable");
var Data_Maybe = require("Data.Maybe");
var Data_Array = require("Data.Array");
var Data_Tuple = require("Data.Tuple");
var Element = function (appendChild, children, classAdd, classContains, classRemove, classToggle, contentWindow, getAttribute, getElementById, getElementsByClassName, getElementsByName, getStyleAttr, hasAttribute, innerHTML, offsetHeight, offsetLeft, offsetParent, offsetTop, offsetWidth, querySelector, querySelectorAll, removeAttribute, setAttribute, setInnerHTML, setStyleAttr, setTextContent, setValue, textContent, value) {
    this.appendChild = appendChild;
    this.children = children;
    this.classAdd = classAdd;
    this.classContains = classContains;
    this.classRemove = classRemove;
    this.classToggle = classToggle;
    this.contentWindow = contentWindow;
    this.getAttribute = getAttribute;
    this.getElementById = getElementById;
    this.getElementsByClassName = getElementsByClassName;
    this.getElementsByName = getElementsByName;
    this.getStyleAttr = getStyleAttr;
    this.hasAttribute = hasAttribute;
    this.innerHTML = innerHTML;
    this.offsetHeight = offsetHeight;
    this.offsetLeft = offsetLeft;
    this.offsetParent = offsetParent;
    this.offsetTop = offsetTop;
    this.offsetWidth = offsetWidth;
    this.querySelector = querySelector;
    this.querySelectorAll = querySelectorAll;
    this.removeAttribute = removeAttribute;
    this.setAttribute = setAttribute;
    this.setInnerHTML = setInnerHTML;
    this.setStyleAttr = setStyleAttr;
    this.setTextContent = setTextContent;
    this.setValue = setValue;
    this.textContent = textContent;
    this.value = value;
};
var value = function (dict) {
    return dict.value;
};
var textContent = function (dict) {
    return dict.textContent;
};
var setValue = function (dict) {
    return dict.setValue;
};
var setTextContent = function (dict) {
    return dict.setTextContent;
};
var setStyleAttr = function (dict) {
    return dict.setStyleAttr;
};
var setStyleAttrs = function (dictElement) {
    return function (xs) {
        return function (el) {
            return Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(xs)(function (kv) {
                return setStyleAttr(dictElement)(Data_Tuple.fst(kv))(Data_Tuple.snd(kv))(el);
            });
        };
    };
};
var setInnerHTML = function (dict) {
    return dict.setInnerHTML;
};
var setAttribute = function (dict) {
    return dict.setAttribute;
};
var setAttributes = function (dictElement) {
    return function (xs) {
        return function (el) {
            return Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(xs)(function (kv) {
                return setAttribute(dictElement)(Data_Tuple.fst(kv))(Data_Tuple.snd(kv))(el);
            });
        };
    };
};
var removeAttribute = function (dict) {
    return dict.removeAttribute;
};
var querySelectorAll = function (dict) {
    return dict.querySelectorAll;
};
var querySelector = function (dict) {
    return dict.querySelector;
};
var offsetWidth = function (dict) {
    return dict.offsetWidth;
};
var offsetTop = function (dict) {
    return dict.offsetTop;
};
var offsetParent = function (dict) {
    return dict.offsetParent;
};
var offsetLeft = function (dict) {
    return dict.offsetLeft;
};
var offsetHeight = function (dict) {
    return dict.offsetHeight;
};
var innerHTML = function (dict) {
    return dict.innerHTML;
};
var htmlElement = new Element(Data_DOM_Simple_Unsafe_Element.unsafeAppendChild, Data_DOM_Simple_Unsafe_Element.unsafeChildren, Data_DOM_Simple_Unsafe_Element.unsafeClassAdd, Data_DOM_Simple_Unsafe_Element.unsafeClassContains, Data_DOM_Simple_Unsafe_Element.unsafeClassRemove, Data_DOM_Simple_Unsafe_Element.unsafeClassToggle, Data_DOM_Simple_Unsafe_Element.unsafeContentWindow, Data_DOM_Simple_Unsafe_Element.unsafeGetAttribute, function (id) {
    return function (el) {
        return function __do() {
            var $2 = Data_DOM_Simple_Unsafe_Element.unsafeGetElementById(id)(el)();
            return Data_DOM_Simple_Unsafe_Utils.ensure($2);
        };
    };
}, Data_DOM_Simple_Unsafe_Element.unsafeGetElementsByClassName, Data_DOM_Simple_Unsafe_Element.unsafeGetElementsByName, Data_DOM_Simple_Unsafe_Element.unsafeGetStyleAttr, Data_DOM_Simple_Unsafe_Element.unsafeHasAttribute, Data_DOM_Simple_Unsafe_Element.unsafeInnerHTML, Data_DOM_Simple_Unsafe_Element.unsafeOffsetHeight, Data_DOM_Simple_Unsafe_Element.unsafeOffsetLeft, function (el) {
    return function __do() {
        var $3 = Data_DOM_Simple_Unsafe_Element.unsafeOffsetParent(el)();
        return Data_DOM_Simple_Unsafe_Utils.ensure($3);
    };
}, Data_DOM_Simple_Unsafe_Element.unsafeOffsetTop, Data_DOM_Simple_Unsafe_Element.unsafeOffsetWidth, function (sel) {
    return function (el) {
        return function __do() {
            var $4 = Data_DOM_Simple_Unsafe_Element.unsafeQuerySelector(sel)(el)();
            return Data_DOM_Simple_Unsafe_Utils.ensure($4);
        };
    };
}, Data_DOM_Simple_Unsafe_Element.unsafeQuerySelectorAll, Data_DOM_Simple_Unsafe_Element.unsafeRemoveAttribute, Data_DOM_Simple_Unsafe_Element.unsafeSetAttribute, Data_DOM_Simple_Unsafe_Element.unsafeSetInnerHTML, Data_DOM_Simple_Unsafe_Element.unsafeSetStyleAttr, Data_DOM_Simple_Unsafe_Element.unsafeSetTextContent, Data_DOM_Simple_Unsafe_Element.unsafeSetValue, Data_DOM_Simple_Unsafe_Element.unsafeTextContent, Data_DOM_Simple_Unsafe_Element.unsafeValue);
var hasAttribute = function (dict) {
    return dict.hasAttribute;
};
var getStyleAttr = function (dict) {
    return dict.getStyleAttr;
};
var getElementsByName = function (dict) {
    return dict.getElementsByName;
};
var getElementsByClassName = function (dict) {
    return dict.getElementsByClassName;
};
var getElementById = function (dict) {
    return dict.getElementById;
};
var getAttribute = function (dict) {
    return dict.getAttribute;
};
var focus = Data_DOM_Simple_Unsafe_Element.unsafeFocus;
var contentWindow = function (dict) {
    return dict.contentWindow;
};
var click = Data_DOM_Simple_Unsafe_Element.unsafeClick;
var classToggle = function (dict) {
    return dict.classToggle;
};
var classRemove = function (dict) {
    return dict.classRemove;
};
var classContains = function (dict) {
    return dict.classContains;
};
var classAdd = function (dict) {
    return dict.classAdd;
};
var children = function (dict) {
    return dict.children;
};
var blur = Data_DOM_Simple_Unsafe_Element.unsafeBlur;
var appendChild = function (dict) {
    return dict.appendChild;
};
module.exports = {
    Element: Element, 
    blur: blur, 
    focus: focus, 
    click: click, 
    setStyleAttrs: setStyleAttrs, 
    setAttributes: setAttributes, 
    offsetLeft: offsetLeft, 
    offsetTop: offsetTop, 
    offsetWidth: offsetWidth, 
    offsetHeight: offsetHeight, 
    offsetParent: offsetParent, 
    classContains: classContains, 
    classToggle: classToggle, 
    classAdd: classAdd, 
    classRemove: classRemove, 
    contentWindow: contentWindow, 
    setValue: setValue, 
    value: value, 
    setTextContent: setTextContent, 
    textContent: textContent, 
    setInnerHTML: setInnerHTML, 
    innerHTML: innerHTML, 
    appendChild: appendChild, 
    children: children, 
    setStyleAttr: setStyleAttr, 
    getStyleAttr: getStyleAttr, 
    removeAttribute: removeAttribute, 
    hasAttribute: hasAttribute, 
    setAttribute: setAttribute, 
    getAttribute: getAttribute, 
    querySelectorAll: querySelectorAll, 
    querySelector: querySelector, 
    getElementsByName: getElementsByName, 
    getElementsByClassName: getElementsByClassName, 
    getElementById: getElementById, 
    htmlElement: htmlElement
};

},{"Control.Monad.Eff":"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff/index.js","DOM":"/Users/gene/Programming/pure_morph/output/DOM/index.js","DOM.Node.Types":"/Users/gene/Programming/pure_morph/output/DOM.Node.Types/index.js","Data.Array":"/Users/gene/Programming/pure_morph/output/Data.Array/index.js","Data.DOM.Simple.Types":"/Users/gene/Programming/pure_morph/output/Data.DOM.Simple.Types/index.js","Data.DOM.Simple.Unsafe.Element":"/Users/gene/Programming/pure_morph/output/Data.DOM.Simple.Unsafe.Element/index.js","Data.DOM.Simple.Unsafe.Utils":"/Users/gene/Programming/pure_morph/output/Data.DOM.Simple.Unsafe.Utils/index.js","Data.Foldable":"/Users/gene/Programming/pure_morph/output/Data.Foldable/index.js","Data.Maybe":"/Users/gene/Programming/pure_morph/output/Data.Maybe/index.js","Data.Tuple":"/Users/gene/Programming/pure_morph/output/Data.Tuple/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Data.DOM.Simple.Types/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Control_Monad_Eff = require("Control.Monad.Eff");
module.exports = {};

},{"Control.Monad.Eff":"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff/index.js"}],"/Users/gene/Programming/pure_morph/output/Data.DOM.Simple.Unsafe.Document/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.DOM.Simple.Unsafe.Document

exports.unsafeTitle = function (src) {
  return function () {
    return src.title;
  };
};

exports.unsafeSetTitle = function (value) {
  return function (src) {
    return function () {
      src.title = value;
    };
  };
};

exports.unsafeBody = function (src) {
  return function () {
    return src.body;
  };
};

exports.unsafeSetBody = function (value) {
  return function (src) {
    return function () {
      src.body = value;
    };
  };
};

exports.unsafeCreateElement = function (tagName) {
  return function (src) {
    return function () {
      return src.createElement(tagName);
    };
  };
};

},{}],"/Users/gene/Programming/pure_morph/output/Data.DOM.Simple.Unsafe.Document/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var DOM = require("DOM");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_DOM_Simple_Types = require("Data.DOM.Simple.Types");
var Data_DOM_Simple_Unsafe_Element = require("Data.DOM.Simple.Unsafe.Element");
module.exports = {
    unsafeCreateElement: $foreign.unsafeCreateElement, 
    unsafeSetBody: $foreign.unsafeSetBody, 
    unsafeBody: $foreign.unsafeBody, 
    unsafeSetTitle: $foreign.unsafeSetTitle, 
    unsafeTitle: $foreign.unsafeTitle
};

},{"./foreign":"/Users/gene/Programming/pure_morph/output/Data.DOM.Simple.Unsafe.Document/foreign.js","Control.Monad.Eff":"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff/index.js","DOM":"/Users/gene/Programming/pure_morph/output/DOM/index.js","Data.DOM.Simple.Types":"/Users/gene/Programming/pure_morph/output/Data.DOM.Simple.Types/index.js","Data.DOM.Simple.Unsafe.Element":"/Users/gene/Programming/pure_morph/output/Data.DOM.Simple.Unsafe.Element/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Data.DOM.Simple.Unsafe.Element/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.DOM.Simple.Unsafe.Element

exports.unsafeGetElementById = function (targId) {
  return function (src) {
    return function () {
      return src.getElementById(targId);
    };
  };
};

exports.unsafeGetElementsByClassName = function (targId) {
  return function (src) {
    return function () {
      return Array.prototype.slice.call(src.getElementsByClassName(targId));
    };
  };
};

exports.unsafeGetElementsByName = function (targId) {
  return function (src) {
    return function () {
      return Array.prototype.slice.call(src.getElementsByName(targId));
    };
  };
};

exports.unsafeQuerySelector = function (selector) {
  return function (src) {
    return function () {
      return src.querySelector(selector);
    };
  };
};

exports.unsafeQuerySelectorAll = function (selector) {
  return function (src) {
    return function () {
      return src.querySelectorAll(selector);
    };
  };
};

exports.unsafeGetAttribute = function (name) {
  return function (src) {
    return function () {
      return src.getAttribute(name);
    };
  };
};

exports.unsafeSetAttribute = function (name) {
  return function (value) {
    return function (src) {
      return function () {
        src.setAttribute(name, value);
        return {};
      };
    };
  };
};

exports.unsafeHasAttribute = function (name) {
  return function (src) {
    return function () {
      return src.hasAttribute(name);
    };
  };
};

exports.unsafeRemoveAttribute = function (name) {
  return function (src) {
    return function () {
      src.removeAttribute(name);
      return {};
    };
  };
};

exports.unsafeGetStyleAttr = function (name) {
  return function (src) {
    return function () {
      return src.style[name];
    };
  };
};

exports.unsafeSetStyleAttr = function (name) {
  return function (value) {
    return function (src) {
      return function () {
        src.style[name] = value;
        return {};
      };
    };
  };
};

exports.unsafeChildren = function (src) {
  return function () {
    return Array.prototype.slice.call(src.children);
  };
};

exports.unsafeAppendChild = function (src) {
  return function (child) {
    return function () {
      return src.appendChild(child);
    };
  };
};

exports.unsafeInnerHTML = function (src) {
  return function () {
    return src.innerHTML;
  };
};

exports.unsafeSetInnerHTML = function (value) {
  return function (src) {
    return function () {
      src.innerHTML = value;
      return {};
    };
  };
};

exports.unsafeTextContent = function (src) {
  return function () {
    return src.textContent;
  };
};

exports.unsafeSetTextContent = function (value) {
  return function (src) {
    return function () {
      src.textContent = value;
      return {};
    };
  };
};

exports.unsafeValue = function (src) {
  return function () {
    return src.value;
  };
};

exports.unsafeSetValue = function (value) {
  return function (src) {
    return function () {
      src.value = value;
      return {};
    };
  };
};

exports.unsafeContentWindow = function (obj) {
  return function () {
    return obj.contentWindow;
  };
};

exports.unsafeClassAdd = function (value) {
  return function (src) {
    return function () {
      src.classList.add(value);
      return {};
    };
  };
};

exports.unsafeClassRemove = function (value) {
  return function (src) {
    return function () {
      src.classList.remove(value);
      return {};
    };
  };
};

exports.unsafeClassToggle = function (value) {
  return function (src) {
    return function () {
      src.classList.toggle(value);
      return {};
    };
  };
};

exports.unsafeClassContains = function (value) {
  return function (src) {
    return function () {
      return src.classList.contains(value);
    };
  };
};

exports.unsafeClick = function (src) {
  return function () {
    src.click();
    return {};
  };
};

exports.unsafeFocus = function (src) {
  return function () {
    src.focus();
    return {};
  };
};

exports.unsafeBlur = function (src) {
  return function () {
    src.blur();
    return {};
  };
};

exports.unsafeOffsetParent = function (src) {
  return function () {
    return src.offsetParent;
  };
};

exports.unsafeOffsetHeight = function (src) {
  return function () {
    return src.offsetHeight;
  };
};

exports.unsafeOffsetWidth = function (src) {
  return function () {
    return src.offsetWidth;
  };
};

exports.unsafeOffsetTop = function (src) {
  return function () {
    return src.offsetTop;
  };
};

exports.unsafeOffsetLeft = function (src) {
  return function () {
    return src.offsetLeft;
  };
};

},{}],"/Users/gene/Programming/pure_morph/output/Data.DOM.Simple.Unsafe.Element/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var DOM = require("DOM");
var DOM_Node_Types = require("DOM.Node.Types");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_DOM_Simple_Types = require("Data.DOM.Simple.Types");
var Data_DOM_Simple_Unsafe_Utils = require("Data.DOM.Simple.Unsafe.Utils");
var showHtmlElement = new Prelude.Show(Data_DOM_Simple_Unsafe_Utils.showImpl);
module.exports = {
    showHtmlElement: showHtmlElement, 
    unsafeOffsetLeft: $foreign.unsafeOffsetLeft, 
    unsafeOffsetTop: $foreign.unsafeOffsetTop, 
    unsafeOffsetWidth: $foreign.unsafeOffsetWidth, 
    unsafeOffsetHeight: $foreign.unsafeOffsetHeight, 
    unsafeOffsetParent: $foreign.unsafeOffsetParent, 
    unsafeBlur: $foreign.unsafeBlur, 
    unsafeFocus: $foreign.unsafeFocus, 
    unsafeClick: $foreign.unsafeClick, 
    unsafeClassContains: $foreign.unsafeClassContains, 
    unsafeClassToggle: $foreign.unsafeClassToggle, 
    unsafeClassRemove: $foreign.unsafeClassRemove, 
    unsafeClassAdd: $foreign.unsafeClassAdd, 
    unsafeContentWindow: $foreign.unsafeContentWindow, 
    unsafeSetValue: $foreign.unsafeSetValue, 
    unsafeValue: $foreign.unsafeValue, 
    unsafeSetTextContent: $foreign.unsafeSetTextContent, 
    unsafeTextContent: $foreign.unsafeTextContent, 
    unsafeSetInnerHTML: $foreign.unsafeSetInnerHTML, 
    unsafeInnerHTML: $foreign.unsafeInnerHTML, 
    unsafeAppendChild: $foreign.unsafeAppendChild, 
    unsafeChildren: $foreign.unsafeChildren, 
    unsafeSetStyleAttr: $foreign.unsafeSetStyleAttr, 
    unsafeGetStyleAttr: $foreign.unsafeGetStyleAttr, 
    unsafeRemoveAttribute: $foreign.unsafeRemoveAttribute, 
    unsafeHasAttribute: $foreign.unsafeHasAttribute, 
    unsafeSetAttribute: $foreign.unsafeSetAttribute, 
    unsafeGetAttribute: $foreign.unsafeGetAttribute, 
    unsafeQuerySelectorAll: $foreign.unsafeQuerySelectorAll, 
    unsafeQuerySelector: $foreign.unsafeQuerySelector, 
    unsafeGetElementsByName: $foreign.unsafeGetElementsByName, 
    unsafeGetElementsByClassName: $foreign.unsafeGetElementsByClassName, 
    unsafeGetElementById: $foreign.unsafeGetElementById
};

},{"./foreign":"/Users/gene/Programming/pure_morph/output/Data.DOM.Simple.Unsafe.Element/foreign.js","Control.Monad.Eff":"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff/index.js","DOM":"/Users/gene/Programming/pure_morph/output/DOM/index.js","DOM.Node.Types":"/Users/gene/Programming/pure_morph/output/DOM.Node.Types/index.js","Data.DOM.Simple.Types":"/Users/gene/Programming/pure_morph/output/Data.DOM.Simple.Types/index.js","Data.DOM.Simple.Unsafe.Utils":"/Users/gene/Programming/pure_morph/output/Data.DOM.Simple.Unsafe.Utils/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Data.DOM.Simple.Unsafe.Utils/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.DOM.Simple.Unsafe.Utils

exports.ensure3 = function (nothing) {
  return function (just) {
    return function (v) {
      if (v === undefined || v === null) {
        return nothing;
      } else {
        return just(v);
      }
    };
  };
};

exports.showImpl = function (v) {
  return function () {
    return v.toString();
  };
};

},{}],"/Users/gene/Programming/pure_morph/output/Data.DOM.Simple.Unsafe.Utils/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var $foreign = require("./foreign");
var Data_Maybe = require("Data.Maybe");
var ensure = $foreign.ensure3(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
module.exports = {
    ensure: ensure, 
    showImpl: $foreign.showImpl, 
    ensure3: $foreign.ensure3
};

},{"./foreign":"/Users/gene/Programming/pure_morph/output/Data.DOM.Simple.Unsafe.Utils/foreign.js","Data.Maybe":"/Users/gene/Programming/pure_morph/output/Data.Maybe/index.js"}],"/Users/gene/Programming/pure_morph/output/Data.DOM.Simple.Unsafe.Window/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.DOM.Simple.Unsafe.Window

exports.unsafeDocument = function (win) {
  return function () {
    return win.document;
  };
};

exports.unsafeNavigator = function (win) {
  return function () {
    return win.navigator;
  };
};

exports.unsafeLocation = function (win) {
  return function () {
    return win.location;
  };
};

exports.unsafeGetLocation = function (loc) {
  return function () {
    return loc;
  };
};

exports.unsafeSetLocation = function (value) {
  return function (loc) {
    return function () {
      loc.assign(value);
    };
  };
};

exports.unsafeGetSearchLocation = function (loc) {
  return function () {
    return loc.search;
  };
};

exports.unsafeSetTimeout = function (win) {
  return function (delay) {
    return function (func) {
      return function () {
        return win.setTimeout(func, delay);
      };
    };
  };
};

exports.unsafeSetInterval = function (win) {
  return function (delay) {
    return function (func) {
      return function () {
        return win.setInterval(func, delay);
      };
    };
  };
};

exports.unsafeClearTimeout = function (win) {
  return function (timeout) {
    return function () {
      win.clearTimeout(timeout);
    };
  };
};

exports.unsafeInnerWidth = function (win) {
  return function () {
    return win.innerWidth;
  };
};

exports.unsafeInnerHeight = function (win) {
  return function () {
    return win.innerHeight;
  };
};

},{}],"/Users/gene/Programming/pure_morph/output/Data.DOM.Simple.Unsafe.Window/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var DOM = require("DOM");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_DOM_Simple_Types = require("Data.DOM.Simple.Types");
var Data_DOM_Simple_Document = require("Data.DOM.Simple.Document");
module.exports = {
    unsafeInnerHeight: $foreign.unsafeInnerHeight, 
    unsafeInnerWidth: $foreign.unsafeInnerWidth, 
    unsafeClearTimeout: $foreign.unsafeClearTimeout, 
    unsafeSetInterval: $foreign.unsafeSetInterval, 
    unsafeSetTimeout: $foreign.unsafeSetTimeout, 
    unsafeGetSearchLocation: $foreign.unsafeGetSearchLocation, 
    unsafeSetLocation: $foreign.unsafeSetLocation, 
    unsafeGetLocation: $foreign.unsafeGetLocation, 
    unsafeLocation: $foreign.unsafeLocation, 
    unsafeNavigator: $foreign.unsafeNavigator, 
    unsafeDocument: $foreign.unsafeDocument
};

},{"./foreign":"/Users/gene/Programming/pure_morph/output/Data.DOM.Simple.Unsafe.Window/foreign.js","Control.Monad.Eff":"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff/index.js","DOM":"/Users/gene/Programming/pure_morph/output/DOM/index.js","Data.DOM.Simple.Document":"/Users/gene/Programming/pure_morph/output/Data.DOM.Simple.Document/index.js","Data.DOM.Simple.Types":"/Users/gene/Programming/pure_morph/output/Data.DOM.Simple.Types/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Data.DOM.Simple.Window/foreign.js":[function(require,module,exports){
/* global exports, window */
"use strict";

// module Data.DOM.Simple.Window

exports.globalWindow = window;

},{}],"/Users/gene/Programming/pure_morph/output/Data.DOM.Simple.Window/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var DOM = require("DOM");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_DOM_Simple_Types = require("Data.DOM.Simple.Types");
var Data_DOM_Simple_Unsafe_Window = require("Data.DOM.Simple.Unsafe.Window");
var Data_DOM_Simple_Document = require("Data.DOM.Simple.Document");
var Data_Maybe = require("Data.Maybe");
var Data_Array = require("Data.Array");
var Data_String = require("Data.String");
var Location = function (getLocation, search, setLocation) {
    this.getLocation = getLocation;
    this.search = search;
    this.setLocation = setLocation;
};
var Window = function (clearTimeout, document, innerHeight, innerWidth, location, navigator, setInterval, setTimeout) {
    this.clearTimeout = clearTimeout;
    this.document = document;
    this.innerHeight = innerHeight;
    this.innerWidth = innerWidth;
    this.location = location;
    this.navigator = navigator;
    this.setInterval = setInterval;
    this.setTimeout = setTimeout;
};
var setTimeout = function (dict) {
    return dict.setTimeout;
};
var setLocation = function (dict) {
    return dict.setLocation;
};
var setInterval = function (dict) {
    return dict.setInterval;
};
var search = function (dict) {
    return dict.search;
};
var navigator = function (dict) {
    return dict.navigator;
};
var location = function (dict) {
    return dict.location;
};
var innerWidth = function (dict) {
    return dict.innerWidth;
};
var innerHeight = function (dict) {
    return dict.innerHeight;
};
var htmlWindow = new Window(Data_DOM_Simple_Unsafe_Window.unsafeClearTimeout, Data_DOM_Simple_Unsafe_Window.unsafeDocument, Data_DOM_Simple_Unsafe_Window.unsafeInnerHeight, Data_DOM_Simple_Unsafe_Window.unsafeInnerWidth, Data_DOM_Simple_Unsafe_Window.unsafeLocation, Data_DOM_Simple_Unsafe_Window.unsafeNavigator, Data_DOM_Simple_Unsafe_Window.unsafeSetInterval, Data_DOM_Simple_Unsafe_Window.unsafeSetTimeout);
var getLocationValue = function (input) {
    return function (key) {
        var kvParser = function (value) {
            if (value.length === 2 && value[0] === key) {
                return new Data_Maybe.Just(value[1]);
            };
            return Data_Maybe.Nothing.value;
        };
        var sanitizedInput = (function () {
            var $3 = Prelude["=="](Data_Maybe.eqMaybe(Prelude.eqInt))(Data_String.indexOf("?")(input))(new Data_Maybe.Just(0));
            if ($3) {
                return Data_String.drop(1)(input);
            };
            if (!$3) {
                return input;
            };
            throw new Error("Failed pattern match at Data.DOM.Simple.Window line 54, column 7 - line 54, column 104: " + [ $3.constructor.name ]);
        })();
        var kv = Prelude.map(Prelude.functorArray)(Data_String.split("="))(Data_String.split("&")(sanitizedInput));
        return Data_Array.head(Data_Array.mapMaybe(kvParser)(kv));
    };
};
var getLocation = function (dict) {
    return dict.getLocation;
};
var domLocation = new Location(Data_DOM_Simple_Unsafe_Window.unsafeGetLocation, Data_DOM_Simple_Unsafe_Window.unsafeGetSearchLocation, Data_DOM_Simple_Unsafe_Window.unsafeSetLocation);
var document = function (dict) {
    return dict.document;
};
var clearTimeout = function (dict) {
    return dict.clearTimeout;
};
module.exports = {
    Window: Window, 
    Location: Location, 
    getLocationValue: getLocationValue, 
    innerHeight: innerHeight, 
    innerWidth: innerWidth, 
    clearTimeout: clearTimeout, 
    setInterval: setInterval, 
    setTimeout: setTimeout, 
    location: location, 
    navigator: navigator, 
    document: document, 
    search: search, 
    setLocation: setLocation, 
    getLocation: getLocation, 
    htmlWindow: htmlWindow, 
    domLocation: domLocation, 
    globalWindow: $foreign.globalWindow
};

},{"./foreign":"/Users/gene/Programming/pure_morph/output/Data.DOM.Simple.Window/foreign.js","Control.Monad.Eff":"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff/index.js","DOM":"/Users/gene/Programming/pure_morph/output/DOM/index.js","Data.Array":"/Users/gene/Programming/pure_morph/output/Data.Array/index.js","Data.DOM.Simple.Document":"/Users/gene/Programming/pure_morph/output/Data.DOM.Simple.Document/index.js","Data.DOM.Simple.Types":"/Users/gene/Programming/pure_morph/output/Data.DOM.Simple.Types/index.js","Data.DOM.Simple.Unsafe.Window":"/Users/gene/Programming/pure_morph/output/Data.DOM.Simple.Unsafe.Window/index.js","Data.Maybe":"/Users/gene/Programming/pure_morph/output/Data.Maybe/index.js","Data.String":"/Users/gene/Programming/pure_morph/output/Data.String/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Data.Distributive/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Identity = require("Data.Identity");
var Distributive = function (__superclass_Prelude$dotFunctor_0, collect, distribute) {
    this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    this.collect = collect;
    this.distribute = distribute;
};
var distributiveIdentity = new Distributive(function () {
    return Data_Identity.functorIdentity;
}, function (dictFunctor) {
    return function (f) {
        return function ($7) {
            return Data_Identity.Identity(Prelude.map(dictFunctor)(function ($8) {
                return Data_Identity.runIdentity(f($8));
            })($7));
        };
    };
}, function (dictFunctor) {
    return function ($9) {
        return Data_Identity.Identity(Prelude.map(dictFunctor)(Data_Identity.runIdentity)($9));
    };
});
var distribute = function (dict) {
    return dict.distribute;
};
var distributiveFunction = new Distributive(function () {
    return Prelude.functorFn;
}, function (dictFunctor) {
    return function (f) {
        return function ($10) {
            return distribute(distributiveFunction)(dictFunctor)(Prelude.map(dictFunctor)(f)($10));
        };
    };
}, function (dictFunctor) {
    return function (a) {
        return function (e) {
            return Prelude.map(dictFunctor)(function (v) {
                return v(e);
            })(a);
        };
    };
});
var cotraverse = function (dictDistributive) {
    return function (dictFunctor) {
        return function (f) {
            return function ($11) {
                return Prelude.map(dictDistributive["__superclass_Prelude.Functor_0"]())(f)(distribute(dictDistributive)(dictFunctor)($11));
            };
        };
    };
};
var collect = function (dict) {
    return dict.collect;
};
module.exports = {
    Distributive: Distributive, 
    cotraverse: cotraverse, 
    collect: collect, 
    distribute: distribute, 
    distributiveIdentity: distributiveIdentity, 
    distributiveFunction: distributiveFunction
};

},{"Data.Identity":"/Users/gene/Programming/pure_morph/output/Data.Identity/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Data.Either.Unsafe/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Either.Unsafe

exports.unsafeThrow = function (msg) {
  throw new Error(msg);
};

},{}],"/Users/gene/Programming/pure_morph/output/Data.Either.Unsafe/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Either = require("Data.Either");
var fromRight = function (v) {
    if (v instanceof Data_Either.Right) {
        return v.value0;
    };
    return $foreign.unsafeThrow("Data.Either.Unsafe.fromRight called on Left value");
};
var fromLeft = function (v) {
    if (v instanceof Data_Either.Left) {
        return v.value0;
    };
    return $foreign.unsafeThrow("Data.Either.Unsafe.fromLeft called on Right value");
};
module.exports = {
    fromRight: fromRight, 
    fromLeft: fromLeft
};

},{"./foreign":"/Users/gene/Programming/pure_morph/output/Data.Either.Unsafe/foreign.js","Data.Either":"/Users/gene/Programming/pure_morph/output/Data.Either/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Data.Either/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Alt = require("Control.Alt");
var Control_Extend = require("Control.Extend");
var Data_Bifoldable = require("Data.Bifoldable");
var Data_Bifunctor = require("Data.Bifunctor");
var Data_Bitraversable = require("Data.Bitraversable");
var Data_Foldable = require("Data.Foldable");
var Data_Monoid = require("Data.Monoid");
var Data_Traversable = require("Data.Traversable");
var Left = (function () {
    function Left(value0) {
        this.value0 = value0;
    };
    Left.create = function (value0) {
        return new Left(value0);
    };
    return Left;
})();
var Right = (function () {
    function Right(value0) {
        this.value0 = value0;
    };
    Right.create = function (value0) {
        return new Right(value0);
    };
    return Right;
})();
var showEither = function (dictShow) {
    return function (dictShow1) {
        return new Prelude.Show(function (v) {
            if (v instanceof Left) {
                return "Left (" + (Prelude.show(dictShow)(v.value0) + ")");
            };
            if (v instanceof Right) {
                return "Right (" + (Prelude.show(dictShow1)(v.value0) + ")");
            };
            throw new Error("Failed pattern match at Data.Either line 174, column 1 - line 181, column 1: " + [ v.constructor.name ]);
        });
    };
};
var functorEither = new Prelude.Functor(function (v) {
    return function (v1) {
        if (v1 instanceof Left) {
            return new Left(v1.value0);
        };
        if (v1 instanceof Right) {
            return new Right(v(v1.value0));
        };
        throw new Error("Failed pattern match at Data.Either line 52, column 1 - line 56, column 1: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var foldableEither = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            if (v instanceof Left) {
                return Data_Monoid.mempty(dictMonoid);
            };
            if (v instanceof Right) {
                return f(v.value0);
            };
            throw new Error("Failed pattern match at Data.Either line 201, column 1 - line 209, column 1: " + [ f.constructor.name, v.constructor.name ]);
        };
    };
}, function (v) {
    return function (z) {
        return function (v1) {
            if (v1 instanceof Left) {
                return z;
            };
            if (v1 instanceof Right) {
                return v(z)(v1.value0);
            };
            throw new Error("Failed pattern match at Data.Either line 201, column 1 - line 209, column 1: " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
        };
    };
}, function (v) {
    return function (z) {
        return function (v1) {
            if (v1 instanceof Left) {
                return z;
            };
            if (v1 instanceof Right) {
                return v(v1.value0)(z);
            };
            throw new Error("Failed pattern match at Data.Either line 201, column 1 - line 209, column 1: " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
        };
    };
});
var traversableEither = new Data_Traversable.Traversable(function () {
    return foldableEither;
}, function () {
    return functorEither;
}, function (dictApplicative) {
    return function (v) {
        if (v instanceof Left) {
            return Prelude.pure(dictApplicative)(new Left(v.value0));
        };
        if (v instanceof Right) {
            return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Right.create)(v.value0);
        };
        throw new Error("Failed pattern match at Data.Either line 217, column 1 - line 223, column 1: " + [ v.constructor.name ]);
    };
}, function (dictApplicative) {
    return function (v) {
        return function (v1) {
            if (v1 instanceof Left) {
                return Prelude.pure(dictApplicative)(new Left(v1.value0));
            };
            if (v1 instanceof Right) {
                return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Right.create)(v(v1.value0));
            };
            throw new Error("Failed pattern match at Data.Either line 217, column 1 - line 223, column 1: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
});
var extendEither = new Control_Extend.Extend(function () {
    return functorEither;
}, function (v) {
    return function (v1) {
        if (v1 instanceof Left) {
            return new Left(v1.value0);
        };
        return new Right(v(v1));
    };
});
var eqEither = function (dictEq) {
    return function (dictEq1) {
        return new Prelude.Eq(function (v) {
            return function (v1) {
                if (v instanceof Left && v1 instanceof Left) {
                    return Prelude["=="](dictEq)(v.value0)(v1.value0);
                };
                if (v instanceof Right && v1 instanceof Right) {
                    return Prelude["=="](dictEq1)(v.value0)(v1.value0);
                };
                return false;
            };
        });
    };
};
var ordEither = function (dictOrd) {
    return function (dictOrd1) {
        return new Prelude.Ord(function () {
            return eqEither(dictOrd["__superclass_Prelude.Eq_0"]())(dictOrd1["__superclass_Prelude.Eq_0"]());
        }, function (v) {
            return function (v1) {
                if (v instanceof Left && v1 instanceof Left) {
                    return Prelude.compare(dictOrd)(v.value0)(v1.value0);
                };
                if (v instanceof Right && v1 instanceof Right) {
                    return Prelude.compare(dictOrd1)(v.value0)(v1.value0);
                };
                if (v instanceof Left) {
                    return Prelude.LT.value;
                };
                if (v1 instanceof Left) {
                    return Prelude.GT.value;
                };
                throw new Error("Failed pattern match at Data.Either line 191, column 1 - line 197, column 1: " + [ v.constructor.name, v1.constructor.name ]);
            };
        });
    };
};
var either = function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Left) {
                return v(v2.value0);
            };
            if (v2 instanceof Right) {
                return v1(v2.value0);
            };
            throw new Error("Failed pattern match at Data.Either line 28, column 1 - line 29, column 1: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
};
var isLeft = either(Prelude["const"](true))(Prelude["const"](false));
var isRight = either(Prelude["const"](false))(Prelude["const"](true));
var boundedEither = function (dictBounded) {
    return function (dictBounded1) {
        return new Prelude.Bounded(new Left(Prelude.bottom(dictBounded)), new Right(Prelude.top(dictBounded1)));
    };
};
var bifunctorEither = new Data_Bifunctor.Bifunctor(function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Left) {
                return new Left(v(v2.value0));
            };
            if (v2 instanceof Right) {
                return new Right(v1(v2.value0));
            };
            throw new Error("Failed pattern match at Data.Either line 56, column 1 - line 92, column 1: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
});
var bifoldableEither = new Data_Bifoldable.Bifoldable(function (dictMonoid) {
    return function (v) {
        return function (v1) {
            return function (v2) {
                if (v2 instanceof Left) {
                    return v(v2.value0);
                };
                if (v2 instanceof Right) {
                    return v1(v2.value0);
                };
                throw new Error("Failed pattern match at Data.Either line 209, column 1 - line 217, column 1: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
            };
        };
    };
}, function (v) {
    return function (v1) {
        return function (z) {
            return function (v2) {
                if (v2 instanceof Left) {
                    return v(z)(v2.value0);
                };
                if (v2 instanceof Right) {
                    return v1(z)(v2.value0);
                };
                throw new Error("Failed pattern match at Data.Either line 209, column 1 - line 217, column 1: " + [ v.constructor.name, v1.constructor.name, z.constructor.name, v2.constructor.name ]);
            };
        };
    };
}, function (v) {
    return function (v1) {
        return function (z) {
            return function (v2) {
                if (v2 instanceof Left) {
                    return v(v2.value0)(z);
                };
                if (v2 instanceof Right) {
                    return v1(v2.value0)(z);
                };
                throw new Error("Failed pattern match at Data.Either line 209, column 1 - line 217, column 1: " + [ v.constructor.name, v1.constructor.name, z.constructor.name, v2.constructor.name ]);
            };
        };
    };
});
var bitraversableEither = new Data_Bitraversable.Bitraversable(function () {
    return bifoldableEither;
}, function () {
    return bifunctorEither;
}, function (dictApplicative) {
    return function (v) {
        if (v instanceof Left) {
            return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Left.create)(v.value0);
        };
        if (v instanceof Right) {
            return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Right.create)(v.value0);
        };
        throw new Error("Failed pattern match at Data.Either line 223, column 1 - line 229, column 1: " + [ v.constructor.name ]);
    };
}, function (dictApplicative) {
    return function (v) {
        return function (v1) {
            return function (v2) {
                if (v2 instanceof Left) {
                    return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Left.create)(v(v2.value0));
                };
                if (v2 instanceof Right) {
                    return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Right.create)(v1(v2.value0));
                };
                throw new Error("Failed pattern match at Data.Either line 223, column 1 - line 229, column 1: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
            };
        };
    };
});
var applyEither = new Prelude.Apply(function () {
    return functorEither;
}, function (v) {
    return function (v1) {
        if (v instanceof Left) {
            return new Left(v.value0);
        };
        if (v instanceof Right) {
            return Prelude["<$>"](functorEither)(v.value0)(v1);
        };
        throw new Error("Failed pattern match at Data.Either line 92, column 1 - line 116, column 1: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var bindEither = new Prelude.Bind(function () {
    return applyEither;
}, either(function (e) {
    return function (v) {
        return new Left(e);
    };
})(function (a) {
    return function (f) {
        return f(a);
    };
}));
var semigroupEither = function (dictSemigroup) {
    return new Prelude.Semigroup(function (x) {
        return function (y) {
            return Prelude["<*>"](applyEither)(Prelude["<$>"](functorEither)(Prelude.append(dictSemigroup))(x))(y);
        };
    });
};
var semiringEither = function (dictSemiring) {
    return new Prelude.Semiring(function (x) {
        return function (y) {
            return Prelude["<*>"](applyEither)(Prelude["<$>"](functorEither)(Prelude.add(dictSemiring))(x))(y);
        };
    }, function (x) {
        return function (y) {
            return Prelude["<*>"](applyEither)(Prelude["<$>"](functorEither)(Prelude.mul(dictSemiring))(x))(y);
        };
    }, new Right(Prelude.one(dictSemiring)), new Right(Prelude.zero(dictSemiring)));
};
var applicativeEither = new Prelude.Applicative(function () {
    return applyEither;
}, Right.create);
var monadEither = new Prelude.Monad(function () {
    return applicativeEither;
}, function () {
    return bindEither;
});
var altEither = new Control_Alt.Alt(function () {
    return functorEither;
}, function (v) {
    return function (v1) {
        if (v instanceof Left) {
            return v1;
        };
        return v;
    };
});
module.exports = {
    Left: Left, 
    Right: Right, 
    isRight: isRight, 
    isLeft: isLeft, 
    either: either, 
    functorEither: functorEither, 
    bifunctorEither: bifunctorEither, 
    applyEither: applyEither, 
    applicativeEither: applicativeEither, 
    altEither: altEither, 
    bindEither: bindEither, 
    monadEither: monadEither, 
    extendEither: extendEither, 
    showEither: showEither, 
    eqEither: eqEither, 
    ordEither: ordEither, 
    boundedEither: boundedEither, 
    foldableEither: foldableEither, 
    bifoldableEither: bifoldableEither, 
    traversableEither: traversableEither, 
    bitraversableEither: bitraversableEither, 
    semiringEither: semiringEither, 
    semigroupEither: semigroupEither
};

},{"Control.Alt":"/Users/gene/Programming/pure_morph/output/Control.Alt/index.js","Control.Extend":"/Users/gene/Programming/pure_morph/output/Control.Extend/index.js","Data.Bifoldable":"/Users/gene/Programming/pure_morph/output/Data.Bifoldable/index.js","Data.Bifunctor":"/Users/gene/Programming/pure_morph/output/Data.Bifunctor/index.js","Data.Bitraversable":"/Users/gene/Programming/pure_morph/output/Data.Bitraversable/index.js","Data.Foldable":"/Users/gene/Programming/pure_morph/output/Data.Foldable/index.js","Data.Monoid":"/Users/gene/Programming/pure_morph/output/Data.Monoid/index.js","Data.Traversable":"/Users/gene/Programming/pure_morph/output/Data.Traversable/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Data.Foldable/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Foldable

exports.foldrArray = function (f) {
  return function (init) {
    return function (xs) {
      var acc = init;
      var len = xs.length;
      for (var i = len - 1; i >= 0; i--) {
        acc = f(xs[i])(acc);
      }
      return acc;
    };
  };
};

exports.foldlArray = function (f) {
  return function (init) {
    return function (xs) {
      var acc = init;
      var len = xs.length;
      for (var i = 0; i < len; i++) {
        acc = f(acc)(xs[i]);
      }
      return acc;
    };
  };
};

},{}],"/Users/gene/Programming/pure_morph/output/Data.Foldable/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Control_Apply = require("Control.Apply");
var Data_Maybe = require("Data.Maybe");
var Data_Maybe_First = require("Data.Maybe.First");
var Data_Maybe_Last = require("Data.Maybe.Last");
var Data_Monoid = require("Data.Monoid");
var Data_Monoid_Additive = require("Data.Monoid.Additive");
var Data_Monoid_Conj = require("Data.Monoid.Conj");
var Data_Monoid_Disj = require("Data.Monoid.Disj");
var Data_Monoid_Dual = require("Data.Monoid.Dual");
var Data_Monoid_Endo = require("Data.Monoid.Endo");
var Data_Monoid_Multiplicative = require("Data.Monoid.Multiplicative");
var Foldable = function (foldMap, foldl, foldr) {
    this.foldMap = foldMap;
    this.foldl = foldl;
    this.foldr = foldr;
};
var foldr = function (dict) {
    return dict.foldr;
};
var traverse_ = function (dictApplicative) {
    return function (dictFoldable) {
        return function (f) {
            return foldr(dictFoldable)(function ($161) {
                return Control_Apply["*>"](dictApplicative["__superclass_Prelude.Apply_0"]())(f($161));
            })(Prelude.pure(dictApplicative)(Prelude.unit));
        };
    };
};
var for_ = function (dictApplicative) {
    return function (dictFoldable) {
        return Prelude.flip(traverse_(dictApplicative)(dictFoldable));
    };
};
var sequence_ = function (dictApplicative) {
    return function (dictFoldable) {
        return traverse_(dictApplicative)(dictFoldable)(Prelude.id(Prelude.categoryFn));
    };
};
var foldl = function (dict) {
    return dict.foldl;
};
var intercalate = function (dictFoldable) {
    return function (dictMonoid) {
        return function (sep) {
            return function (xs) {
                var go = function (v) {
                    return function (x) {
                        if (v.init) {
                            return {
                                init: false, 
                                acc: x
                            };
                        };
                        return {
                            init: false, 
                            acc: Prelude["<>"](dictMonoid["__superclass_Prelude.Semigroup_0"]())(v.acc)(Prelude["<>"](dictMonoid["__superclass_Prelude.Semigroup_0"]())(sep)(x))
                        };
                    };
                };
                return (foldl(dictFoldable)(go)({
                    init: true, 
                    acc: Data_Monoid.mempty(dictMonoid)
                })(xs)).acc;
            };
        };
    };
};
var maximumBy = function (dictFoldable) {
    return function (cmp) {
        var max$prime = function (v) {
            return function (v1) {
                if (v instanceof Data_Maybe.Nothing) {
                    return new Data_Maybe.Just(v1);
                };
                if (v instanceof Data_Maybe.Just) {
                    return new Data_Maybe.Just((function () {
                        var $87 = cmp(v.value0)(v1);
                        if ($87 instanceof Prelude.GT) {
                            return v.value0;
                        };
                        return v1;
                    })());
                };
                throw new Error("Failed pattern match at Data.Foldable line 246, column 3 - line 247, column 3: " + [ v.constructor.name, v1.constructor.name ]);
            };
        };
        return foldl(dictFoldable)(max$prime)(Data_Maybe.Nothing.value);
    };
};
var maximum = function (dictOrd) {
    return function (dictFoldable) {
        return maximumBy(dictFoldable)(Prelude.compare(dictOrd));
    };
};
var mconcat = function (dictFoldable) {
    return function (dictMonoid) {
        return foldl(dictFoldable)(Prelude["<>"](dictMonoid["__superclass_Prelude.Semigroup_0"]()))(Data_Monoid.mempty(dictMonoid));
    };
};
var minimumBy = function (dictFoldable) {
    return function (cmp) {
        var min$prime = function (v) {
            return function (v1) {
                if (v instanceof Data_Maybe.Nothing) {
                    return new Data_Maybe.Just(v1);
                };
                if (v instanceof Data_Maybe.Just) {
                    return new Data_Maybe.Just((function () {
                        var $91 = cmp(v.value0)(v1);
                        if ($91 instanceof Prelude.LT) {
                            return v.value0;
                        };
                        return v1;
                    })());
                };
                throw new Error("Failed pattern match at Data.Foldable line 261, column 3 - line 262, column 3: " + [ v.constructor.name, v1.constructor.name ]);
            };
        };
        return foldl(dictFoldable)(min$prime)(Data_Maybe.Nothing.value);
    };
};
var minimum = function (dictOrd) {
    return function (dictFoldable) {
        return minimumBy(dictFoldable)(Prelude.compare(dictOrd));
    };
};
var product = function (dictFoldable) {
    return function (dictSemiring) {
        return foldl(dictFoldable)(Prelude["*"](dictSemiring))(Prelude.one(dictSemiring));
    };
};
var sum = function (dictFoldable) {
    return function (dictSemiring) {
        return foldl(dictFoldable)(Prelude["+"](dictSemiring))(Prelude.zero(dictSemiring));
    };
};
var foldableMultiplicative = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v)(z);
        };
    };
});
var foldableMaybe = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            if (v instanceof Data_Maybe.Nothing) {
                return Data_Monoid.mempty(dictMonoid);
            };
            if (v instanceof Data_Maybe.Just) {
                return f(v.value0);
            };
            throw new Error("Failed pattern match at Data.Foldable line 103, column 1 - line 111, column 1: " + [ f.constructor.name, v.constructor.name ]);
        };
    };
}, function (v) {
    return function (z) {
        return function (v1) {
            if (v1 instanceof Data_Maybe.Nothing) {
                return z;
            };
            if (v1 instanceof Data_Maybe.Just) {
                return v(z)(v1.value0);
            };
            throw new Error("Failed pattern match at Data.Foldable line 103, column 1 - line 111, column 1: " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
        };
    };
}, function (v) {
    return function (z) {
        return function (v1) {
            if (v1 instanceof Data_Maybe.Nothing) {
                return z;
            };
            if (v1 instanceof Data_Maybe.Just) {
                return v(v1.value0)(z);
            };
            throw new Error("Failed pattern match at Data.Foldable line 103, column 1 - line 111, column 1: " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
        };
    };
});
var foldableDual = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v)(z);
        };
    };
});
var foldableDisj = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v)(z);
        };
    };
});
var foldableConj = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v)(z);
        };
    };
});
var foldableAdditive = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v)(z);
        };
    };
});
var foldMapDefaultR = function (dictFoldable) {
    return function (dictMonoid) {
        return function (f) {
            return function (xs) {
                return foldr(dictFoldable)(function (x) {
                    return function (acc) {
                        return Prelude["<>"](dictMonoid["__superclass_Prelude.Semigroup_0"]())(f(x))(acc);
                    };
                })(Data_Monoid.mempty(dictMonoid))(xs);
            };
        };
    };
};
var foldableArray = new Foldable(function (dictMonoid) {
    return foldMapDefaultR(foldableArray)(dictMonoid);
}, $foreign.foldlArray, $foreign.foldrArray);
var foldMapDefaultL = function (dictFoldable) {
    return function (dictMonoid) {
        return function (f) {
            return function (xs) {
                return foldl(dictFoldable)(function (acc) {
                    return function (x) {
                        return Prelude["<>"](dictMonoid["__superclass_Prelude.Semigroup_0"]())(f(x))(acc);
                    };
                })(Data_Monoid.mempty(dictMonoid))(xs);
            };
        };
    };
};
var foldMap = function (dict) {
    return dict.foldMap;
};
var foldableFirst = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return foldMap(foldableMaybe)(dictMonoid)(f)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return foldl(foldableMaybe)(f)(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return foldr(foldableMaybe)(f)(z)(v);
        };
    };
});
var foldableLast = new Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return foldMap(foldableMaybe)(dictMonoid)(f)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return foldl(foldableMaybe)(f)(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return foldr(foldableMaybe)(f)(z)(v);
        };
    };
});
var foldlDefault = function (dictFoldable) {
    return function (c) {
        return function (u) {
            return function (xs) {
                return Data_Monoid_Endo.runEndo(Data_Monoid_Dual.runDual(foldMap(dictFoldable)(Data_Monoid_Dual.monoidDual(Data_Monoid_Endo.monoidEndo))(function ($162) {
                    return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Prelude.flip(c)($162)));
                })(xs)))(u);
            };
        };
    };
};
var foldrDefault = function (dictFoldable) {
    return function (c) {
        return function (u) {
            return function (xs) {
                return Data_Monoid_Endo.runEndo(foldMap(dictFoldable)(Data_Monoid_Endo.monoidEndo)(function ($163) {
                    return Data_Monoid_Endo.Endo(c($163));
                })(xs))(u);
            };
        };
    };
};
var fold = function (dictFoldable) {
    return function (dictMonoid) {
        return foldMap(dictFoldable)(dictMonoid)(Prelude.id(Prelude.categoryFn));
    };
};
var find = function (dictFoldable) {
    return function (p) {
        return foldl(dictFoldable)(function (r) {
            return function (x) {
                var $160 = p(x);
                if ($160) {
                    return new Data_Maybe.Just(x);
                };
                if (!$160) {
                    return r;
                };
                throw new Error("Failed pattern match at Data.Foldable line 233, column 1 - line 234, column 1: " + [ $160.constructor.name ]);
            };
        })(Data_Maybe.Nothing.value);
    };
};
var any = function (dictFoldable) {
    return function (dictBooleanAlgebra) {
        return function (p) {
            return function ($164) {
                return Data_Monoid_Disj.runDisj(foldMap(dictFoldable)(Data_Monoid_Disj.monoidDisj(dictBooleanAlgebra))(function ($165) {
                    return Data_Monoid_Disj.Disj(p($165));
                })($164));
            };
        };
    };
};
var elem = function (dictFoldable) {
    return function (dictEq) {
        return function ($166) {
            return any(dictFoldable)(Prelude.booleanAlgebraBoolean)(Prelude["=="](dictEq)($166));
        };
    };
};
var notElem = function (dictFoldable) {
    return function (dictEq) {
        return function (x) {
            return function ($167) {
                return !elem(dictFoldable)(dictEq)(x)($167);
            };
        };
    };
};
var or = function (dictFoldable) {
    return function (dictBooleanAlgebra) {
        return any(dictFoldable)(dictBooleanAlgebra)(Prelude.id(Prelude.categoryFn));
    };
};
var all = function (dictFoldable) {
    return function (dictBooleanAlgebra) {
        return function (p) {
            return function ($168) {
                return Data_Monoid_Conj.runConj(foldMap(dictFoldable)(Data_Monoid_Conj.monoidConj(dictBooleanAlgebra))(function ($169) {
                    return Data_Monoid_Conj.Conj(p($169));
                })($168));
            };
        };
    };
};
var and = function (dictFoldable) {
    return function (dictBooleanAlgebra) {
        return all(dictFoldable)(dictBooleanAlgebra)(Prelude.id(Prelude.categoryFn));
    };
};
module.exports = {
    Foldable: Foldable, 
    minimumBy: minimumBy, 
    minimum: minimum, 
    maximumBy: maximumBy, 
    maximum: maximum, 
    find: find, 
    notElem: notElem, 
    elem: elem, 
    product: product, 
    sum: sum, 
    all: all, 
    any: any, 
    or: or, 
    and: and, 
    intercalate: intercalate, 
    mconcat: mconcat, 
    sequence_: sequence_, 
    for_: for_, 
    traverse_: traverse_, 
    fold: fold, 
    foldMapDefaultR: foldMapDefaultR, 
    foldMapDefaultL: foldMapDefaultL, 
    foldlDefault: foldlDefault, 
    foldrDefault: foldrDefault, 
    foldMap: foldMap, 
    foldl: foldl, 
    foldr: foldr, 
    foldableArray: foldableArray, 
    foldableMaybe: foldableMaybe, 
    foldableFirst: foldableFirst, 
    foldableLast: foldableLast, 
    foldableAdditive: foldableAdditive, 
    foldableDual: foldableDual, 
    foldableDisj: foldableDisj, 
    foldableConj: foldableConj, 
    foldableMultiplicative: foldableMultiplicative
};

},{"./foreign":"/Users/gene/Programming/pure_morph/output/Data.Foldable/foreign.js","Control.Apply":"/Users/gene/Programming/pure_morph/output/Control.Apply/index.js","Data.Maybe":"/Users/gene/Programming/pure_morph/output/Data.Maybe/index.js","Data.Maybe.First":"/Users/gene/Programming/pure_morph/output/Data.Maybe.First/index.js","Data.Maybe.Last":"/Users/gene/Programming/pure_morph/output/Data.Maybe.Last/index.js","Data.Monoid":"/Users/gene/Programming/pure_morph/output/Data.Monoid/index.js","Data.Monoid.Additive":"/Users/gene/Programming/pure_morph/output/Data.Monoid.Additive/index.js","Data.Monoid.Conj":"/Users/gene/Programming/pure_morph/output/Data.Monoid.Conj/index.js","Data.Monoid.Disj":"/Users/gene/Programming/pure_morph/output/Data.Monoid.Disj/index.js","Data.Monoid.Dual":"/Users/gene/Programming/pure_morph/output/Data.Monoid.Dual/index.js","Data.Monoid.Endo":"/Users/gene/Programming/pure_morph/output/Data.Monoid.Endo/index.js","Data.Monoid.Multiplicative":"/Users/gene/Programming/pure_morph/output/Data.Monoid.Multiplicative/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Data.Foreign.Class/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Array = require("Data.Array");
var Data_Either = require("Data.Either");
var Data_Foreign = require("Data.Foreign");
var Data_Foreign_Index = require("Data.Foreign.Index");
var Data_Foreign_Null = require("Data.Foreign.Null");
var Data_Foreign_NullOrUndefined = require("Data.Foreign.NullOrUndefined");
var Data_Foreign_Undefined = require("Data.Foreign.Undefined");
var Data_Int = require("Data.Int");
var Data_Traversable = require("Data.Traversable");
var IsForeign = function (read) {
    this.read = read;
};
var stringIsForeign = new IsForeign(Data_Foreign.readString);
var read = function (dict) {
    return dict.read;
};
var readJSON = function (dictIsForeign) {
    return function (json) {
        return Prelude[">>="](Data_Either.bindEither)(Data_Foreign.parseJSON(json))(read(dictIsForeign));
    };
};
var readWith = function (dictIsForeign) {
    return function (f) {
        return function (value) {
            return Data_Either.either(function ($8) {
                return Data_Either.Left.create(f($8));
            })(Data_Either.Right.create)(read(dictIsForeign)(value));
        };
    };
};
var readProp = function (dictIsForeign) {
    return function (dictIndex) {
        return function (prop) {
            return function (value) {
                return Prelude[">>="](Data_Either.bindEither)(Data_Foreign_Index["!"](dictIndex)(value)(prop))(readWith(dictIsForeign)(Data_Foreign_Index.errorAt(dictIndex)(prop)));
            };
        };
    };
};
var undefinedIsForeign = function (dictIsForeign) {
    return new IsForeign(Data_Foreign_Undefined.readUndefined(read(dictIsForeign)));
};
var numberIsForeign = new IsForeign(Data_Foreign.readNumber);
var nullOrUndefinedIsForeign = function (dictIsForeign) {
    return new IsForeign(Data_Foreign_NullOrUndefined.readNullOrUndefined(read(dictIsForeign)));
};
var nullIsForeign = function (dictIsForeign) {
    return new IsForeign(Data_Foreign_Null.readNull(read(dictIsForeign)));
};
var intIsForeign = new IsForeign(Data_Foreign.readInt);
var foreignIsForeign = new IsForeign(function (f) {
    return Prelude["return"](Data_Either.applicativeEither)(f);
});
var charIsForeign = new IsForeign(Data_Foreign.readChar);
var booleanIsForeign = new IsForeign(Data_Foreign.readBoolean);
var arrayIsForeign = function (dictIsForeign) {
    return new IsForeign(function (value) {
        var readElement = function (i) {
            return function (value1) {
                return readWith(dictIsForeign)(Data_Foreign.ErrorAtIndex.create(i))(value1);
            };
        };
        var readElements = function (arr) {
            return Data_Traversable.sequence(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(Data_Array.zipWith(readElement)(Data_Array.range(0)(Data_Array.length(arr)))(arr));
        };
        return Prelude[">>="](Data_Either.bindEither)(Data_Foreign.readArray(value))(readElements);
    });
};
module.exports = {
    IsForeign: IsForeign, 
    readProp: readProp, 
    readWith: readWith, 
    readJSON: readJSON, 
    read: read, 
    foreignIsForeign: foreignIsForeign, 
    stringIsForeign: stringIsForeign, 
    charIsForeign: charIsForeign, 
    booleanIsForeign: booleanIsForeign, 
    numberIsForeign: numberIsForeign, 
    intIsForeign: intIsForeign, 
    arrayIsForeign: arrayIsForeign, 
    nullIsForeign: nullIsForeign, 
    undefinedIsForeign: undefinedIsForeign, 
    nullOrUndefinedIsForeign: nullOrUndefinedIsForeign
};

},{"Data.Array":"/Users/gene/Programming/pure_morph/output/Data.Array/index.js","Data.Either":"/Users/gene/Programming/pure_morph/output/Data.Either/index.js","Data.Foreign":"/Users/gene/Programming/pure_morph/output/Data.Foreign/index.js","Data.Foreign.Index":"/Users/gene/Programming/pure_morph/output/Data.Foreign.Index/index.js","Data.Foreign.Null":"/Users/gene/Programming/pure_morph/output/Data.Foreign.Null/index.js","Data.Foreign.NullOrUndefined":"/Users/gene/Programming/pure_morph/output/Data.Foreign.NullOrUndefined/index.js","Data.Foreign.Undefined":"/Users/gene/Programming/pure_morph/output/Data.Foreign.Undefined/index.js","Data.Int":"/Users/gene/Programming/pure_morph/output/Data.Int/index.js","Data.Traversable":"/Users/gene/Programming/pure_morph/output/Data.Traversable/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Data.Foreign.Index/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Foreign.Index

// jshint maxparams: 4
exports.unsafeReadPropImpl = function (f, s, key, value) {
  return value == null ? f : s(value[key]);
};

// jshint maxparams: 2
exports.unsafeHasOwnProperty = function (prop, value) {
  return Object.prototype.hasOwnProperty.call(value, prop);
};

exports.unsafeHasProperty = function (prop, value) {
  return prop in value;
};

},{}],"/Users/gene/Programming/pure_morph/output/Data.Foreign.Index/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Either = require("Data.Either");
var Data_Foreign = require("Data.Foreign");
var Data_Function = require("Data.Function");
var Data_Int = require("Data.Int");
var Index = function (errorAt, hasOwnProperty, hasProperty, ix) {
    this.errorAt = errorAt;
    this.hasOwnProperty = hasOwnProperty;
    this.hasProperty = hasProperty;
    this.ix = ix;
};
var unsafeReadProp = function (k) {
    return function (value) {
        return $foreign.unsafeReadPropImpl(new Data_Either.Left(new Data_Foreign.TypeMismatch("object", Data_Foreign.typeOf(value))), Prelude.pure(Data_Either.applicativeEither), k, value);
    };
};
var prop = unsafeReadProp;
var ix = function (dict) {
    return dict.ix;
};
var $bang = function (dictIndex) {
    return ix(dictIndex);
};
var index = unsafeReadProp;
var hasPropertyImpl = function (v) {
    return function (value) {
        if (Data_Foreign.isNull(value)) {
            return false;
        };
        if (Data_Foreign.isUndefined(value)) {
            return false;
        };
        if (Data_Foreign.typeOf(value) === "object" || Data_Foreign.typeOf(value) === "function") {
            return $foreign.unsafeHasProperty(v, value);
        };
        return false;
    };
};
var hasProperty = function (dict) {
    return dict.hasProperty;
};
var hasOwnPropertyImpl = function (v) {
    return function (value) {
        if (Data_Foreign.isNull(value)) {
            return false;
        };
        if (Data_Foreign.isUndefined(value)) {
            return false;
        };
        if (Data_Foreign.typeOf(value) === "object" || Data_Foreign.typeOf(value) === "function") {
            return $foreign.unsafeHasOwnProperty(v, value);
        };
        return false;
    };
};
var indexInt = new Index(Data_Foreign.ErrorAtIndex.create, hasOwnPropertyImpl, hasPropertyImpl, Prelude.flip(index));
var indexString = new Index(Data_Foreign.ErrorAtProperty.create, hasOwnPropertyImpl, hasPropertyImpl, Prelude.flip(prop));
var hasOwnProperty = function (dict) {
    return dict.hasOwnProperty;
};
var errorAt = function (dict) {
    return dict.errorAt;
};
module.exports = {
    Index: Index, 
    errorAt: errorAt, 
    hasOwnProperty: hasOwnProperty, 
    hasProperty: hasProperty, 
    "!": $bang, 
    ix: ix, 
    index: index, 
    prop: prop, 
    indexString: indexString, 
    indexInt: indexInt
};

},{"./foreign":"/Users/gene/Programming/pure_morph/output/Data.Foreign.Index/foreign.js","Data.Either":"/Users/gene/Programming/pure_morph/output/Data.Either/index.js","Data.Foreign":"/Users/gene/Programming/pure_morph/output/Data.Foreign/index.js","Data.Function":"/Users/gene/Programming/pure_morph/output/Data.Function/index.js","Data.Int":"/Users/gene/Programming/pure_morph/output/Data.Int/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Data.Foreign.Null/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Foreign = require("Data.Foreign");
var Data_Either = require("Data.Either");
var Null = function (x) {
    return x;
};
var runNull = function (v) {
    return v;
};
var readNull = function (v) {
    return function (value) {
        if (Data_Foreign.isNull(value)) {
            return Prelude.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
        };
        return Prelude["<$>"](Data_Either.functorEither)(function ($5) {
            return Null(Data_Maybe.Just.create($5));
        })(v(value));
    };
};
module.exports = {
    Null: Null, 
    readNull: readNull, 
    runNull: runNull
};

},{"Data.Either":"/Users/gene/Programming/pure_morph/output/Data.Either/index.js","Data.Foreign":"/Users/gene/Programming/pure_morph/output/Data.Foreign/index.js","Data.Maybe":"/Users/gene/Programming/pure_morph/output/Data.Maybe/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Data.Foreign.NullOrUndefined/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Foreign = require("Data.Foreign");
var Data_Either = require("Data.Either");
var NullOrUndefined = function (x) {
    return x;
};
var runNullOrUndefined = function (v) {
    return v;
};
var readNullOrUndefined = function (v) {
    return function (value) {
        if (Data_Foreign.isNull(value) || Data_Foreign.isUndefined(value)) {
            return Prelude.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
        };
        return Prelude["<$>"](Data_Either.functorEither)(function ($5) {
            return NullOrUndefined(Data_Maybe.Just.create($5));
        })(v(value));
    };
};
module.exports = {
    NullOrUndefined: NullOrUndefined, 
    readNullOrUndefined: readNullOrUndefined, 
    runNullOrUndefined: runNullOrUndefined
};

},{"Data.Either":"/Users/gene/Programming/pure_morph/output/Data.Either/index.js","Data.Foreign":"/Users/gene/Programming/pure_morph/output/Data.Foreign/index.js","Data.Maybe":"/Users/gene/Programming/pure_morph/output/Data.Maybe/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Data.Foreign.Undefined/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Foreign = require("Data.Foreign");
var Data_Either = require("Data.Either");
var Undefined = function (x) {
    return x;
};
var runUndefined = function (v) {
    return v;
};
var readUndefined = function (v) {
    return function (value) {
        if (Data_Foreign.isUndefined(value)) {
            return Prelude.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
        };
        return Prelude["<$>"](Data_Either.functorEither)(function ($5) {
            return Undefined(Data_Maybe.Just.create($5));
        })(v(value));
    };
};
module.exports = {
    Undefined: Undefined, 
    readUndefined: readUndefined, 
    runUndefined: runUndefined
};

},{"Data.Either":"/Users/gene/Programming/pure_morph/output/Data.Either/index.js","Data.Foreign":"/Users/gene/Programming/pure_morph/output/Data.Foreign/index.js","Data.Maybe":"/Users/gene/Programming/pure_morph/output/Data.Maybe/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Data.Foreign/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Foreign

// jshint maxparams: 3
exports.parseJSONImpl = function (left, right, str) {
  try {
    return right(JSON.parse(str));
  } catch (e) {
    return left(e.toString());
  }
};

// jshint maxparams: 1
exports.toForeign = function (value) {
  return value;
};

exports.unsafeFromForeign = function (value) {
  return value;
};

exports.typeOf = function (value) {
  return typeof value;
};

exports.tagOf = function (value) {
  return Object.prototype.toString.call(value).slice(8, -1);
};

exports.isNull = function (value) {
  return value === null;
};

exports.isUndefined = function (value) {
  return value === undefined;
};

exports.isArray = Array.isArray || function (value) {
  return Object.prototype.toString.call(value) === "[object Array]";
};

},{}],"/Users/gene/Programming/pure_morph/output/Data.Foreign/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Either = require("Data.Either");
var Data_Maybe = require("Data.Maybe");
var Data_Function = require("Data.Function");
var Data_Int = require("Data.Int");
var Data_String = require("Data.String");
var TypeMismatch = (function () {
    function TypeMismatch(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    TypeMismatch.create = function (value0) {
        return function (value1) {
            return new TypeMismatch(value0, value1);
        };
    };
    return TypeMismatch;
})();
var ErrorAtIndex = (function () {
    function ErrorAtIndex(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ErrorAtIndex.create = function (value0) {
        return function (value1) {
            return new ErrorAtIndex(value0, value1);
        };
    };
    return ErrorAtIndex;
})();
var ErrorAtProperty = (function () {
    function ErrorAtProperty(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ErrorAtProperty.create = function (value0) {
        return function (value1) {
            return new ErrorAtProperty(value0, value1);
        };
    };
    return ErrorAtProperty;
})();
var JSONError = (function () {
    function JSONError(value0) {
        this.value0 = value0;
    };
    JSONError.create = function (value0) {
        return new JSONError(value0);
    };
    return JSONError;
})();
var unsafeReadTagged = function (tag) {
    return function (value) {
        if ($foreign.tagOf(value) === tag) {
            return Prelude.pure(Data_Either.applicativeEither)($foreign.unsafeFromForeign(value));
        };
        return new Data_Either.Left(new TypeMismatch(tag, $foreign.tagOf(value)));
    };
};
var showForeignError = new Prelude.Show(function (v) {
    if (v instanceof TypeMismatch) {
        return "Type mismatch: expected " + (v.value0 + (", found " + v.value1));
    };
    if (v instanceof ErrorAtIndex) {
        return "Error at array index " + (Prelude.show(Prelude.showInt)(v.value0) + (": " + Prelude.show(showForeignError)(v.value1)));
    };
    if (v instanceof ErrorAtProperty) {
        return "Error at property " + (Prelude.show(Prelude.showString)(v.value0) + (": " + Prelude.show(showForeignError)(v.value1)));
    };
    if (v instanceof JSONError) {
        return "JSON error: " + v.value0;
    };
    throw new Error("Failed pattern match: " + [ v.constructor.name ]);
});
var readString = unsafeReadTagged("String");
var readNumber = unsafeReadTagged("Number");
var readInt = function (value) {
    var error = Data_Either.Left.create(new TypeMismatch("Int", $foreign.tagOf(value)));
    var fromNumber = function ($30) {
        return Data_Maybe.maybe(error)(Prelude.pure(Data_Either.applicativeEither))(Data_Int.fromNumber($30));
    };
    return Data_Either.either(Prelude["const"](error))(fromNumber)(readNumber(value));
};
var readChar = function (value) {
    var error = Data_Either.Left.create(new TypeMismatch("Char", $foreign.tagOf(value)));
    var fromString = function ($31) {
        return Data_Maybe.maybe(error)(Prelude.pure(Data_Either.applicativeEither))(Data_String.toChar($31));
    };
    return Data_Either.either(Prelude["const"](error))(fromString)(readString(value));
};
var readBoolean = unsafeReadTagged("Boolean");
var readArray = function (value) {
    if ($foreign.isArray(value)) {
        return Prelude.pure(Data_Either.applicativeEither)($foreign.unsafeFromForeign(value));
    };
    return new Data_Either.Left(new TypeMismatch("array", $foreign.tagOf(value)));
};
var parseJSON = function (json) {
    return $foreign.parseJSONImpl(function ($32) {
        return Data_Either.Left.create(JSONError.create($32));
    }, Data_Either.Right.create, json);
};
var eqForeignError = new Prelude.Eq(function (v) {
    return function (v1) {
        if (v instanceof TypeMismatch && v1 instanceof TypeMismatch) {
            return v.value0 === v1.value0 && v.value1 === v1.value1;
        };
        if (v instanceof ErrorAtIndex && v1 instanceof ErrorAtIndex) {
            return v.value0 === v1.value0 && Prelude["=="](eqForeignError)(v.value1)(v1.value1);
        };
        if (v instanceof ErrorAtProperty && v1 instanceof ErrorAtProperty) {
            return v.value0 === v1.value0 && Prelude["=="](eqForeignError)(v.value1)(v1.value1);
        };
        if (v instanceof JSONError && v1 instanceof JSONError) {
            return v.value0 === v1.value0;
        };
        return false;
    };
});
module.exports = {
    TypeMismatch: TypeMismatch, 
    ErrorAtIndex: ErrorAtIndex, 
    ErrorAtProperty: ErrorAtProperty, 
    JSONError: JSONError, 
    readArray: readArray, 
    readInt: readInt, 
    readNumber: readNumber, 
    readBoolean: readBoolean, 
    readChar: readChar, 
    readString: readString, 
    unsafeReadTagged: unsafeReadTagged, 
    parseJSON: parseJSON, 
    showForeignError: showForeignError, 
    eqForeignError: eqForeignError, 
    isArray: $foreign.isArray, 
    isUndefined: $foreign.isUndefined, 
    isNull: $foreign.isNull, 
    tagOf: $foreign.tagOf, 
    typeOf: $foreign.typeOf, 
    unsafeFromForeign: $foreign.unsafeFromForeign, 
    toForeign: $foreign.toForeign
};

},{"./foreign":"/Users/gene/Programming/pure_morph/output/Data.Foreign/foreign.js","Data.Either":"/Users/gene/Programming/pure_morph/output/Data.Either/index.js","Data.Function":"/Users/gene/Programming/pure_morph/output/Data.Function/index.js","Data.Int":"/Users/gene/Programming/pure_morph/output/Data.Int/index.js","Data.Maybe":"/Users/gene/Programming/pure_morph/output/Data.Maybe/index.js","Data.String":"/Users/gene/Programming/pure_morph/output/Data.String/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Data.Function/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Function

exports.mkFn0 = function (fn) {
  return function () {
    return fn({});
  };
};

exports.mkFn1 = function (fn) {
  return function (a) {
    return fn(a);
  };
};

exports.mkFn2 = function (fn) {
  /* jshint maxparams: 2 */
  return function (a, b) {
    return fn(a)(b);
  };
};

exports.mkFn3 = function (fn) {
  /* jshint maxparams: 3 */
  return function (a, b, c) {
    return fn(a)(b)(c);
  };
};

exports.mkFn4 = function (fn) {
  /* jshint maxparams: 4 */
  return function (a, b, c, d) {
    return fn(a)(b)(c)(d);
  };
};

exports.mkFn5 = function (fn) {
  /* jshint maxparams: 5 */
  return function (a, b, c, d, e) {
    return fn(a)(b)(c)(d)(e);
  };
};

exports.mkFn6 = function (fn) {
  /* jshint maxparams: 6 */
  return function (a, b, c, d, e, f) {
    return fn(a)(b)(c)(d)(e)(f);
  };
};

exports.mkFn7 = function (fn) {
  /* jshint maxparams: 7 */
  return function (a, b, c, d, e, f, g) {
    return fn(a)(b)(c)(d)(e)(f)(g);
  };
};

exports.mkFn8 = function (fn) {
  /* jshint maxparams: 8 */
  return function (a, b, c, d, e, f, g, h) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h);
  };
};

exports.mkFn9 = function (fn) {
  /* jshint maxparams: 9 */
  return function (a, b, c, d, e, f, g, h, i) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i);
  };
};

exports.mkFn10 = function (fn) {
  /* jshint maxparams: 10 */
  return function (a, b, c, d, e, f, g, h, i, j) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)(j);
  };
};

exports.runFn0 = function (fn) {
  return fn();
};

exports.runFn1 = function (fn) {
  return function (a) {
    return fn(a);
  };
};

exports.runFn2 = function (fn) {
  return function (a) {
    return function (b) {
      return fn(a, b);
    };
  };
};

exports.runFn3 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return fn(a, b, c);
      };
    };
  };
};

exports.runFn4 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return fn(a, b, c, d);
        };
      };
    };
  };
};

exports.runFn5 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return fn(a, b, c, d, e);
          };
        };
      };
    };
  };
};

exports.runFn6 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return fn(a, b, c, d, e, f);
            };
          };
        };
      };
    };
  };
};

exports.runFn7 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return fn(a, b, c, d, e, f, g);
              };
            };
          };
        };
      };
    };
  };
};

exports.runFn8 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return fn(a, b, c, d, e, f, g, h);
                };
              };
            };
          };
        };
      };
    };
  };
};

exports.runFn9 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return function (i) {
                    return fn(a, b, c, d, e, f, g, h, i);
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};

exports.runFn10 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return function (i) {
                    return function (j) {
                      return fn(a, b, c, d, e, f, g, h, i, j);
                    };
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};

},{}],"/Users/gene/Programming/pure_morph/output/Data.Function/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var on = function (f) {
    return function (g) {
        return function (x) {
            return function (y) {
                return f(g(x))(g(y));
            };
        };
    };
};
module.exports = {
    on: on, 
    runFn10: $foreign.runFn10, 
    runFn9: $foreign.runFn9, 
    runFn8: $foreign.runFn8, 
    runFn7: $foreign.runFn7, 
    runFn6: $foreign.runFn6, 
    runFn5: $foreign.runFn5, 
    runFn4: $foreign.runFn4, 
    runFn3: $foreign.runFn3, 
    runFn2: $foreign.runFn2, 
    runFn1: $foreign.runFn1, 
    runFn0: $foreign.runFn0, 
    mkFn10: $foreign.mkFn10, 
    mkFn9: $foreign.mkFn9, 
    mkFn8: $foreign.mkFn8, 
    mkFn7: $foreign.mkFn7, 
    mkFn6: $foreign.mkFn6, 
    mkFn5: $foreign.mkFn5, 
    mkFn4: $foreign.mkFn4, 
    mkFn3: $foreign.mkFn3, 
    mkFn2: $foreign.mkFn2, 
    mkFn1: $foreign.mkFn1, 
    mkFn0: $foreign.mkFn0
};

},{"./foreign":"/Users/gene/Programming/pure_morph/output/Data.Function/foreign.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Data.Functor.Invariant/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var Invariant = function (imap) {
    this.imap = imap;
};
var imapF = function (dictFunctor) {
    return function ($1) {
        return Prelude["const"](Prelude.map(dictFunctor)($1));
    };
};
var invariantArray = new Invariant(imapF(Prelude.functorArray));
var invariantFn = new Invariant(imapF(Prelude.functorFn));
var imap = function (dict) {
    return dict.imap;
};
module.exports = {
    Invariant: Invariant, 
    imapF: imapF, 
    imap: imap, 
    invariantFn: invariantFn, 
    invariantArray: invariantArray
};

},{"Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Data.Functor/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var $less$dollar = function (dictFunctor) {
    return function (x) {
        return function (f) {
            return Prelude["<$>"](dictFunctor)(Prelude["const"](x))(f);
        };
    };
};
var $dollar$greater = function (dictFunctor) {
    return function (f) {
        return function (x) {
            return Prelude["<$>"](dictFunctor)(Prelude["const"](x))(f);
        };
    };
};
module.exports = {
    "$>": $dollar$greater, 
    "<$": $less$dollar
};

},{"Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Data.Identity/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Comonad = require("Control.Comonad");
var Control_Extend = require("Control.Extend");
var Data_Foldable = require("Data.Foldable");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Data_Monoid = require("Data.Monoid");
var Data_Traversable = require("Data.Traversable");
var Identity = function (x) {
    return x;
};
var showIdentity = function (dictShow) {
    return new Prelude.Show(function (v) {
        return "Identity (" + (Prelude.show(dictShow)(v) + ")");
    });
};
var semiringIdentity = function (dictSemiring) {
    return new Prelude.Semiring(function (v) {
        return function (v1) {
            return Prelude["+"](dictSemiring)(v)(v1);
        };
    }, function (v) {
        return function (v1) {
            return Prelude["*"](dictSemiring)(v)(v1);
        };
    }, Prelude.one(dictSemiring), Prelude.zero(dictSemiring));
};
var semigroupIdenity = function (dictSemigroup) {
    return new Prelude.Semigroup(function (v) {
        return function (v1) {
            return Prelude["<>"](dictSemigroup)(v)(v1);
        };
    });
};
var runIdentity = function (v) {
    return v;
};
var ringIdentity = function (dictRing) {
    return new Prelude.Ring(function () {
        return semiringIdentity(dictRing["__superclass_Prelude.Semiring_0"]());
    }, function (v) {
        return function (v1) {
            return Prelude["-"](dictRing)(v)(v1);
        };
    });
};
var monoidIdentity = function (dictMonoid) {
    return new Data_Monoid.Monoid(function () {
        return semigroupIdenity(dictMonoid["__superclass_Prelude.Semigroup_0"]());
    }, Data_Monoid.mempty(dictMonoid));
};
var moduloSemiringIdentity = function (dictModuloSemiring) {
    return new Prelude.ModuloSemiring(function () {
        return semiringIdentity(dictModuloSemiring["__superclass_Prelude.Semiring_0"]());
    }, function (v) {
        return function (v1) {
            return Prelude["/"](dictModuloSemiring)(v)(v1);
        };
    }, function (v) {
        return function (v1) {
            return Prelude.mod(dictModuloSemiring)(v)(v1);
        };
    });
};
var functorIdentity = new Prelude.Functor(function (f) {
    return function (v) {
        return f(v);
    };
});
var invariantIdentity = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorIdentity));
var foldableIdentity = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v)(z);
        };
    };
});
var traversableIdentity = new Data_Traversable.Traversable(function () {
    return foldableIdentity;
}, function () {
    return functorIdentity;
}, function (dictApplicative) {
    return function (v) {
        return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Identity)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Identity)(f(v));
        };
    };
});
var extendIdentity = new Control_Extend.Extend(function () {
    return functorIdentity;
}, function (f) {
    return function (m) {
        return f(m);
    };
});
var eqIdentity = function (dictEq) {
    return new Prelude.Eq(function (v) {
        return function (v1) {
            return Prelude["=="](dictEq)(v)(v1);
        };
    });
};
var ordIdentity = function (dictOrd) {
    return new Prelude.Ord(function () {
        return eqIdentity(dictOrd["__superclass_Prelude.Eq_0"]());
    }, function (v) {
        return function (v1) {
            return Prelude.compare(dictOrd)(v)(v1);
        };
    });
};
var divisionRingIdentity = function (dictDivisionRing) {
    return new Prelude.DivisionRing(function () {
        return moduloSemiringIdentity(dictDivisionRing["__superclass_Prelude.ModuloSemiring_1"]());
    }, function () {
        return ringIdentity(dictDivisionRing["__superclass_Prelude.Ring_0"]());
    });
};
var numIdentity = function (dictNum) {
    return new Prelude.Num(function () {
        return divisionRingIdentity(dictNum["__superclass_Prelude.DivisionRing_0"]());
    });
};
var comonadIdentity = new Control_Comonad.Comonad(function () {
    return extendIdentity;
}, function (v) {
    return v;
});
var boundedIdentity = function (dictBounded) {
    return new Prelude.Bounded(Prelude.bottom(dictBounded), Prelude.top(dictBounded));
};
var boundedOrdIdentity = function (dictBoundedOrd) {
    return new Prelude.BoundedOrd(function () {
        return boundedIdentity(dictBoundedOrd["__superclass_Prelude.Bounded_0"]());
    }, function () {
        return ordIdentity(dictBoundedOrd["__superclass_Prelude.Ord_1"]());
    });
};
var booleanAlgebraIdentity = function (dictBooleanAlgebra) {
    return new Prelude.BooleanAlgebra(function () {
        return boundedIdentity(dictBooleanAlgebra["__superclass_Prelude.Bounded_0"]());
    }, function (v) {
        return function (v1) {
            return Prelude.conj(dictBooleanAlgebra)(v)(v1);
        };
    }, function (v) {
        return function (v1) {
            return Prelude.disj(dictBooleanAlgebra)(v)(v1);
        };
    }, function (v) {
        return Prelude.not(dictBooleanAlgebra)(v);
    });
};
var applyIdentity = new Prelude.Apply(function () {
    return functorIdentity;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindIdentity = new Prelude.Bind(function () {
    return applyIdentity;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeIdentity = new Prelude.Applicative(function () {
    return applyIdentity;
}, Identity);
var monadIdentity = new Prelude.Monad(function () {
    return applicativeIdentity;
}, function () {
    return bindIdentity;
});
module.exports = {
    Identity: Identity, 
    runIdentity: runIdentity, 
    eqIdentity: eqIdentity, 
    ordIdentity: ordIdentity, 
    boundedIdentity: boundedIdentity, 
    boundedOrdIdentity: boundedOrdIdentity, 
    booleanAlgebraIdentity: booleanAlgebraIdentity, 
    semigroupIdenity: semigroupIdenity, 
    monoidIdentity: monoidIdentity, 
    semiringIdentity: semiringIdentity, 
    moduloSemiringIdentity: moduloSemiringIdentity, 
    ringIdentity: ringIdentity, 
    divisionRingIdentity: divisionRingIdentity, 
    numIdentity: numIdentity, 
    showIdentity: showIdentity, 
    functorIdentity: functorIdentity, 
    invariantIdentity: invariantIdentity, 
    applyIdentity: applyIdentity, 
    applicativeIdentity: applicativeIdentity, 
    bindIdentity: bindIdentity, 
    monadIdentity: monadIdentity, 
    extendIdentity: extendIdentity, 
    comonadIdentity: comonadIdentity, 
    foldableIdentity: foldableIdentity, 
    traversableIdentity: traversableIdentity
};

},{"Control.Comonad":"/Users/gene/Programming/pure_morph/output/Control.Comonad/index.js","Control.Extend":"/Users/gene/Programming/pure_morph/output/Control.Extend/index.js","Data.Foldable":"/Users/gene/Programming/pure_morph/output/Data.Foldable/index.js","Data.Functor.Invariant":"/Users/gene/Programming/pure_morph/output/Data.Functor.Invariant/index.js","Data.Monoid":"/Users/gene/Programming/pure_morph/output/Data.Monoid/index.js","Data.Traversable":"/Users/gene/Programming/pure_morph/output/Data.Traversable/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Data.Int.Bits/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Int.Bits

exports.andImpl = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 & n2;
  };
};

exports.orImpl = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 | n2;
  };
};

exports.xorImpl = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 ^ n2;
  };
};

exports.shl = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 << n2;
  };
};

exports.shr = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 >> n2;
  };
};

exports.zshr = function (n1) {
  return function (n2) {
    /* jshint bitwise: false */
    return n1 >>> n2;
  };
};

exports.complement = function (n) {
  /* jshint bitwise: false */
  return ~n;
};

},{}],"/Users/gene/Programming/pure_morph/output/Data.Int.Bits/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var $foreign = require("./foreign");
var $dot$bar$dot = $foreign.orImpl;
var $dot$up$dot = $foreign.xorImpl;
var $dot$amp$dot = $foreign.andImpl;
module.exports = {
    ".^.": $dot$up$dot, 
    ".|.": $dot$bar$dot, 
    ".&.": $dot$amp$dot, 
    complement: $foreign.complement, 
    zshr: $foreign.zshr, 
    shr: $foreign.shr, 
    shl: $foreign.shl
};

},{"./foreign":"/Users/gene/Programming/pure_morph/output/Data.Int.Bits/foreign.js"}],"/Users/gene/Programming/pure_morph/output/Data.Int/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Int

exports.fromNumberImpl = function (just) {
  return function (nothing) {
    return function (n) {
      /* jshint bitwise: false */
      return (n | 0) === n ? just(n) : nothing;
    };
  };
};

exports.toNumber = function (n) {
  return n;
};

exports.fromStringImpl = function (just) {
  return function (nothing) {
    return function (s) {
      /* jshint bitwise: false */
      var i = parseFloat(s);
      return (i | 0) === i ? just(i) : nothing;
    };
  };
};

},{}],"/Users/gene/Programming/pure_morph/output/Data.Int/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Int_Bits = require("Data.Int.Bits");
var Data_Maybe = require("Data.Maybe");
var Data_Maybe_Unsafe = require("Data.Maybe.Unsafe");
var $$Math = require("Math");
var odd = function (x) {
    return (x & 1) !== 0;
};
var fromString = $foreign.fromStringImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var unsafeClamp = function (x) {
    if (x >= $foreign.toNumber(Prelude.top(Prelude.boundedInt))) {
        return Prelude.top(Prelude.boundedInt);
    };
    if (x <= $foreign.toNumber(Prelude.bottom(Prelude.boundedInt))) {
        return Prelude.bottom(Prelude.boundedInt);
    };
    if (Prelude.otherwise) {
        return Data_Maybe_Unsafe.fromJust(fromNumber(x));
    };
    throw new Error("Failed pattern match at Data.Int line 48, column 1 - line 49, column 1: " + [ x.constructor.name ]);
};
var round = function ($1) {
    return unsafeClamp($$Math.round($1));
};
var floor = function ($2) {
    return unsafeClamp($$Math.floor($2));
};
var even = function (x) {
    return (x & 1) === 0;
};
var ceil = function ($3) {
    return unsafeClamp($$Math.ceil($3));
};
module.exports = {
    odd: odd, 
    even: even, 
    fromString: fromString, 
    round: round, 
    floor: floor, 
    ceil: ceil, 
    fromNumber: fromNumber, 
    toNumber: $foreign.toNumber
};

},{"./foreign":"/Users/gene/Programming/pure_morph/output/Data.Int/foreign.js","Data.Int.Bits":"/Users/gene/Programming/pure_morph/output/Data.Int.Bits/index.js","Data.Maybe":"/Users/gene/Programming/pure_morph/output/Data.Maybe/index.js","Data.Maybe.Unsafe":"/Users/gene/Programming/pure_morph/output/Data.Maybe.Unsafe/index.js","Math":"/Users/gene/Programming/pure_morph/output/Math/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Data.List/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Alt = require("Control.Alt");
var Control_Alternative = require("Control.Alternative");
var Control_Lazy = require("Control.Lazy");
var Control_MonadPlus = require("Control.MonadPlus");
var Control_Plus = require("Control.Plus");
var Data_Foldable = require("Data.Foldable");
var Data_Maybe = require("Data.Maybe");
var Data_Monoid = require("Data.Monoid");
var Data_Traversable = require("Data.Traversable");
var Data_Tuple = require("Data.Tuple");
var Data_Unfoldable = require("Data.Unfoldable");
var Nil = (function () {
    function Nil() {

    };
    Nil.value = new Nil();
    return Nil;
})();
var Cons = (function () {
    function Cons(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Cons.create = function (value0) {
        return function (value1) {
            return new Cons(value0, value1);
        };
    };
    return Cons;
})();
var $colon = Cons.create;
var updateAt = function (v) {
    return function (v1) {
        return function (v2) {
            if (v === 0 && v2 instanceof Cons) {
                return new Data_Maybe.Just(new Cons(v1, v2.value1));
            };
            if (v2 instanceof Cons) {
                return Prelude["<$>"](Data_Maybe.functorMaybe)(Cons.create(v2.value0))(updateAt(v - 1)(v1)(v2.value1));
            };
            return Data_Maybe.Nothing.value;
        };
    };
};
var uncons = function (v) {
    if (v instanceof Nil) {
        return Data_Maybe.Nothing.value;
    };
    if (v instanceof Cons) {
        return new Data_Maybe.Just({
            head: v.value0, 
            tail: v.value1
        });
    };
    throw new Error("Failed pattern match at Data.List line 270, column 1 - line 271, column 1: " + [ v.constructor.name ]);
};
var toUnfoldable = function (dictUnfoldable) {
    return Data_Unfoldable.unfoldr(dictUnfoldable)(function (xs) {
        return Prelude["<$>"](Data_Maybe.functorMaybe)(function (rec) {
            return new Data_Tuple.Tuple(rec.head, rec.tail);
        })(uncons(xs));
    });
};
var tail = function (v) {
    if (v instanceof Nil) {
        return Data_Maybe.Nothing.value;
    };
    if (v instanceof Cons) {
        return new Data_Maybe.Just(v.value1);
    };
    throw new Error("Failed pattern match at Data.List line 251, column 1 - line 252, column 1: " + [ v.constructor.name ]);
};
var span = function (v) {
    return function (v1) {
        if (v1 instanceof Cons && v(v1.value0)) {
            var $132 = span(v)(v1.value1);
            return {
                init: new Cons(v1.value0, $132.init), 
                rest: $132.rest
            };
        };
        return {
            init: Nil.value, 
            rest: v1
        };
    };
};
var singleton = function (a) {
    return new Cons(a, Nil.value);
};
var sortBy = function (cmp) {
    var merge = function (v) {
        return function (v1) {
            if (v instanceof Cons && v1 instanceof Cons) {
                if (Prelude["=="](Prelude.eqOrdering)(cmp(v.value0)(v1.value0))(Prelude.GT.value)) {
                    return new Cons(v1.value0, merge(v)(v1.value1));
                };
                if (Prelude.otherwise) {
                    return new Cons(v.value0, merge(v.value1)(v1));
                };
            };
            if (v instanceof Nil) {
                return v1;
            };
            if (v1 instanceof Nil) {
                return v;
            };
            throw new Error("Failed pattern match at Data.List line 444, column 1 - line 445, column 1: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
    var mergePairs = function (v) {
        if (v instanceof Cons && v.value1 instanceof Cons) {
            return new Cons(merge(v.value0)(v.value1.value0), mergePairs(v.value1.value1));
        };
        return v;
    };
    var mergeAll = function (__copy_v) {
        var v = __copy_v;
        tco: while (true) {
            if (v instanceof Cons && v.value1 instanceof Nil) {
                return v.value0;
            };
            var __tco_v = mergePairs(v);
            v = __tco_v;
            continue tco;
        };
    };
    var sequences = function (v) {
        if (v instanceof Cons && v.value1 instanceof Cons) {
            if (Prelude["=="](Prelude.eqOrdering)(cmp(v.value0)(v.value1.value0))(Prelude.GT.value)) {
                return descending(v.value1.value0)(singleton(v.value0))(v.value1.value1);
            };
            if (Prelude.otherwise) {
                return ascending(v.value1.value0)(Cons.create(v.value0))(v.value1.value1);
            };
        };
        return singleton(v);
    };
    var descending = function (__copy_a) {
        return function (__copy_as) {
            return function (__copy_v) {
                var a = __copy_a;
                var as = __copy_as;
                var v = __copy_v;
                tco: while (true) {
                    if (v instanceof Cons && Prelude["=="](Prelude.eqOrdering)(cmp(a)(v.value0))(Prelude.GT.value)) {
                        var __tco_a = v.value0;
                        var __tco_as = new Cons(a, as);
                        var __tco_v = v.value1;
                        a = __tco_a;
                        as = __tco_as;
                        v = __tco_v;
                        continue tco;
                    };
                    return new Cons(new Cons(a, as), sequences(v));
                };
            };
        };
    };
    var ascending = function (a) {
        return function (as) {
            return function (v) {
                if (v instanceof Cons && Prelude["/="](Prelude.eqOrdering)(cmp(a)(v.value0))(Prelude.GT.value)) {
                    return ascending(v.value0)(function (ys) {
                        return as(new Cons(a, ys));
                    })(v.value1);
                };
                return new Cons(as(singleton(a)), sequences(v));
            };
        };
    };
    return function ($363) {
        return mergeAll(sequences($363));
    };
};
var sort = function (dictOrd) {
    return function (xs) {
        return sortBy(Prelude.compare(dictOrd))(xs);
    };
};
var showList = function (dictShow) {
    return new Prelude.Show(function (v) {
        if (v instanceof Nil) {
            return "Nil";
        };
        if (v instanceof Cons) {
            return "Cons (" + (Prelude.show(dictShow)(v.value0) + (") (" + (Prelude.show(showList(dictShow))(v.value1) + ")")));
        };
        throw new Error("Failed pattern match: " + [ v.constructor.name ]);
    });
};
var semigroupList = new Prelude.Semigroup(function (v) {
    return function (ys) {
        if (v instanceof Nil) {
            return ys;
        };
        if (v instanceof Cons) {
            return new Cons(v.value0, Prelude["<>"](semigroupList)(v.value1)(ys));
        };
        throw new Error("Failed pattern match: " + [ v.constructor.name, ys.constructor.name ]);
    };
});
var reverse = (function () {
    var go = function (__copy_acc) {
        return function (__copy_v) {
            var acc = __copy_acc;
            var v = __copy_v;
            tco: while (true) {
                if (v instanceof Nil) {
                    return acc;
                };
                if (v instanceof Cons) {
                    var __tco_acc = new Cons(v.value0, acc);
                    var __tco_v = v.value1;
                    acc = __tco_acc;
                    v = __tco_v;
                    continue tco;
                };
                throw new Error("Failed pattern match at Data.List line 368, column 1 - line 369, column 1: " + [ acc.constructor.name, v.constructor.name ]);
            };
        };
    };
    return go(Nil.value);
})();
var snoc = function (xs) {
    return function (x) {
        return reverse(new Cons(x, reverse(xs)));
    };
};
var take = (function () {
    var go = function (__copy_acc) {
        return function (__copy_v) {
            return function (__copy_v1) {
                var acc = __copy_acc;
                var v = __copy_v;
                var v1 = __copy_v1;
                tco: while (true) {
                    if (v === 0) {
                        return reverse(acc);
                    };
                    if (v1 instanceof Nil) {
                        return reverse(acc);
                    };
                    if (v1 instanceof Cons) {
                        var __tco_acc = new Cons(v1.value0, acc);
                        var __tco_v = v - 1;
                        var __tco_v1 = v1.value1;
                        acc = __tco_acc;
                        v = __tco_v;
                        v1 = __tco_v1;
                        continue tco;
                    };
                    throw new Error("Failed pattern match at Data.List line 490, column 1 - line 491, column 1: " + [ acc.constructor.name, v.constructor.name, v1.constructor.name ]);
                };
            };
        };
    };
    return go(Nil.value);
})();
var takeWhile = function (p) {
    var go = function (__copy_acc) {
        return function (__copy_v) {
            var acc = __copy_acc;
            var v = __copy_v;
            tco: while (true) {
                if (v instanceof Cons && p(v.value0)) {
                    var __tco_acc = new Cons(v.value0, acc);
                    var __tco_v = v.value1;
                    acc = __tco_acc;
                    v = __tco_v;
                    continue tco;
                };
                return reverse(acc);
            };
        };
    };
    return go(Nil.value);
};
var unfoldableList = new Data_Unfoldable.Unfoldable(function (f) {
    return function (b) {
        var go = function (__copy_source) {
            return function (__copy_memo) {
                var source = __copy_source;
                var memo = __copy_memo;
                tco: while (true) {
                    var $186 = f(source);
                    if ($186 instanceof Data_Maybe.Nothing) {
                        return reverse(memo);
                    };
                    if ($186 instanceof Data_Maybe.Just) {
                        var __tco_memo = new Cons($186.value0.value0, memo);
                        source = $186.value0.value1;
                        memo = __tco_memo;
                        continue tco;
                    };
                    throw new Error("Failed pattern match at Data.List line 748, column 1 - line 755, column 1: " + [ $186.constructor.name ]);
                };
            };
        };
        return go(b)(Nil.value);
    };
});
var zipWith = function (f) {
    return function (xs) {
        return function (ys) {
            var go = function (__copy_v) {
                return function (__copy_v1) {
                    return function (__copy_acc) {
                        var v = __copy_v;
                        var v1 = __copy_v1;
                        var acc = __copy_acc;
                        tco: while (true) {
                            if (v instanceof Nil) {
                                return acc;
                            };
                            if (v1 instanceof Nil) {
                                return acc;
                            };
                            if (v instanceof Cons && v1 instanceof Cons) {
                                var __tco_v = v.value1;
                                var __tco_v1 = v1.value1;
                                var __tco_acc = new Cons(f(v.value0)(v1.value0), acc);
                                v = __tco_v;
                                v1 = __tco_v1;
                                acc = __tco_acc;
                                continue tco;
                            };
                            throw new Error("Failed pattern match at Data.List line 654, column 1 - line 655, column 1: " + [ v.constructor.name, v1.constructor.name, acc.constructor.name ]);
                        };
                    };
                };
            };
            return reverse(go(xs)(ys)(Nil.value));
        };
    };
};
var zip = zipWith(Data_Tuple.Tuple.create);
var replicateM = function (dictMonad) {
    return function (n) {
        return function (m) {
            if (n < 1) {
                return Prelude["return"](dictMonad["__superclass_Prelude.Applicative_0"]())(Nil.value);
            };
            if (Prelude.otherwise) {
                return Prelude.bind(dictMonad["__superclass_Prelude.Bind_1"]())(m)(function (v) {
                    return Prelude.bind(dictMonad["__superclass_Prelude.Bind_1"]())(replicateM(dictMonad)(n - 1)(m))(function (v1) {
                        return Prelude["return"](dictMonad["__superclass_Prelude.Applicative_0"]())(new Cons(v, v1));
                    });
                });
            };
            throw new Error("Failed pattern match: " + [ n.constructor.name, m.constructor.name ]);
        };
    };
};
var replicate = function (n) {
    return function (value) {
        var go = function (__copy_n1) {
            return function (__copy_rest) {
                var n1 = __copy_n1;
                var rest = __copy_rest;
                tco: while (true) {
                    if (n1 <= 0) {
                        return rest;
                    };
                    if (Prelude.otherwise) {
                        var __tco_n1 = n1 - 1;
                        var __tco_rest = new Cons(value, rest);
                        n1 = __tco_n1;
                        rest = __tco_rest;
                        continue tco;
                    };
                    throw new Error("Failed pattern match at Data.List line 148, column 1 - line 149, column 1: " + [ n1.constructor.name, rest.constructor.name ]);
                };
            };
        };
        return go(n)(Nil.value);
    };
};
var range = function (start) {
    return function (end) {
        if (start === end) {
            return singleton(start);
        };
        if (Prelude.otherwise) {
            var go = function (__copy_s) {
                return function (__copy_e) {
                    return function (__copy_step) {
                        return function (__copy_rest) {
                            var s = __copy_s;
                            var e = __copy_e;
                            var step = __copy_step;
                            var rest = __copy_rest;
                            tco: while (true) {
                                if (s === e) {
                                    return new Cons(s, rest);
                                };
                                if (Prelude.otherwise) {
                                    var __tco_s = s + step | 0;
                                    var __tco_e = e;
                                    var __tco_step = step;
                                    var __tco_rest = new Cons(s, rest);
                                    s = __tco_s;
                                    e = __tco_e;
                                    step = __tco_step;
                                    rest = __tco_rest;
                                    continue tco;
                                };
                                throw new Error("Failed pattern match at Data.List line 140, column 1 - line 141, column 1: " + [ s.constructor.name, e.constructor.name, step.constructor.name, rest.constructor.name ]);
                            };
                        };
                    };
                };
            };
            return go(end)(start)((function () {
                var $209 = start > end;
                if ($209) {
                    return 1;
                };
                if (!$209) {
                    return -1;
                };
                throw new Error("Failed pattern match at Data.List line 140, column 1 - line 141, column 1: " + [ $209.constructor.name ]);
            })())(Nil.value);
        };
        throw new Error("Failed pattern match at Data.List line 140, column 1 - line 141, column 1: " + [ start.constructor.name, end.constructor.name ]);
    };
};
var $dot$dot = range;
var $$null = function (v) {
    if (v instanceof Nil) {
        return true;
    };
    return false;
};
var monoidList = new Data_Monoid.Monoid(function () {
    return semigroupList;
}, Nil.value);
var mapMaybe = function (f) {
    var go = function (__copy_acc) {
        return function (__copy_v) {
            var acc = __copy_acc;
            var v = __copy_v;
            tco: while (true) {
                if (v instanceof Nil) {
                    return reverse(acc);
                };
                if (v instanceof Cons) {
                    var $213 = f(v.value0);
                    if ($213 instanceof Data_Maybe.Nothing) {
                        var __tco_acc = acc;
                        var __tco_v = v.value1;
                        acc = __tco_acc;
                        v = __tco_v;
                        continue tco;
                    };
                    if ($213 instanceof Data_Maybe.Just) {
                        var __tco_acc = new Cons($213.value0, acc);
                        var __tco_v = v.value1;
                        acc = __tco_acc;
                        v = __tco_v;
                        continue tco;
                    };
                    throw new Error("Failed pattern match at Data.List line 420, column 1 - line 421, column 1: " + [ $213.constructor.name ]);
                };
                throw new Error("Failed pattern match at Data.List line 420, column 1 - line 421, column 1: " + [ acc.constructor.name, v.constructor.name ]);
            };
        };
    };
    return go(Nil.value);
};
var some = function (dictAlternative) {
    return function (dictLazy) {
        return function (v) {
            return Prelude["<*>"]((dictAlternative["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())(Prelude["<$>"](((dictAlternative["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())["__superclass_Prelude.Functor_0"]())(Cons.create)(v))(Control_Lazy.defer(dictLazy)(function (v1) {
                return many(dictAlternative)(dictLazy)(v);
            }));
        };
    };
};
var many = function (dictAlternative) {
    return function (dictLazy) {
        return function (v) {
            return Control_Alt["<|>"]((dictAlternative["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())(some(dictAlternative)(dictLazy)(v))(Prelude.pure(dictAlternative["__superclass_Prelude.Applicative_0"]())(Nil.value));
        };
    };
};
var last = function (__copy_v) {
    var v = __copy_v;
    tco: while (true) {
        if (v instanceof Cons && v.value1 instanceof Nil) {
            return new Data_Maybe.Just(v.value0);
        };
        if (v instanceof Cons) {
            var __tco_v = v.value1;
            v = __tco_v;
            continue tco;
        };
        return Data_Maybe.Nothing.value;
    };
};
var insertBy = function (v) {
    return function (x) {
        return function (v1) {
            if (v1 instanceof Nil) {
                return new Cons(x, Nil.value);
            };
            if (v1 instanceof Cons) {
                var $226 = v(x)(v1.value0);
                if ($226 instanceof Prelude.GT) {
                    return new Cons(v1.value0, insertBy(v)(x)(v1.value1));
                };
                return new Cons(x, v1);
            };
            throw new Error("Failed pattern match: " + [ v.constructor.name, x.constructor.name, v1.constructor.name ]);
        };
    };
};
var insertAt = function (v) {
    return function (v1) {
        return function (v2) {
            if (v === 0) {
                return new Data_Maybe.Just(new Cons(v1, v2));
            };
            if (v2 instanceof Cons) {
                return Prelude["<$>"](Data_Maybe.functorMaybe)(Cons.create(v2.value0))(insertAt(v - 1)(v1)(v2.value1));
            };
            return Data_Maybe.Nothing.value;
        };
    };
};
var insert = function (dictOrd) {
    return insertBy(Prelude.compare(dictOrd));
};
var init = function (v) {
    if (v instanceof Nil) {
        return Data_Maybe.Nothing.value;
    };
    var go = function (__copy_v1) {
        return function (__copy_acc) {
            var v1 = __copy_v1;
            var acc = __copy_acc;
            tco: while (true) {
                if (v1 instanceof Cons && v1.value1 instanceof Nil) {
                    return acc;
                };
                if (v1 instanceof Cons) {
                    var __tco_v1 = v1.value1;
                    var __tco_acc = new Cons(v1.value0, acc);
                    v1 = __tco_v1;
                    acc = __tco_acc;
                    continue tco;
                };
                return acc;
            };
        };
    };
    return Data_Maybe.Just.create(reverse(go(v)(Nil.value)));
};
var index = function (__copy_v) {
    return function (__copy_v1) {
        var v = __copy_v;
        var v1 = __copy_v1;
        tco: while (true) {
            if (v instanceof Nil) {
                return Data_Maybe.Nothing.value;
            };
            if (v instanceof Cons && v1 === 0) {
                return new Data_Maybe.Just(v.value0);
            };
            if (v instanceof Cons) {
                var __tco_v = v.value1;
                var __tco_v1 = v1 - 1;
                v = __tco_v;
                v1 = __tco_v1;
                continue tco;
            };
            throw new Error("Failed pattern match: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
};
var $bang$bang = index;
var head = function (v) {
    if (v instanceof Nil) {
        return Data_Maybe.Nothing.value;
    };
    if (v instanceof Cons) {
        return new Data_Maybe.Just(v.value0);
    };
    throw new Error("Failed pattern match at Data.List line 236, column 1 - line 237, column 1: " + [ v.constructor.name ]);
};
var groupBy = function (v) {
    return function (v1) {
        if (v1 instanceof Nil) {
            return Nil.value;
        };
        if (v1 instanceof Cons) {
            var $252 = span(v(v1.value0))(v1.value1);
            return new Cons(new Cons(v1.value0, $252.init), groupBy(v)($252.rest));
        };
        throw new Error("Failed pattern match: " + [ v.constructor.name, v1.constructor.name ]);
    };
};
var group = function (dictEq) {
    return groupBy(Prelude["=="](dictEq));
};
var group$prime = function (dictOrd) {
    return function ($364) {
        return group(dictOrd["__superclass_Prelude.Eq_0"]())(sort(dictOrd)($364));
    };
};
var functorList = new Prelude.Functor(function (f) {
    return function (lst) {
        var go = function (__copy_v) {
            return function (__copy_acc) {
                var v = __copy_v;
                var acc = __copy_acc;
                tco: while (true) {
                    if (v instanceof Nil) {
                        return acc;
                    };
                    if (v instanceof Cons) {
                        var __tco_v = v.value1;
                        var __tco_acc = new Cons(f(v.value0), acc);
                        v = __tco_v;
                        acc = __tco_acc;
                        continue tco;
                    };
                    throw new Error("Failed pattern match at Data.List line 731, column 1 - line 738, column 1: " + [ v.constructor.name, acc.constructor.name ]);
                };
            };
        };
        return reverse(go(lst)(Nil.value));
    };
});
var fromList = function (dictUnfoldable) {
    return toUnfoldable(dictUnfoldable);
};
var fromFoldable = function (dictFoldable) {
    return Data_Foldable.foldr(dictFoldable)(Cons.create)(Nil.value);
};
var toList = function (dictFoldable) {
    return fromFoldable(dictFoldable);
};
var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return Data_Foldable.foldl(foldableList)(function (acc) {
            return function ($365) {
                return Prelude.append(dictMonoid["__superclass_Prelude.Semigroup_0"]())(acc)(f($365));
            };
        })(Data_Monoid.mempty(dictMonoid));
    };
}, (function () {
    var go = function (__copy_v) {
        return function (__copy_b) {
            return function (__copy_v1) {
                var v = __copy_v;
                var b = __copy_b;
                var v1 = __copy_v1;
                tco: while (true) {
                    if (v1 instanceof Nil) {
                        return b;
                    };
                    if (v1 instanceof Cons) {
                        var __tco_v = v;
                        var __tco_b = v(b)(v1.value0);
                        var __tco_v1 = v1.value1;
                        v = __tco_v;
                        b = __tco_b;
                        v1 = __tco_v1;
                        continue tco;
                    };
                    throw new Error("Failed pattern match: " + [ v.constructor.name, b.constructor.name, v1.constructor.name ]);
                };
            };
        };
    };
    return go;
})(), function (v) {
    return function (b) {
        return function (v1) {
            if (v1 instanceof Nil) {
                return b;
            };
            if (v1 instanceof Cons) {
                return v(v1.value0)(Data_Foldable.foldr(foldableList)(v)(b)(v1.value1));
            };
            throw new Error("Failed pattern match: " + [ v.constructor.name, b.constructor.name, v1.constructor.name ]);
        };
    };
});
var length = Data_Foldable.foldl(foldableList)(function (acc) {
    return function (v) {
        return acc + 1 | 0;
    };
})(0);
var traversableList = new Data_Traversable.Traversable(function () {
    return foldableList;
}, function () {
    return functorList;
}, function (dictApplicative) {
    return function (v) {
        if (v instanceof Nil) {
            return Prelude.pure(dictApplicative)(Nil.value);
        };
        if (v instanceof Cons) {
            return Prelude["<*>"](dictApplicative["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Cons.create)(v.value0))(Data_Traversable.sequence(traversableList)(dictApplicative)(v.value1));
        };
        throw new Error("Failed pattern match: " + [ v.constructor.name ]);
    };
}, function (dictApplicative) {
    return function (v) {
        return function (v1) {
            if (v1 instanceof Nil) {
                return Prelude.pure(dictApplicative)(Nil.value);
            };
            if (v1 instanceof Cons) {
                return Prelude["<*>"](dictApplicative["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Cons.create)(v(v1.value0)))(Data_Traversable.traverse(traversableList)(dictApplicative)(v)(v1.value1));
            };
            throw new Error("Failed pattern match: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
});
var zipWithA = function (dictApplicative) {
    return function (f) {
        return function (xs) {
            return function (ys) {
                return Data_Traversable.sequence(traversableList)(dictApplicative)(zipWith(f)(xs)(ys));
            };
        };
    };
};
var unzip = Data_Foldable.foldr(foldableList)(function (v) {
    return function (v1) {
        return new Data_Tuple.Tuple(new Cons(v.value0, v1.value0), new Cons(v.value1, v1.value1));
    };
})(new Data_Tuple.Tuple(Nil.value, Nil.value));
var foldM = function (dictMonad) {
    return function (v) {
        return function (a) {
            return function (v1) {
                if (v1 instanceof Nil) {
                    return Prelude["return"](dictMonad["__superclass_Prelude.Applicative_0"]())(a);
                };
                if (v1 instanceof Cons) {
                    return Prelude[">>="](dictMonad["__superclass_Prelude.Bind_1"]())(v(a)(v1.value0))(function (a$prime) {
                        return foldM(dictMonad)(v)(a$prime)(v1.value1);
                    });
                };
                throw new Error("Failed pattern match: " + [ v.constructor.name, a.constructor.name, v1.constructor.name ]);
            };
        };
    };
};
var findIndex = function (fn) {
    var go = function (__copy_v) {
        return function (__copy_v1) {
            var v = __copy_v;
            var v1 = __copy_v1;
            tco: while (true) {
                if (v1 instanceof Cons) {
                    if (fn(v1.value0)) {
                        return new Data_Maybe.Just(v);
                    };
                    if (Prelude.otherwise) {
                        var __tco_v = v + 1 | 0;
                        var __tco_v1 = v1.value1;
                        v = __tco_v;
                        v1 = __tco_v1;
                        continue tco;
                    };
                };
                if (v1 instanceof Nil) {
                    return Data_Maybe.Nothing.value;
                };
                throw new Error("Failed pattern match at Data.List line 301, column 1 - line 302, column 1: " + [ v.constructor.name, v1.constructor.name ]);
            };
        };
    };
    return go(0);
};
var findLastIndex = function (fn) {
    return function (xs) {
        return Prelude["<$>"](Data_Maybe.functorMaybe)(Prelude["-"](Prelude.ringInt)(length(xs) - 1))(findIndex(fn)(reverse(xs)));
    };
};
var filterM = function (dictMonad) {
    return function (v) {
        return function (v1) {
            if (v1 instanceof Nil) {
                return Prelude["return"](dictMonad["__superclass_Prelude.Applicative_0"]())(Nil.value);
            };
            if (v1 instanceof Cons) {
                return Prelude.bind(dictMonad["__superclass_Prelude.Bind_1"]())(v(v1.value0))(function (v2) {
                    return Prelude.bind(dictMonad["__superclass_Prelude.Bind_1"]())(filterM(dictMonad)(v)(v1.value1))(function (v3) {
                        return Prelude["return"](dictMonad["__superclass_Prelude.Applicative_0"]())((function () {
                            if (v2) {
                                return new Cons(v1.value0, v3);
                            };
                            if (!v2) {
                                return v3;
                            };
                            throw new Error("Failed pattern match: " + [ v2.constructor.name ]);
                        })());
                    });
                });
            };
            throw new Error("Failed pattern match: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
};
var filter = function (p) {
    var go = function (__copy_acc) {
        return function (__copy_v) {
            var acc = __copy_acc;
            var v = __copy_v;
            tco: while (true) {
                if (v instanceof Nil) {
                    return reverse(acc);
                };
                if (v instanceof Cons) {
                    if (p(v.value0)) {
                        var __tco_acc = new Cons(v.value0, acc);
                        var __tco_v = v.value1;
                        acc = __tco_acc;
                        v = __tco_v;
                        continue tco;
                    };
                    if (Prelude.otherwise) {
                        var __tco_acc = acc;
                        var __tco_v = v.value1;
                        acc = __tco_acc;
                        v = __tco_v;
                        continue tco;
                    };
                };
                throw new Error("Failed pattern match at Data.List line 391, column 1 - line 392, column 1: " + [ acc.constructor.name, v.constructor.name ]);
            };
        };
    };
    return go(Nil.value);
};
var intersectBy = function (v) {
    return function (v1) {
        return function (v2) {
            if (v1 instanceof Nil) {
                return Nil.value;
            };
            if (v2 instanceof Nil) {
                return Nil.value;
            };
            return filter(function (x) {
                return Data_Foldable.any(foldableList)(Prelude.booleanAlgebraBoolean)(v(x))(v2);
            })(v1);
        };
    };
};
var intersect = function (dictEq) {
    return intersectBy(Prelude["=="](dictEq));
};
var nubBy = function (v) {
    return function (v1) {
        if (v1 instanceof Nil) {
            return Nil.value;
        };
        if (v1 instanceof Cons) {
            return new Cons(v1.value0, nubBy(v)(filter(function (y) {
                return !v(v1.value0)(y);
            })(v1.value1)));
        };
        throw new Error("Failed pattern match: " + [ v.constructor.name, v1.constructor.name ]);
    };
};
var nub = function (dictEq) {
    return nubBy(Prelude.eq(dictEq));
};
var eqList = function (dictEq) {
    return new Prelude.Eq(function (xs) {
        return function (ys) {
            var go = function (__copy_v) {
                return function (__copy_v1) {
                    return function (__copy_v2) {
                        var v = __copy_v;
                        var v1 = __copy_v1;
                        var v2 = __copy_v2;
                        tco: while (true) {
                            if (!v2) {
                                return false;
                            };
                            if (v instanceof Nil && v1 instanceof Nil) {
                                return v2;
                            };
                            if (v instanceof Cons && v1 instanceof Cons) {
                                var __tco_v = v.value1;
                                var __tco_v1 = v1.value1;
                                var __tco_v2 = v2 && Prelude["=="](dictEq)(v1.value0)(v.value0);
                                v = __tco_v;
                                v1 = __tco_v1;
                                v2 = __tco_v2;
                                continue tco;
                            };
                            return false;
                        };
                    };
                };
            };
            return go(xs)(ys)(true);
        };
    });
};
var ordList = function (dictOrd) {
    return new Prelude.Ord(function () {
        return eqList(dictOrd["__superclass_Prelude.Eq_0"]());
    }, function (xs) {
        return function (ys) {
            var go = function (__copy_v) {
                return function (__copy_v1) {
                    var v = __copy_v;
                    var v1 = __copy_v1;
                    tco: while (true) {
                        if (v instanceof Nil && v1 instanceof Nil) {
                            return Prelude.EQ.value;
                        };
                        if (v instanceof Nil) {
                            return Prelude.LT.value;
                        };
                        if (v1 instanceof Nil) {
                            return Prelude.GT.value;
                        };
                        if (v instanceof Cons && v1 instanceof Cons) {
                            var $321 = Prelude.compare(dictOrd)(v.value0)(v1.value0);
                            if ($321 instanceof Prelude.EQ) {
                                var __tco_v = v.value1;
                                var __tco_v1 = v1.value1;
                                v = __tco_v;
                                v1 = __tco_v1;
                                continue tco;
                            };
                            return $321;
                        };
                        throw new Error("Failed pattern match at Data.List line 713, column 1 - line 724, column 1: " + [ v.constructor.name, v1.constructor.name ]);
                    };
                };
            };
            return go(xs)(ys);
        };
    });
};
var elemLastIndex = function (dictEq) {
    return function (x) {
        return findLastIndex(function (v) {
            return Prelude["=="](dictEq)(v)(x);
        });
    };
};
var elemIndex = function (dictEq) {
    return function (x) {
        return findIndex(function (v) {
            return Prelude["=="](dictEq)(v)(x);
        });
    };
};
var dropWhile = function (p) {
    var go = function (__copy_v) {
        var v = __copy_v;
        tco: while (true) {
            if (v instanceof Cons && p(v.value0)) {
                var __tco_v = v.value1;
                v = __tco_v;
                continue tco;
            };
            return v;
        };
    };
    return go;
};
var drop = function (__copy_v) {
    return function (__copy_v1) {
        var v = __copy_v;
        var v1 = __copy_v1;
        tco: while (true) {
            if (v === 0) {
                return v1;
            };
            if (v1 instanceof Nil) {
                return Nil.value;
            };
            if (v1 instanceof Cons) {
                var __tco_v = v - 1;
                var __tco_v1 = v1.value1;
                v = __tco_v;
                v1 = __tco_v1;
                continue tco;
            };
            throw new Error("Failed pattern match: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
};
var slice = function (start) {
    return function (end) {
        return function (xs) {
            return take(end - start)(drop(start)(xs));
        };
    };
};
var deleteBy = function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Nil) {
                return Nil.value;
            };
            if (v2 instanceof Cons && v(v1)(v2.value0)) {
                return v2.value1;
            };
            if (v2 instanceof Cons) {
                return new Cons(v2.value0, deleteBy(v)(v1)(v2.value1));
            };
            throw new Error("Failed pattern match: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
};
var unionBy = function (eq) {
    return function (xs) {
        return function (ys) {
            return Prelude["<>"](semigroupList)(xs)(Data_Foldable.foldl(foldableList)(Prelude.flip(deleteBy(eq)))(nubBy(eq)(ys))(xs));
        };
    };
};
var union = function (dictEq) {
    return unionBy(Prelude["=="](dictEq));
};
var deleteAt = function (v) {
    return function (v1) {
        if (v === 0 && v1 instanceof Cons) {
            return new Data_Maybe.Just(v1.value1);
        };
        if (v1 instanceof Cons) {
            return Prelude["<$>"](Data_Maybe.functorMaybe)(Cons.create(v1.value0))(deleteAt(v - 1)(v1.value1));
        };
        return Data_Maybe.Nothing.value;
    };
};
var $$delete = function (dictEq) {
    return deleteBy(Prelude["=="](dictEq));
};
var $bslash$bslash = function (dictEq) {
    return Data_Foldable.foldl(foldableList)(Prelude.flip($$delete(dictEq)));
};
var concatMap = function (v) {
    return function (v1) {
        if (v1 instanceof Nil) {
            return Nil.value;
        };
        if (v1 instanceof Cons) {
            return Prelude["<>"](semigroupList)(v(v1.value0))(concatMap(v)(v1.value1));
        };
        throw new Error("Failed pattern match: " + [ v.constructor.name, v1.constructor.name ]);
    };
};
var catMaybes = mapMaybe(Prelude.id(Prelude.categoryFn));
var applyList = new Prelude.Apply(function () {
    return functorList;
}, function (v) {
    return function (v1) {
        if (v instanceof Nil) {
            return Nil.value;
        };
        if (v instanceof Cons) {
            return Prelude["<>"](semigroupList)(Prelude["<$>"](functorList)(v.value0)(v1))(Prelude["<*>"](applyList)(v.value1)(v1));
        };
        throw new Error("Failed pattern match: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var bindList = new Prelude.Bind(function () {
    return applyList;
}, Prelude.flip(concatMap));
var concat = function (v) {
    return Prelude[">>="](bindList)(v)(Prelude.id(Prelude.categoryFn));
};
var applicativeList = new Prelude.Applicative(function () {
    return applyList;
}, function (a) {
    return new Cons(a, Nil.value);
});
var monadList = new Prelude.Monad(function () {
    return applicativeList;
}, function () {
    return bindList;
});
var alterAt = function (v) {
    return function (v1) {
        return function (v2) {
            if (v === 0 && v2 instanceof Cons) {
                return Data_Maybe.Just.create((function () {
                    var $357 = v1(v2.value0);
                    if ($357 instanceof Data_Maybe.Nothing) {
                        return v2.value1;
                    };
                    if ($357 instanceof Data_Maybe.Just) {
                        return new Cons($357.value0, v2.value1);
                    };
                    throw new Error("Failed pattern match: " + [ $357.constructor.name ]);
                })());
            };
            if (v2 instanceof Cons) {
                return Prelude["<$>"](Data_Maybe.functorMaybe)(Cons.create(v2.value0))(alterAt(v - 1)(v1)(v2.value1));
            };
            return Data_Maybe.Nothing.value;
        };
    };
};
var modifyAt = function (n) {
    return function (f) {
        return alterAt(n)(function ($366) {
            return Data_Maybe.Just.create(f($366));
        });
    };
};
var altList = new Control_Alt.Alt(function () {
    return functorList;
}, Prelude.append(semigroupList));
var plusList = new Control_Plus.Plus(function () {
    return altList;
}, Nil.value);
var alternativeList = new Control_Alternative.Alternative(function () {
    return plusList;
}, function () {
    return applicativeList;
});
var monadPlusList = new Control_MonadPlus.MonadPlus(function () {
    return alternativeList;
}, function () {
    return monadList;
});
module.exports = {
    Nil: Nil, 
    Cons: Cons, 
    fromList: fromList, 
    toList: toList, 
    foldM: foldM, 
    unzip: unzip, 
    zip: zip, 
    zipWithA: zipWithA, 
    zipWith: zipWith, 
    intersectBy: intersectBy, 
    intersect: intersect, 
    "\\\\": $bslash$bslash, 
    deleteBy: deleteBy, 
    "delete": $$delete, 
    unionBy: unionBy, 
    union: union, 
    nubBy: nubBy, 
    nub: nub, 
    groupBy: groupBy, 
    "group'": group$prime, 
    group: group, 
    span: span, 
    dropWhile: dropWhile, 
    drop: drop, 
    takeWhile: takeWhile, 
    take: take, 
    slice: slice, 
    sortBy: sortBy, 
    sort: sort, 
    catMaybes: catMaybes, 
    mapMaybe: mapMaybe, 
    filterM: filterM, 
    filter: filter, 
    concatMap: concatMap, 
    concat: concat, 
    reverse: reverse, 
    alterAt: alterAt, 
    modifyAt: modifyAt, 
    updateAt: updateAt, 
    deleteAt: deleteAt, 
    insertAt: insertAt, 
    findLastIndex: findLastIndex, 
    findIndex: findIndex, 
    elemLastIndex: elemLastIndex, 
    elemIndex: elemIndex, 
    index: index, 
    "!!": $bang$bang, 
    uncons: uncons, 
    init: init, 
    tail: tail, 
    last: last, 
    head: head, 
    insertBy: insertBy, 
    insert: insert, 
    snoc: snoc, 
    ":": $colon, 
    length: length, 
    "null": $$null, 
    many: many, 
    some: some, 
    replicateM: replicateM, 
    replicate: replicate, 
    range: range, 
    "..": $dot$dot, 
    singleton: singleton, 
    fromFoldable: fromFoldable, 
    toUnfoldable: toUnfoldable, 
    showList: showList, 
    eqList: eqList, 
    ordList: ordList, 
    semigroupList: semigroupList, 
    monoidList: monoidList, 
    functorList: functorList, 
    foldableList: foldableList, 
    unfoldableList: unfoldableList, 
    traversableList: traversableList, 
    applyList: applyList, 
    applicativeList: applicativeList, 
    bindList: bindList, 
    monadList: monadList, 
    altList: altList, 
    plusList: plusList, 
    alternativeList: alternativeList, 
    monadPlusList: monadPlusList
};

},{"Control.Alt":"/Users/gene/Programming/pure_morph/output/Control.Alt/index.js","Control.Alternative":"/Users/gene/Programming/pure_morph/output/Control.Alternative/index.js","Control.Lazy":"/Users/gene/Programming/pure_morph/output/Control.Lazy/index.js","Control.MonadPlus":"/Users/gene/Programming/pure_morph/output/Control.MonadPlus/index.js","Control.Plus":"/Users/gene/Programming/pure_morph/output/Control.Plus/index.js","Data.Foldable":"/Users/gene/Programming/pure_morph/output/Data.Foldable/index.js","Data.Maybe":"/Users/gene/Programming/pure_morph/output/Data.Maybe/index.js","Data.Monoid":"/Users/gene/Programming/pure_morph/output/Data.Monoid/index.js","Data.Traversable":"/Users/gene/Programming/pure_morph/output/Data.Traversable/index.js","Data.Tuple":"/Users/gene/Programming/pure_morph/output/Data.Tuple/index.js","Data.Unfoldable":"/Users/gene/Programming/pure_morph/output/Data.Unfoldable/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Data.Maybe.First/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Comonad = require("Control.Comonad");
var Control_Extend = require("Control.Extend");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Data_Maybe = require("Data.Maybe");
var Data_Monoid = require("Data.Monoid");
var First = function (x) {
    return x;
};
var showFirst = function (dictShow) {
    return new Prelude.Show(function (v) {
        return "First (" + (Prelude.show(Data_Maybe.showMaybe(dictShow))(v) + ")");
    });
};
var semigroupFirst = new Prelude.Semigroup(function (v) {
    return function (v1) {
        if (v instanceof Data_Maybe.Just) {
            return v;
        };
        return v1;
    };
});
var runFirst = function (v) {
    return v;
};
var monoidFirst = new Data_Monoid.Monoid(function () {
    return semigroupFirst;
}, Data_Maybe.Nothing.value);
var functorFirst = new Prelude.Functor(function (f) {
    return function (v) {
        return Prelude["<$>"](Data_Maybe.functorMaybe)(f)(v);
    };
});
var invariantFirst = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorFirst));
var extendFirst = new Control_Extend.Extend(function () {
    return functorFirst;
}, function (f) {
    return function (v) {
        return Control_Extend.extend(Data_Maybe.extendMaybe)(function ($34) {
            return f(First($34));
        })(v);
    };
});
var eqFirst = function (dictEq) {
    return new Prelude.Eq(function (v) {
        return function (v1) {
            return Prelude["=="](Data_Maybe.eqMaybe(dictEq))(v)(v1);
        };
    });
};
var ordFirst = function (dictOrd) {
    return new Prelude.Ord(function () {
        return eqFirst(dictOrd["__superclass_Prelude.Eq_0"]());
    }, function (v) {
        return function (v1) {
            return Prelude.compare(Data_Maybe.ordMaybe(dictOrd))(v)(v1);
        };
    });
};
var boundedFirst = function (dictBounded) {
    return new Prelude.Bounded(Prelude.bottom(Data_Maybe.boundedMaybe(dictBounded)), Prelude.top(Data_Maybe.boundedMaybe(dictBounded)));
};
var applyFirst = new Prelude.Apply(function () {
    return functorFirst;
}, function (v) {
    return function (v1) {
        return Prelude["<*>"](Data_Maybe.applyMaybe)(v)(v1);
    };
});
var bindFirst = new Prelude.Bind(function () {
    return applyFirst;
}, function (v) {
    return function (f) {
        return Prelude.bind(Data_Maybe.bindMaybe)(v)(function ($35) {
            return runFirst(f($35));
        });
    };
});
var applicativeFirst = new Prelude.Applicative(function () {
    return applyFirst;
}, function ($36) {
    return First(Prelude.pure(Data_Maybe.applicativeMaybe)($36));
});
var monadFirst = new Prelude.Monad(function () {
    return applicativeFirst;
}, function () {
    return bindFirst;
});
module.exports = {
    First: First, 
    runFirst: runFirst, 
    eqFirst: eqFirst, 
    ordFirst: ordFirst, 
    boundedFirst: boundedFirst, 
    functorFirst: functorFirst, 
    applyFirst: applyFirst, 
    applicativeFirst: applicativeFirst, 
    bindFirst: bindFirst, 
    monadFirst: monadFirst, 
    extendFirst: extendFirst, 
    invariantFirst: invariantFirst, 
    showFirst: showFirst, 
    semigroupFirst: semigroupFirst, 
    monoidFirst: monoidFirst
};

},{"Control.Comonad":"/Users/gene/Programming/pure_morph/output/Control.Comonad/index.js","Control.Extend":"/Users/gene/Programming/pure_morph/output/Control.Extend/index.js","Data.Functor.Invariant":"/Users/gene/Programming/pure_morph/output/Data.Functor.Invariant/index.js","Data.Maybe":"/Users/gene/Programming/pure_morph/output/Data.Maybe/index.js","Data.Monoid":"/Users/gene/Programming/pure_morph/output/Data.Monoid/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Data.Maybe.Last/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Comonad = require("Control.Comonad");
var Control_Extend = require("Control.Extend");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Data_Maybe = require("Data.Maybe");
var Data_Monoid = require("Data.Monoid");
var Last = function (x) {
    return x;
};
var showLast = function (dictShow) {
    return new Prelude.Show(function (v) {
        return "Last (" + (Prelude.show(Data_Maybe.showMaybe(dictShow))(v) + ")");
    });
};
var semigroupLast = new Prelude.Semigroup(function (v) {
    return function (v1) {
        if (v1 instanceof Data_Maybe.Just) {
            return v1;
        };
        if (v1 instanceof Data_Maybe.Nothing) {
            return v;
        };
        throw new Error("Failed pattern match at Data.Maybe.Last line 57, column 1 - line 61, column 1: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var runLast = function (v) {
    return v;
};
var monoidLast = new Data_Monoid.Monoid(function () {
    return semigroupLast;
}, Data_Maybe.Nothing.value);
var functorLast = new Prelude.Functor(function (f) {
    return function (v) {
        return Prelude["<$>"](Data_Maybe.functorMaybe)(f)(v);
    };
});
var invariantLast = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorLast));
var extendLast = new Control_Extend.Extend(function () {
    return functorLast;
}, function (f) {
    return function (v) {
        return Control_Extend.extend(Data_Maybe.extendMaybe)(function ($34) {
            return f(Last($34));
        })(v);
    };
});
var eqLast = function (dictEq) {
    return new Prelude.Eq(function (v) {
        return function (v1) {
            return Prelude["=="](Data_Maybe.eqMaybe(dictEq))(v)(v1);
        };
    });
};
var ordLast = function (dictOrd) {
    return new Prelude.Ord(function () {
        return eqLast(dictOrd["__superclass_Prelude.Eq_0"]());
    }, function (v) {
        return function (v1) {
            return Prelude.compare(Data_Maybe.ordMaybe(dictOrd))(v)(v1);
        };
    });
};
var boundedLast = function (dictBounded) {
    return new Prelude.Bounded(Prelude.bottom(Data_Maybe.boundedMaybe(dictBounded)), Prelude.top(Data_Maybe.boundedMaybe(dictBounded)));
};
var applyLast = new Prelude.Apply(function () {
    return functorLast;
}, function (v) {
    return function (v1) {
        return Prelude["<*>"](Data_Maybe.applyMaybe)(v)(v1);
    };
});
var bindLast = new Prelude.Bind(function () {
    return applyLast;
}, function (v) {
    return function (f) {
        return Prelude.bind(Data_Maybe.bindMaybe)(v)(function ($35) {
            return runLast(f($35));
        });
    };
});
var applicativeLast = new Prelude.Applicative(function () {
    return applyLast;
}, function ($36) {
    return Last(Prelude.pure(Data_Maybe.applicativeMaybe)($36));
});
var monadLast = new Prelude.Monad(function () {
    return applicativeLast;
}, function () {
    return bindLast;
});
module.exports = {
    Last: Last, 
    runLast: runLast, 
    eqLast: eqLast, 
    ordLast: ordLast, 
    boundedLast: boundedLast, 
    functorLast: functorLast, 
    applyLast: applyLast, 
    applicativeLast: applicativeLast, 
    bindLast: bindLast, 
    monadLast: monadLast, 
    extendLast: extendLast, 
    invariantLast: invariantLast, 
    showLast: showLast, 
    semigroupLast: semigroupLast, 
    monoidLast: monoidLast
};

},{"Control.Comonad":"/Users/gene/Programming/pure_morph/output/Control.Comonad/index.js","Control.Extend":"/Users/gene/Programming/pure_morph/output/Control.Extend/index.js","Data.Functor.Invariant":"/Users/gene/Programming/pure_morph/output/Data.Functor.Invariant/index.js","Data.Maybe":"/Users/gene/Programming/pure_morph/output/Data.Maybe/index.js","Data.Monoid":"/Users/gene/Programming/pure_morph/output/Data.Monoid/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Data.Maybe.Unsafe/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Maybe.Unsafe

exports.unsafeThrow = function (msg) {
  throw new Error(msg);
};

},{}],"/Users/gene/Programming/pure_morph/output/Data.Maybe.Unsafe/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var fromJust = function (v) {
    if (v instanceof Data_Maybe.Just) {
        return v.value0;
    };
    if (v instanceof Data_Maybe.Nothing) {
        return $foreign.unsafeThrow("Data.Maybe.Unsafe.fromJust called on Nothing");
    };
    throw new Error("Failed pattern match at Data.Maybe.Unsafe line 10, column 1 - line 11, column 1: " + [ v.constructor.name ]);
};
module.exports = {
    fromJust: fromJust, 
    unsafeThrow: $foreign.unsafeThrow
};

},{"./foreign":"/Users/gene/Programming/pure_morph/output/Data.Maybe.Unsafe/foreign.js","Data.Maybe":"/Users/gene/Programming/pure_morph/output/Data.Maybe/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Data.Maybe/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Alt = require("Control.Alt");
var Control_Alternative = require("Control.Alternative");
var Control_Extend = require("Control.Extend");
var Control_MonadPlus = require("Control.MonadPlus");
var Control_Plus = require("Control.Plus");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Data_Monoid = require("Data.Monoid");
var Nothing = (function () {
    function Nothing() {

    };
    Nothing.value = new Nothing();
    return Nothing;
})();
var Just = (function () {
    function Just(value0) {
        this.value0 = value0;
    };
    Just.create = function (value0) {
        return new Just(value0);
    };
    return Just;
})();
var showMaybe = function (dictShow) {
    return new Prelude.Show(function (v) {
        if (v instanceof Just) {
            return "Just (" + (Prelude.show(dictShow)(v.value0) + ")");
        };
        if (v instanceof Nothing) {
            return "Nothing";
        };
        throw new Error("Failed pattern match at Data.Maybe line 289, column 1 - line 291, column 19: " + [ v.constructor.name ]);
    });
};
var semigroupMaybe = function (dictSemigroup) {
    return new Prelude.Semigroup(function (v) {
        return function (v1) {
            if (v instanceof Nothing) {
                return v1;
            };
            if (v1 instanceof Nothing) {
                return v;
            };
            if (v instanceof Just && v1 instanceof Just) {
                return new Just(Prelude["<>"](dictSemigroup)(v.value0)(v1.value0));
            };
            throw new Error("Failed pattern match at Data.Maybe line 231, column 1 - line 236, column 1: " + [ v.constructor.name, v1.constructor.name ]);
        };
    });
};
var monoidMaybe = function (dictSemigroup) {
    return new Data_Monoid.Monoid(function () {
        return semigroupMaybe(dictSemigroup);
    }, Nothing.value);
};
var maybe$prime = function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Nothing) {
                return v(Prelude.unit);
            };
            if (v2 instanceof Just) {
                return v1(v2.value0);
            };
            throw new Error("Failed pattern match at Data.Maybe line 39, column 1 - line 40, column 1: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
};
var maybe = function (v) {
    return function (v1) {
        return function (v2) {
            if (v2 instanceof Nothing) {
                return v;
            };
            if (v2 instanceof Just) {
                return v1(v2.value0);
            };
            throw new Error("Failed pattern match at Data.Maybe line 26, column 1 - line 27, column 1: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
};
var isNothing = maybe(true)(Prelude["const"](false));
var isJust = maybe(false)(Prelude["const"](true));
var functorMaybe = new Prelude.Functor(function (v) {
    return function (v1) {
        if (v1 instanceof Just) {
            return new Just(v(v1.value0));
        };
        return Nothing.value;
    };
});
var invariantMaybe = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorMaybe));
var fromMaybe$prime = function (a) {
    return maybe$prime(a)(Prelude.id(Prelude.categoryFn));
};
var fromMaybe = function (a) {
    return maybe(a)(Prelude.id(Prelude.categoryFn));
};
var extendMaybe = new Control_Extend.Extend(function () {
    return functorMaybe;
}, function (v) {
    return function (v1) {
        if (v1 instanceof Nothing) {
            return Nothing.value;
        };
        return new Just(v(v1));
    };
});
var eqMaybe = function (dictEq) {
    return new Prelude.Eq(function (v) {
        return function (v1) {
            if (v instanceof Nothing && v1 instanceof Nothing) {
                return true;
            };
            if (v instanceof Just && v1 instanceof Just) {
                return Prelude["=="](dictEq)(v.value0)(v1.value0);
            };
            return false;
        };
    });
};
var ordMaybe = function (dictOrd) {
    return new Prelude.Ord(function () {
        return eqMaybe(dictOrd["__superclass_Prelude.Eq_0"]());
    }, function (v) {
        return function (v1) {
            if (v instanceof Just && v1 instanceof Just) {
                return Prelude.compare(dictOrd)(v.value0)(v1.value0);
            };
            if (v instanceof Nothing && v1 instanceof Nothing) {
                return Prelude.EQ.value;
            };
            if (v instanceof Nothing) {
                return Prelude.LT.value;
            };
            if (v1 instanceof Nothing) {
                return Prelude.GT.value;
            };
            throw new Error("Failed pattern match at Data.Maybe line 269, column 1 - line 275, column 1: " + [ v.constructor.name, v1.constructor.name ]);
        };
    });
};
var boundedMaybe = function (dictBounded) {
    return new Prelude.Bounded(Nothing.value, new Just(Prelude.top(dictBounded)));
};
var boundedOrdMaybe = function (dictBoundedOrd) {
    return new Prelude.BoundedOrd(function () {
        return boundedMaybe(dictBoundedOrd["__superclass_Prelude.Bounded_0"]());
    }, function () {
        return ordMaybe(dictBoundedOrd["__superclass_Prelude.Ord_1"]());
    });
};
var applyMaybe = new Prelude.Apply(function () {
    return functorMaybe;
}, function (v) {
    return function (v1) {
        if (v instanceof Just) {
            return Prelude["<$>"](functorMaybe)(v.value0)(v1);
        };
        if (v instanceof Nothing) {
            return Nothing.value;
        };
        throw new Error("Failed pattern match at Data.Maybe line 121, column 1 - line 145, column 1: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var bindMaybe = new Prelude.Bind(function () {
    return applyMaybe;
}, function (v) {
    return function (v1) {
        if (v instanceof Just) {
            return v1(v.value0);
        };
        if (v instanceof Nothing) {
            return Nothing.value;
        };
        throw new Error("Failed pattern match at Data.Maybe line 180, column 1 - line 199, column 1: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var booleanAlgebraMaybe = function (dictBooleanAlgebra) {
    return new Prelude.BooleanAlgebra(function () {
        return boundedMaybe(dictBooleanAlgebra["__superclass_Prelude.Bounded_0"]());
    }, function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.conj(dictBooleanAlgebra))(x))(y);
        };
    }, function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.disj(dictBooleanAlgebra))(x))(y);
        };
    }, Prelude.map(functorMaybe)(Prelude.not(dictBooleanAlgebra)));
};
var semiringMaybe = function (dictSemiring) {
    return new Prelude.Semiring(function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.add(dictSemiring))(x))(y);
        };
    }, function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.mul(dictSemiring))(x))(y);
        };
    }, new Just(Prelude.one(dictSemiring)), new Just(Prelude.zero(dictSemiring)));
};
var moduloSemiringMaybe = function (dictModuloSemiring) {
    return new Prelude.ModuloSemiring(function () {
        return semiringMaybe(dictModuloSemiring["__superclass_Prelude.Semiring_0"]());
    }, function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.div(dictModuloSemiring))(x))(y);
        };
    }, function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.mod(dictModuloSemiring))(x))(y);
        };
    });
};
var ringMaybe = function (dictRing) {
    return new Prelude.Ring(function () {
        return semiringMaybe(dictRing["__superclass_Prelude.Semiring_0"]());
    }, function (x) {
        return function (y) {
            return Prelude["<*>"](applyMaybe)(Prelude["<$>"](functorMaybe)(Prelude.sub(dictRing))(x))(y);
        };
    });
};
var divisionRingMaybe = function (dictDivisionRing) {
    return new Prelude.DivisionRing(function () {
        return moduloSemiringMaybe(dictDivisionRing["__superclass_Prelude.ModuloSemiring_1"]());
    }, function () {
        return ringMaybe(dictDivisionRing["__superclass_Prelude.Ring_0"]());
    });
};
var numMaybe = function (dictNum) {
    return new Prelude.Num(function () {
        return divisionRingMaybe(dictNum["__superclass_Prelude.DivisionRing_0"]());
    });
};
var applicativeMaybe = new Prelude.Applicative(function () {
    return applyMaybe;
}, Just.create);
var monadMaybe = new Prelude.Monad(function () {
    return applicativeMaybe;
}, function () {
    return bindMaybe;
});
var altMaybe = new Control_Alt.Alt(function () {
    return functorMaybe;
}, function (v) {
    return function (v1) {
        if (v instanceof Nothing) {
            return v1;
        };
        return v;
    };
});
var plusMaybe = new Control_Plus.Plus(function () {
    return altMaybe;
}, Nothing.value);
var alternativeMaybe = new Control_Alternative.Alternative(function () {
    return plusMaybe;
}, function () {
    return applicativeMaybe;
});
var monadPlusMaybe = new Control_MonadPlus.MonadPlus(function () {
    return alternativeMaybe;
}, function () {
    return monadMaybe;
});
module.exports = {
    Nothing: Nothing, 
    Just: Just, 
    isNothing: isNothing, 
    isJust: isJust, 
    "fromMaybe'": fromMaybe$prime, 
    fromMaybe: fromMaybe, 
    "maybe'": maybe$prime, 
    maybe: maybe, 
    functorMaybe: functorMaybe, 
    applyMaybe: applyMaybe, 
    applicativeMaybe: applicativeMaybe, 
    altMaybe: altMaybe, 
    plusMaybe: plusMaybe, 
    alternativeMaybe: alternativeMaybe, 
    bindMaybe: bindMaybe, 
    monadMaybe: monadMaybe, 
    monadPlusMaybe: monadPlusMaybe, 
    extendMaybe: extendMaybe, 
    invariantMaybe: invariantMaybe, 
    semigroupMaybe: semigroupMaybe, 
    monoidMaybe: monoidMaybe, 
    semiringMaybe: semiringMaybe, 
    moduloSemiringMaybe: moduloSemiringMaybe, 
    ringMaybe: ringMaybe, 
    divisionRingMaybe: divisionRingMaybe, 
    numMaybe: numMaybe, 
    eqMaybe: eqMaybe, 
    ordMaybe: ordMaybe, 
    boundedMaybe: boundedMaybe, 
    boundedOrdMaybe: boundedOrdMaybe, 
    booleanAlgebraMaybe: booleanAlgebraMaybe, 
    showMaybe: showMaybe
};

},{"Control.Alt":"/Users/gene/Programming/pure_morph/output/Control.Alt/index.js","Control.Alternative":"/Users/gene/Programming/pure_morph/output/Control.Alternative/index.js","Control.Extend":"/Users/gene/Programming/pure_morph/output/Control.Extend/index.js","Control.MonadPlus":"/Users/gene/Programming/pure_morph/output/Control.MonadPlus/index.js","Control.Plus":"/Users/gene/Programming/pure_morph/output/Control.Plus/index.js","Data.Functor.Invariant":"/Users/gene/Programming/pure_morph/output/Data.Functor.Invariant/index.js","Data.Monoid":"/Users/gene/Programming/pure_morph/output/Data.Monoid/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Data.Monoid.Additive/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Comonad = require("Control.Comonad");
var Control_Extend = require("Control.Extend");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Data_Monoid = require("Data.Monoid");
var Additive = function (x) {
    return x;
};
var showAdditive = function (dictShow) {
    return new Prelude.Show(function (v) {
        return "Additive (" + (Prelude.show(dictShow)(v) + ")");
    });
};
var semigroupAdditive = function (dictSemiring) {
    return new Prelude.Semigroup(function (v) {
        return function (v1) {
            return Prelude["+"](dictSemiring)(v)(v1);
        };
    });
};
var runAdditive = function (v) {
    return v;
};
var monoidAdditive = function (dictSemiring) {
    return new Data_Monoid.Monoid(function () {
        return semigroupAdditive(dictSemiring);
    }, Prelude.zero(dictSemiring));
};
var invariantAdditive = new Data_Functor_Invariant.Invariant(function (f) {
    return function (v) {
        return function (v1) {
            return f(v1);
        };
    };
});
var functorAdditive = new Prelude.Functor(function (f) {
    return function (v) {
        return f(v);
    };
});
var extendAdditive = new Control_Extend.Extend(function () {
    return functorAdditive;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqAdditive = function (dictEq) {
    return new Prelude.Eq(function (v) {
        return function (v1) {
            return Prelude["=="](dictEq)(v)(v1);
        };
    });
};
var ordAdditive = function (dictOrd) {
    return new Prelude.Ord(function () {
        return eqAdditive(dictOrd["__superclass_Prelude.Eq_0"]());
    }, function (v) {
        return function (v1) {
            return Prelude.compare(dictOrd)(v)(v1);
        };
    });
};
var comonadAdditive = new Control_Comonad.Comonad(function () {
    return extendAdditive;
}, runAdditive);
var applyAdditive = new Prelude.Apply(function () {
    return functorAdditive;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindAdditive = new Prelude.Bind(function () {
    return applyAdditive;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeAdditive = new Prelude.Applicative(function () {
    return applyAdditive;
}, Additive);
var monadAdditive = new Prelude.Monad(function () {
    return applicativeAdditive;
}, function () {
    return bindAdditive;
});
module.exports = {
    Additive: Additive, 
    runAdditive: runAdditive, 
    eqAdditive: eqAdditive, 
    ordAdditive: ordAdditive, 
    functorAdditive: functorAdditive, 
    applyAdditive: applyAdditive, 
    applicativeAdditive: applicativeAdditive, 
    bindAdditive: bindAdditive, 
    monadAdditive: monadAdditive, 
    extendAdditive: extendAdditive, 
    comonadAdditive: comonadAdditive, 
    invariantAdditive: invariantAdditive, 
    showAdditive: showAdditive, 
    semigroupAdditive: semigroupAdditive, 
    monoidAdditive: monoidAdditive
};

},{"Control.Comonad":"/Users/gene/Programming/pure_morph/output/Control.Comonad/index.js","Control.Extend":"/Users/gene/Programming/pure_morph/output/Control.Extend/index.js","Data.Functor.Invariant":"/Users/gene/Programming/pure_morph/output/Data.Functor.Invariant/index.js","Data.Monoid":"/Users/gene/Programming/pure_morph/output/Data.Monoid/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Data.Monoid.Conj/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Comonad = require("Control.Comonad");
var Control_Extend = require("Control.Extend");
var Data_Monoid = require("Data.Monoid");
var Conj = function (x) {
    return x;
};
var showConj = function (dictShow) {
    return new Prelude.Show(function (v) {
        return "Conj (" + (Prelude.show(dictShow)(v) + ")");
    });
};
var semiringConj = function (dictBooleanAlgebra) {
    return new Prelude.Semiring(function (v) {
        return function (v1) {
            return Prelude.conj(dictBooleanAlgebra)(v)(v1);
        };
    }, function (v) {
        return function (v1) {
            return Prelude.disj(dictBooleanAlgebra)(v)(v1);
        };
    }, Prelude.bottom(dictBooleanAlgebra["__superclass_Prelude.Bounded_0"]()), Prelude.top(dictBooleanAlgebra["__superclass_Prelude.Bounded_0"]()));
};
var semigroupConj = function (dictBooleanAlgebra) {
    return new Prelude.Semigroup(function (v) {
        return function (v1) {
            return Prelude.conj(dictBooleanAlgebra)(v)(v1);
        };
    });
};
var runConj = function (v) {
    return v;
};
var monoidConj = function (dictBooleanAlgebra) {
    return new Data_Monoid.Monoid(function () {
        return semigroupConj(dictBooleanAlgebra);
    }, Prelude.top(dictBooleanAlgebra["__superclass_Prelude.Bounded_0"]()));
};
var functorConj = new Prelude.Functor(function (f) {
    return function (v) {
        return f(v);
    };
});
var extendConj = new Control_Extend.Extend(function () {
    return functorConj;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqConj = function (dictEq) {
    return new Prelude.Eq(function (v) {
        return function (v1) {
            return Prelude["=="](dictEq)(v)(v1);
        };
    });
};
var ordConj = function (dictOrd) {
    return new Prelude.Ord(function () {
        return eqConj(dictOrd["__superclass_Prelude.Eq_0"]());
    }, function (v) {
        return function (v1) {
            return Prelude.compare(dictOrd)(v)(v1);
        };
    });
};
var comonadConj = new Control_Comonad.Comonad(function () {
    return extendConj;
}, runConj);
var boundedConj = function (dictBounded) {
    return new Prelude.Bounded(Prelude.bottom(dictBounded), Prelude.top(dictBounded));
};
var applyConj = new Prelude.Apply(function () {
    return functorConj;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindConj = new Prelude.Bind(function () {
    return applyConj;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeConj = new Prelude.Applicative(function () {
    return applyConj;
}, Conj);
var monadConj = new Prelude.Monad(function () {
    return applicativeConj;
}, function () {
    return bindConj;
});
module.exports = {
    Conj: Conj, 
    runConj: runConj, 
    eqConj: eqConj, 
    ordConj: ordConj, 
    boundedConj: boundedConj, 
    functorConj: functorConj, 
    applyConj: applyConj, 
    applicativeConj: applicativeConj, 
    bindConj: bindConj, 
    monadConj: monadConj, 
    extendConj: extendConj, 
    comonadConj: comonadConj, 
    showConj: showConj, 
    semigroupConj: semigroupConj, 
    monoidConj: monoidConj, 
    semiringConj: semiringConj
};

},{"Control.Comonad":"/Users/gene/Programming/pure_morph/output/Control.Comonad/index.js","Control.Extend":"/Users/gene/Programming/pure_morph/output/Control.Extend/index.js","Data.Monoid":"/Users/gene/Programming/pure_morph/output/Data.Monoid/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Data.Monoid.Disj/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Comonad = require("Control.Comonad");
var Control_Extend = require("Control.Extend");
var Data_Monoid = require("Data.Monoid");
var Disj = function (x) {
    return x;
};
var showDisj = function (dictShow) {
    return new Prelude.Show(function (v) {
        return "Disj (" + (Prelude.show(dictShow)(v) + ")");
    });
};
var semiringDisj = function (dictBooleanAlgebra) {
    return new Prelude.Semiring(function (v) {
        return function (v1) {
            return Prelude.disj(dictBooleanAlgebra)(v)(v1);
        };
    }, function (v) {
        return function (v1) {
            return Prelude.conj(dictBooleanAlgebra)(v)(v1);
        };
    }, Prelude.top(dictBooleanAlgebra["__superclass_Prelude.Bounded_0"]()), Prelude.bottom(dictBooleanAlgebra["__superclass_Prelude.Bounded_0"]()));
};
var semigroupDisj = function (dictBooleanAlgebra) {
    return new Prelude.Semigroup(function (v) {
        return function (v1) {
            return Prelude.disj(dictBooleanAlgebra)(v)(v1);
        };
    });
};
var runDisj = function (v) {
    return v;
};
var monoidDisj = function (dictBooleanAlgebra) {
    return new Data_Monoid.Monoid(function () {
        return semigroupDisj(dictBooleanAlgebra);
    }, Prelude.bottom(dictBooleanAlgebra["__superclass_Prelude.Bounded_0"]()));
};
var functorDisj = new Prelude.Functor(function (f) {
    return function (v) {
        return f(v);
    };
});
var extendDisj = new Control_Extend.Extend(function () {
    return functorDisj;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqDisj = function (dictEq) {
    return new Prelude.Eq(function (v) {
        return function (v1) {
            return Prelude["=="](dictEq)(v)(v1);
        };
    });
};
var ordDisj = function (dictOrd) {
    return new Prelude.Ord(function () {
        return eqDisj(dictOrd["__superclass_Prelude.Eq_0"]());
    }, function (v) {
        return function (v1) {
            return Prelude.compare(dictOrd)(v)(v1);
        };
    });
};
var comonadDisj = new Control_Comonad.Comonad(function () {
    return extendDisj;
}, runDisj);
var boundedDisj = function (dictBounded) {
    return new Prelude.Bounded(Prelude.bottom(dictBounded), Prelude.top(dictBounded));
};
var applyDisj = new Prelude.Apply(function () {
    return functorDisj;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindDisj = new Prelude.Bind(function () {
    return applyDisj;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeDisj = new Prelude.Applicative(function () {
    return applyDisj;
}, Disj);
var monadDisj = new Prelude.Monad(function () {
    return applicativeDisj;
}, function () {
    return bindDisj;
});
module.exports = {
    Disj: Disj, 
    runDisj: runDisj, 
    eqDisj: eqDisj, 
    ordDisj: ordDisj, 
    boundedDisj: boundedDisj, 
    functorDisj: functorDisj, 
    applyDisj: applyDisj, 
    applicativeDisj: applicativeDisj, 
    bindDisj: bindDisj, 
    monadDisj: monadDisj, 
    extendDisj: extendDisj, 
    comonadDisj: comonadDisj, 
    showDisj: showDisj, 
    semigroupDisj: semigroupDisj, 
    monoidDisj: monoidDisj, 
    semiringDisj: semiringDisj
};

},{"Control.Comonad":"/Users/gene/Programming/pure_morph/output/Control.Comonad/index.js","Control.Extend":"/Users/gene/Programming/pure_morph/output/Control.Extend/index.js","Data.Monoid":"/Users/gene/Programming/pure_morph/output/Data.Monoid/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Data.Monoid.Dual/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Comonad = require("Control.Comonad");
var Control_Extend = require("Control.Extend");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Data_Monoid = require("Data.Monoid");
var Dual = function (x) {
    return x;
};
var showDual = function (dictShow) {
    return new Prelude.Show(function (v) {
        return "Dual (" + (Prelude.show(dictShow)(v) + ")");
    });
};
var semigroupDual = function (dictSemigroup) {
    return new Prelude.Semigroup(function (v) {
        return function (v1) {
            return Prelude["<>"](dictSemigroup)(v1)(v);
        };
    });
};
var runDual = function (v) {
    return v;
};
var monoidDual = function (dictMonoid) {
    return new Data_Monoid.Monoid(function () {
        return semigroupDual(dictMonoid["__superclass_Prelude.Semigroup_0"]());
    }, Data_Monoid.mempty(dictMonoid));
};
var invariantDual = new Data_Functor_Invariant.Invariant(function (f) {
    return function (v) {
        return function (v1) {
            return f(v1);
        };
    };
});
var functorDual = new Prelude.Functor(function (f) {
    return function (v) {
        return f(v);
    };
});
var extendDual = new Control_Extend.Extend(function () {
    return functorDual;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqDual = function (dictEq) {
    return new Prelude.Eq(function (v) {
        return function (v1) {
            return Prelude["=="](dictEq)(v)(v1);
        };
    });
};
var ordDual = function (dictOrd) {
    return new Prelude.Ord(function () {
        return eqDual(dictOrd["__superclass_Prelude.Eq_0"]());
    }, function (v) {
        return function (v1) {
            return Prelude.compare(dictOrd)(v)(v1);
        };
    });
};
var comonadDual = new Control_Comonad.Comonad(function () {
    return extendDual;
}, runDual);
var applyDual = new Prelude.Apply(function () {
    return functorDual;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindDual = new Prelude.Bind(function () {
    return applyDual;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeDual = new Prelude.Applicative(function () {
    return applyDual;
}, Dual);
var monadDual = new Prelude.Monad(function () {
    return applicativeDual;
}, function () {
    return bindDual;
});
module.exports = {
    Dual: Dual, 
    runDual: runDual, 
    eqDual: eqDual, 
    ordDual: ordDual, 
    functorDual: functorDual, 
    applyDual: applyDual, 
    applicativeDual: applicativeDual, 
    bindDual: bindDual, 
    monadDual: monadDual, 
    extendDual: extendDual, 
    comonadDual: comonadDual, 
    invariantDual: invariantDual, 
    showDual: showDual, 
    semigroupDual: semigroupDual, 
    monoidDual: monoidDual
};

},{"Control.Comonad":"/Users/gene/Programming/pure_morph/output/Control.Comonad/index.js","Control.Extend":"/Users/gene/Programming/pure_morph/output/Control.Extend/index.js","Data.Functor.Invariant":"/Users/gene/Programming/pure_morph/output/Data.Functor.Invariant/index.js","Data.Monoid":"/Users/gene/Programming/pure_morph/output/Data.Monoid/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Data.Monoid.Endo/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Data_Monoid = require("Data.Monoid");
var Endo = function (x) {
    return x;
};
var semigroupEndo = new Prelude.Semigroup(function (v) {
    return function (v1) {
        return function ($10) {
            return v(v1($10));
        };
    };
});
var runEndo = function (v) {
    return v;
};
var monoidEndo = new Data_Monoid.Monoid(function () {
    return semigroupEndo;
}, Prelude.id(Prelude.categoryFn));
var invariantEndo = new Data_Functor_Invariant.Invariant(function (ab) {
    return function (ba) {
        return function (v) {
            return function ($11) {
                return ab(v(ba($11)));
            };
        };
    };
});
module.exports = {
    Endo: Endo, 
    runEndo: runEndo, 
    invariantEndo: invariantEndo, 
    semigroupEndo: semigroupEndo, 
    monoidEndo: monoidEndo
};

},{"Data.Functor.Invariant":"/Users/gene/Programming/pure_morph/output/Data.Functor.Invariant/index.js","Data.Monoid":"/Users/gene/Programming/pure_morph/output/Data.Monoid/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Data.Monoid.Multiplicative/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Comonad = require("Control.Comonad");
var Control_Extend = require("Control.Extend");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Data_Monoid = require("Data.Monoid");
var Multiplicative = function (x) {
    return x;
};
var showMultiplicative = function (dictShow) {
    return new Prelude.Show(function (v) {
        return "Multiplicative (" + (Prelude.show(dictShow)(v) + ")");
    });
};
var semigroupMultiplicative = function (dictSemiring) {
    return new Prelude.Semigroup(function (v) {
        return function (v1) {
            return Prelude["*"](dictSemiring)(v)(v1);
        };
    });
};
var runMultiplicative = function (v) {
    return v;
};
var monoidMultiplicative = function (dictSemiring) {
    return new Data_Monoid.Monoid(function () {
        return semigroupMultiplicative(dictSemiring);
    }, Prelude.one(dictSemiring));
};
var invariantMultiplicative = new Data_Functor_Invariant.Invariant(function (f) {
    return function (v) {
        return function (v1) {
            return f(v1);
        };
    };
});
var functorMultiplicative = new Prelude.Functor(function (f) {
    return function (v) {
        return f(v);
    };
});
var extendMultiplicative = new Control_Extend.Extend(function () {
    return functorMultiplicative;
}, function (f) {
    return function (x) {
        return f(x);
    };
});
var eqMultiplicative = function (dictEq) {
    return new Prelude.Eq(function (v) {
        return function (v1) {
            return Prelude["=="](dictEq)(v)(v1);
        };
    });
};
var ordMultiplicative = function (dictOrd) {
    return new Prelude.Ord(function () {
        return eqMultiplicative(dictOrd["__superclass_Prelude.Eq_0"]());
    }, function (v) {
        return function (v1) {
            return Prelude.compare(dictOrd)(v)(v1);
        };
    });
};
var comonadMultiplicative = new Control_Comonad.Comonad(function () {
    return extendMultiplicative;
}, runMultiplicative);
var applyMultiplicative = new Prelude.Apply(function () {
    return functorMultiplicative;
}, function (v) {
    return function (v1) {
        return v(v1);
    };
});
var bindMultiplicative = new Prelude.Bind(function () {
    return applyMultiplicative;
}, function (v) {
    return function (f) {
        return f(v);
    };
});
var applicativeMultiplicative = new Prelude.Applicative(function () {
    return applyMultiplicative;
}, Multiplicative);
var monadMultiplicative = new Prelude.Monad(function () {
    return applicativeMultiplicative;
}, function () {
    return bindMultiplicative;
});
module.exports = {
    Multiplicative: Multiplicative, 
    runMultiplicative: runMultiplicative, 
    eqMultiplicative: eqMultiplicative, 
    ordMultiplicative: ordMultiplicative, 
    functorMultiplicative: functorMultiplicative, 
    applyMultiplicative: applyMultiplicative, 
    applicativeMultiplicative: applicativeMultiplicative, 
    bindMultiplicative: bindMultiplicative, 
    monadMultiplicative: monadMultiplicative, 
    extendMultiplicative: extendMultiplicative, 
    comonadMultiplicative: comonadMultiplicative, 
    invariantMultiplicative: invariantMultiplicative, 
    showMultiplicative: showMultiplicative, 
    semigroupMultiplicative: semigroupMultiplicative, 
    monoidMultiplicative: monoidMultiplicative
};

},{"Control.Comonad":"/Users/gene/Programming/pure_morph/output/Control.Comonad/index.js","Control.Extend":"/Users/gene/Programming/pure_morph/output/Control.Extend/index.js","Data.Functor.Invariant":"/Users/gene/Programming/pure_morph/output/Data.Functor.Invariant/index.js","Data.Monoid":"/Users/gene/Programming/pure_morph/output/Data.Monoid/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Data.Monoid/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var Monoid = function (__superclass_Prelude$dotSemigroup_0, mempty) {
    this["__superclass_Prelude.Semigroup_0"] = __superclass_Prelude$dotSemigroup_0;
    this.mempty = mempty;
};
var monoidUnit = new Monoid(function () {
    return Prelude.semigroupUnit;
}, Prelude.unit);
var monoidString = new Monoid(function () {
    return Prelude.semigroupString;
}, "");
var monoidArray = new Monoid(function () {
    return Prelude.semigroupArray;
}, [  ]);
var mempty = function (dict) {
    return dict.mempty;
};
var monoidFn = function (dictMonoid) {
    return new Monoid(function () {
        return Prelude.semigroupFn(dictMonoid["__superclass_Prelude.Semigroup_0"]());
    }, Prelude["const"](mempty(dictMonoid)));
};
module.exports = {
    Monoid: Monoid, 
    mempty: mempty, 
    monoidUnit: monoidUnit, 
    monoidFn: monoidFn, 
    monoidString: monoidString, 
    monoidArray: monoidArray
};

},{"Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Data.StrMap.ST/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.StrMap.ST

exports["new"] = function () {
  return {};
};

exports.peekImpl = function (just) {
  return function (nothing) {
    return function (m) {
      return function (k) {
        return function () {
          return {}.hasOwnProperty.call(m, k) ? just(m[k]) : nothing;
        };
      };
    };
  };
};

exports.poke = function (m) {
  return function (k) {
    return function (v) {
      return function () {
        m[k] = v;
        return m;
      };
    };
  };
};

exports["delete"] = function (m) {
  return function (k) {
    return function () {
      delete m[k];
      return m;
    };
  };
};

},{}],"/Users/gene/Programming/pure_morph/output/Data.StrMap.ST/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Control_Monad_ST = require("Control.Monad.ST");
var Data_Maybe = require("Data.Maybe");
var peek = $foreign.peekImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
module.exports = {
    peek: peek, 
    "delete": $foreign["delete"], 
    poke: $foreign.poke, 
    "new": $foreign["new"]
};

},{"./foreign":"/Users/gene/Programming/pure_morph/output/Data.StrMap.ST/foreign.js","Control.Monad.Eff":"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff/index.js","Control.Monad.ST":"/Users/gene/Programming/pure_morph/output/Control.Monad.ST/index.js","Data.Maybe":"/Users/gene/Programming/pure_morph/output/Data.Maybe/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Data.StrMap/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.StrMap

exports._copy = function (m) {
  var r = {};
  for (var k in m) {
    if (m.hasOwnProperty(k)) {
      r[k] = m[k];
    }
  }
  return r;
};

exports._copyEff = function (m) {
  return function () {
    var r = {};
    for (var k in m) {
      if (m.hasOwnProperty(k)) {
        r[k] = m[k];
      }
    }
    return r;
  };
};

exports.empty = {};

exports.runST = function (f) {
  return f;
};

// jshint maxparams: 2
exports._fmapStrMap = function (m0, f) {
  var m = {};
  for (var k in m0) {
    if (m0.hasOwnProperty(k)) {
      m[k] = f(m0[k]);
    }
  }
  return m;
};

// jshint maxparams: 1
exports._foldM = function (bind) {
  return function (f) {
    return function (mz) {
      return function (m) {
        function g (k) {
          return function (z) {
            return f(z)(k)(m[k]);
          };
        }
        for (var k in m) {
          if (m.hasOwnProperty(k)) {
            mz = bind(mz)(g(k));
          }
        }
        return mz;
      };
    };
  };
};

// jshint maxparams: 4
exports._foldSCStrMap = function (m, z, f, fromMaybe) {
  for (var k in m) {
    if (m.hasOwnProperty(k)) {
      var maybeR = f(z)(k)(m[k]);
      var r = fromMaybe(null)(maybeR);
      if (r === null) return z;
      else z = r;
    }
  }
  return z;
};

// jshint maxparams: 1
exports.all = function (f) {
  return function (m) {
    for (var k in m) {
      if (m.hasOwnProperty(k) && !f(k)(m[k])) return false;
    }
    return true;
  };
};

exports.size = function (m) {
  var s = 0;
  for (var k in m) {
    if (m.hasOwnProperty(k)) {
      ++s;
    }
  }
  return s;
};

// jshint maxparams: 4
exports._lookup = function (no, yes, k, m) {
  return k in m ? yes(m[k]) : no;
};

// jshint maxparams: 2
exports._unsafeDeleteStrMap = function (m, k) {
  delete m[k];
  return m;
};

// jshint maxparams: 4
exports._lookupST = function (no, yes, k, m) {
  return function () {
    return k in m ? yes(m[k]) : no;
  };
};

function _collect (f) {
  return function (m) {
    var r = [];
    for (var k in m) {
      if (m.hasOwnProperty(k)) {
        r.push(f(k)(m[k]));
      }
    }
    return r;
  };
}

exports._collect = _collect;

exports.keys = Object.keys || _collect(function (k) {
  return function () { return k; };
});

},{}],"/Users/gene/Programming/pure_morph/output/Data.StrMap/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Foldable = require("Data.Foldable");
var Data_Function = require("Data.Function");
var Data_Maybe = require("Data.Maybe");
var Data_Monoid = require("Data.Monoid");
var Data_Traversable = require("Data.Traversable");
var Data_Tuple = require("Data.Tuple");
var Data_List = require("Data.List");
var Control_Monad_ST = require("Control.Monad.ST");
var Data_StrMap_ST = require("Data.StrMap.ST");
var values = function ($38) {
    return Data_List.toList(Data_Foldable.foldableArray)($foreign._collect(function (v) {
        return function (v1) {
            return v1;
        };
    })($38));
};
var toList = function ($39) {
    return Data_List.toList(Data_Foldable.foldableArray)($foreign._collect(Data_Tuple.Tuple.create)($39));
};
var thawST = $foreign._copyEff;
var showStrMap = function (dictShow) {
    return new Prelude.Show(function (m) {
        return "fromList " + Prelude.show(Data_List.showList(Data_Tuple.showTuple(Prelude.showString)(dictShow)))(toList(m));
    });
};
var pureST = function (f) {
    return Control_Monad_Eff.runPure($foreign.runST(f));
};
var singleton = function (k) {
    return function (v) {
        return pureST(function __do() {
            var v1 = Data_StrMap_ST["new"]();
            Data_StrMap_ST.poke(v1)(k)(v)();
            return v1;
        });
    };
};
var mutate = function (f) {
    return function (m) {
        return pureST(function __do() {
            var v = thawST(m)();
            f(v)();
            return v;
        });
    };
};
var member = Data_Function.runFn4($foreign._lookup)(false)(Prelude["const"](true));
var lookup = Data_Function.runFn4($foreign._lookup)(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
var isSubmap = function (dictEq) {
    return function (m1) {
        return function (m2) {
            var f = function (k) {
                return function (v) {
                    return $foreign._lookup(false, Prelude["=="](dictEq)(v), k, m2);
                };
            };
            return $foreign.all(f)(m1);
        };
    };
};
var isEmpty = $foreign.all(function (v) {
    return function (v1) {
        return false;
    };
});
var insert = function (k) {
    return function (v) {
        return mutate(function (s) {
            return Data_StrMap_ST.poke(s)(k)(v);
        });
    };
};
var functorStrMap = new Prelude.Functor(function (f) {
    return function (m) {
        return $foreign._fmapStrMap(m, f);
    };
});
var fromFoldableWith = function (dictFoldable) {
    return function (f) {
        return function (l) {
            return pureST(function __do() {
                var v = Data_StrMap_ST["new"]();
                Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(dictFoldable)(l)(function (v1) {
                    return Prelude[">>="](Control_Monad_Eff.bindEff)($foreign._lookupST(v1.value1, f(v1.value1), v1.value0, v))(Data_StrMap_ST.poke(v)(v1.value0));
                })();
                return v;
            });
        };
    };
};
var fromListWith = fromFoldableWith(Data_List.foldableList);
var fromFoldable = function (dictFoldable) {
    return function (l) {
        return pureST(function __do() {
            var v = Data_StrMap_ST["new"]();
            Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(dictFoldable)(l)(function (v1) {
                return Data_StrMap_ST.poke(v)(v1.value0)(v1.value1);
            })();
            return v;
        });
    };
};
var fromList = fromFoldable(Data_List.foldableList);
var freezeST = $foreign._copyEff;
var foldMaybe = function (f) {
    return function (z) {
        return function (m) {
            return $foreign._foldSCStrMap(m, z, f, Data_Maybe.fromMaybe);
        };
    };
};
var foldM = function (dictMonad) {
    return function (f) {
        return function (z) {
            return $foreign._foldM(Prelude[">>="](dictMonad["__superclass_Prelude.Bind_1"]()))(f)(Prelude.pure(dictMonad["__superclass_Prelude.Applicative_0"]())(z));
        };
    };
};
var semigroupStrMap = function (dictSemigroup) {
    return new Prelude.Semigroup(function (m1) {
        return function (m2) {
            return mutate(function (s1) {
                return foldM(Control_Monad_Eff.monadEff)(function (s2) {
                    return function (k) {
                        return function (v2) {
                            return Data_StrMap_ST.poke(s2)(k)($foreign._lookup(v2, function (v1) {
                                return Prelude["<>"](dictSemigroup)(v1)(v2);
                            }, k, m2));
                        };
                    };
                })(s1)(m1);
            })(m2);
        };
    });
};
var monoidStrMap = function (dictSemigroup) {
    return new Data_Monoid.Monoid(function () {
        return semigroupStrMap(dictSemigroup);
    }, $foreign.empty);
};
var union = function (m) {
    return mutate(function (s) {
        return foldM(Control_Monad_Eff.monadEff)(Data_StrMap_ST.poke)(s)(m);
    });
};
var unions = Data_Foldable.foldl(Data_List.foldableList)(union)($foreign.empty);
var fold = $foreign._foldM(Prelude["#"]);
var foldMap = function (dictMonoid) {
    return function (f) {
        return fold(function (acc) {
            return function (k) {
                return function (v) {
                    return Prelude["<>"](dictMonoid["__superclass_Prelude.Semigroup_0"]())(acc)(f(k)(v));
                };
            };
        })(Data_Monoid.mempty(dictMonoid));
    };
};
var foldableStrMap = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return foldMap(dictMonoid)(Prelude["const"](f));
    };
}, function (f) {
    return fold(function (z) {
        return function (v) {
            return f(z);
        };
    });
}, function (f) {
    return function (z) {
        return function (m) {
            return Data_Foldable.foldr(Data_List.foldableList)(f)(z)(values(m));
        };
    };
});
var traversableStrMap = new Data_Traversable.Traversable(function () {
    return foldableStrMap;
}, function () {
    return functorStrMap;
}, function (dictApplicative) {
    return Data_Traversable.traverse(traversableStrMap)(dictApplicative)(Prelude.id(Prelude.categoryFn));
}, function (dictApplicative) {
    return function (f) {
        return function (ms) {
            return Data_Foldable.foldr(Data_List.foldableList)(function (x) {
                return function (acc) {
                    return Prelude["<*>"](dictApplicative["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(union)(x))(acc);
                };
            })(Prelude.pure(dictApplicative)($foreign.empty))(Prelude["<$>"](Data_List.functorList)(Prelude.map((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.uncurry(singleton)))(Prelude["<$>"](Data_List.functorList)(Data_Traversable.traverse(Data_Tuple.traversableTuple)(dictApplicative)(f))(toList(ms))));
        };
    };
});
var eqStrMap = function (dictEq) {
    return new Prelude.Eq(function (m1) {
        return function (m2) {
            return isSubmap(dictEq)(m1)(m2) && isSubmap(dictEq)(m2)(m1);
        };
    });
};
var $$delete = function (k) {
    return mutate(function (s) {
        return Data_StrMap_ST["delete"](s)(k);
    });
};
var alter = function (f) {
    return function (k) {
        return function (m) {
            var $36 = f(lookup(k)(m));
            if ($36 instanceof Data_Maybe.Nothing) {
                return $$delete(k)(m);
            };
            if ($36 instanceof Data_Maybe.Just) {
                return insert(k)($36.value0)(m);
            };
            throw new Error("Failed pattern match at Data.StrMap line 177, column 1 - line 178, column 1: " + [ $36.constructor.name ]);
        };
    };
};
var update = function (f) {
    return function (k) {
        return function (m) {
            return alter(Data_Maybe.maybe(Data_Maybe.Nothing.value)(f))(k)(m);
        };
    };
};
module.exports = {
    freezeST: freezeST, 
    thawST: thawST, 
    foldMaybe: foldMaybe, 
    foldM: foldM, 
    foldMap: foldMap, 
    fold: fold, 
    isSubmap: isSubmap, 
    unions: unions, 
    union: union, 
    values: values, 
    update: update, 
    alter: alter, 
    member: member, 
    "delete": $$delete, 
    fromListWith: fromListWith, 
    fromList: fromList, 
    fromFoldableWith: fromFoldableWith, 
    fromFoldable: fromFoldable, 
    toList: toList, 
    lookup: lookup, 
    insert: insert, 
    singleton: singleton, 
    isEmpty: isEmpty, 
    functorStrMap: functorStrMap, 
    foldableStrMap: foldableStrMap, 
    traversableStrMap: traversableStrMap, 
    eqStrMap: eqStrMap, 
    showStrMap: showStrMap, 
    semigroupStrMap: semigroupStrMap, 
    monoidStrMap: monoidStrMap, 
    runST: $foreign.runST, 
    all: $foreign.all, 
    keys: $foreign.keys, 
    size: $foreign.size, 
    empty: $foreign.empty
};

},{"./foreign":"/Users/gene/Programming/pure_morph/output/Data.StrMap/foreign.js","Control.Monad.Eff":"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff/index.js","Control.Monad.ST":"/Users/gene/Programming/pure_morph/output/Control.Monad.ST/index.js","Data.Foldable":"/Users/gene/Programming/pure_morph/output/Data.Foldable/index.js","Data.Function":"/Users/gene/Programming/pure_morph/output/Data.Function/index.js","Data.List":"/Users/gene/Programming/pure_morph/output/Data.List/index.js","Data.Maybe":"/Users/gene/Programming/pure_morph/output/Data.Maybe/index.js","Data.Monoid":"/Users/gene/Programming/pure_morph/output/Data.Monoid/index.js","Data.StrMap.ST":"/Users/gene/Programming/pure_morph/output/Data.StrMap.ST/index.js","Data.Traversable":"/Users/gene/Programming/pure_morph/output/Data.Traversable/index.js","Data.Tuple":"/Users/gene/Programming/pure_morph/output/Data.Tuple/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Data.String.Unsafe/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.String.Unsafe

exports.charCodeAt = function (i) {
  return function (s) {
    if (i >= 0 && i < s.length) return s.charCodeAt(i);
    throw new Error("Data.String.Unsafe.charCodeAt: Invalid index.");
  };
};

exports.charAt = function (i) {
  return function (s) {
    if (i >= 0 && i < s.length) return s.charAt(i);
    throw new Error("Data.String.Unsafe.charAt: Invalid index.");
  };
};

exports.char = function (s) {
  if (s.length === 1) return s.charAt(0);
  throw new Error("Data.String.Unsafe.char: Expected string of length 1.");
};

},{}],"/Users/gene/Programming/pure_morph/output/Data.String.Unsafe/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var $foreign = require("./foreign");
module.exports = {
    charCodeAt: $foreign.charCodeAt, 
    charAt: $foreign.charAt, 
    "char": $foreign["char"]
};

},{"./foreign":"/Users/gene/Programming/pure_morph/output/Data.String.Unsafe/foreign.js"}],"/Users/gene/Programming/pure_morph/output/Data.String/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.String

exports._charAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (s) {
        return i >= 0 && i < s.length ? just(s.charAt(i)) : nothing;
      };
    };
  };
};

exports._charCodeAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (s) {
        return i >= 0 && i < s.length ? just(s.charCodeAt(i)) : nothing;
      };
    };
  };
};

exports._toChar = function (just) {
  return function (nothing) {
    return function (s) {
      return s.length === 1 ? just(s) : nothing;
    };
  };
};

exports.fromCharArray = function (a) {
  return a.join("");
};

exports._indexOf = function (just) {
  return function (nothing) {
    return function (x) {
      return function (s) {
        var i = s.indexOf(x);
        return i === -1 ? nothing : just(i);
      };
    };
  };
};

exports["_indexOf'"] = function (just) {
  return function (nothing) {
    return function (x) {
      return function (startAt) {
        return function (s) {
          if (startAt < 0 || startAt > s.length) return nothing;
          var i = s.indexOf(x, startAt);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };
};

exports._lastIndexOf = function (just) {
  return function (nothing) {
    return function (x) {
      return function (s) {
        var i = s.lastIndexOf(x);
        return i === -1 ? nothing : just(i);
      };
    };
  };
};

exports["_lastIndexOf'"] = function (just) {
  return function (nothing) {
    return function (x) {
      return function (startAt) {
        return function (s) {
          if (startAt < 0 || startAt > s.length) return nothing;
          var i = s.lastIndexOf(x, startAt);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };
};

exports.length = function (s) {
  return s.length;
};

exports._localeCompare = function (lt) {
  return function (eq) {
    return function (gt) {
      return function (s1) {
        return function (s2) {
          var result = s1.localeCompare(s2);
          return result < 0 ? lt : result > 0 ? gt : eq;
        };
      };
    };
  };
};

exports.replace = function (s1) {
  return function (s2) {
    return function (s3) {
      return s3.replace(s1, s2);
    };
  };
};

exports.take = function (n) {
  return function (s) {
    return s.substr(0, n);
  };
};

exports.drop = function (n) {
  return function (s) {
    return s.substr(n);
  };
};

exports.count = function (p) {
  return function (s) {
    for (var i = 0; i < s.length && p(s.charAt(i)); i++); {}
    return i;
  };
};

exports.split = function (sep) {
  return function (s) {
    return s.split(sep);
  };
};

exports.toCharArray = function (s) {
  return s.split("");
};

exports.toLower = function (s) {
  return s.toLowerCase();
};

exports.toUpper = function (s) {
  return s.toUpperCase();
};

exports.trim = function (s) {
  return s.trim();
};

exports.joinWith = function (s) {
  return function (xs) {
    return xs.join(s);
  };
};

},{}],"/Users/gene/Programming/pure_morph/output/Data.String/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Char = require("Data.Char");
var Data_Maybe = require("Data.Maybe");
var Data_Monoid = require("Data.Monoid");
var Data_String_Unsafe = require("Data.String.Unsafe");
var uncons = function (v) {
    if (v === "") {
        return Data_Maybe.Nothing.value;
    };
    return new Data_Maybe.Just({
        head: Data_String_Unsafe.charAt(0)(v), 
        tail: $foreign.drop(1)(v)
    });
};
var toChar = $foreign._toChar(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var takeWhile = function (p) {
    return function (s) {
        return $foreign.take($foreign.count(p)(s))(s);
    };
};
var $$null = function (s) {
    return $foreign.length(s) === 0;
};
var localeCompare = $foreign._localeCompare(Prelude.LT.value)(Prelude.EQ.value)(Prelude.GT.value);
var lastIndexOf$prime = $foreign["_lastIndexOf'"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var lastIndexOf = $foreign._lastIndexOf(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var stripSuffix = function (suffix) {
    return function (str) {
        var $2 = lastIndexOf(suffix)(str);
        if ($2 instanceof Data_Maybe.Just && $2.value0 === $foreign.length(str) - $foreign.length(suffix)) {
            return Data_Maybe.Just.create($foreign.take($2.value0)(str));
        };
        return Data_Maybe.Nothing.value;
    };
};
var indexOf$prime = $foreign["_indexOf'"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var indexOf = $foreign._indexOf(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var stripPrefix = function (prefix) {
    return function (str) {
        var $4 = indexOf(prefix)(str);
        if ($4 instanceof Data_Maybe.Just && $4.value0 === 0) {
            return Data_Maybe.Just.create($foreign.drop($foreign.length(prefix))(str));
        };
        return Data_Maybe.Nothing.value;
    };
};
var fromChar = Data_Char.toString;
var singleton = fromChar;
var dropWhile = function (p) {
    return function (s) {
        return $foreign.drop($foreign.count(p)(s))(s);
    };
};
var contains = function (x) {
    return function (s) {
        return Data_Maybe.isJust(indexOf(x)(s));
    };
};
var charCodeAt = $foreign._charCodeAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var charAt = $foreign._charAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
module.exports = {
    stripSuffix: stripSuffix, 
    stripPrefix: stripPrefix, 
    dropWhile: dropWhile, 
    takeWhile: takeWhile, 
    localeCompare: localeCompare, 
    singleton: singleton, 
    uncons: uncons, 
    "null": $$null, 
    "lastIndexOf'": lastIndexOf$prime, 
    lastIndexOf: lastIndexOf, 
    "indexOf'": indexOf$prime, 
    indexOf: indexOf, 
    contains: contains, 
    toChar: toChar, 
    fromChar: fromChar, 
    charCodeAt: charCodeAt, 
    charAt: charAt, 
    joinWith: $foreign.joinWith, 
    trim: $foreign.trim, 
    toUpper: $foreign.toUpper, 
    toLower: $foreign.toLower, 
    toCharArray: $foreign.toCharArray, 
    split: $foreign.split, 
    drop: $foreign.drop, 
    take: $foreign.take, 
    count: $foreign.count, 
    replace: $foreign.replace, 
    length: $foreign.length, 
    fromCharArray: $foreign.fromCharArray
};

},{"./foreign":"/Users/gene/Programming/pure_morph/output/Data.String/foreign.js","Data.Char":"/Users/gene/Programming/pure_morph/output/Data.Char/index.js","Data.Maybe":"/Users/gene/Programming/pure_morph/output/Data.Maybe/index.js","Data.Monoid":"/Users/gene/Programming/pure_morph/output/Data.Monoid/index.js","Data.String.Unsafe":"/Users/gene/Programming/pure_morph/output/Data.String.Unsafe/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Data.Traversable/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Data.Traversable

// jshint maxparams: 3

exports.traverseArrayImpl = function () {
  function Cont (fn) {
    this.fn = fn;
  }

  var emptyList = {};

  var ConsCell = function (head, tail) {
    this.head = head;
    this.tail = tail;
  };

  function consList (x) {
    return function (xs) {
      return new ConsCell(x, xs);
    };
  }

  function listToArray (list) {
    var arr = [];
    while (list !== emptyList) {
      arr.push(list.head);
      list = list.tail;
    }
    return arr;
  }

  return function (apply) {
    return function (map) {
      return function (pure) {
        return function (f) {
          var buildFrom = function (x, ys) {
            return apply(map(consList)(f(x)))(ys);
          };

          var go = function (acc, currentLen, xs) {
            if (currentLen === 0) {
              return acc;
            } else {
              var last = xs[currentLen - 1];
              return new Cont(function () {
                return go(buildFrom(last, acc), currentLen - 1, xs);
              });
            }
          };

          return function (array) {
            var result = go(pure(emptyList), array.length, array);
            while (result instanceof Cont) {
              result = result.fn();
            }

            return map(listToArray)(result);
          };
        };
      };
    };
  };
}();

},{}],"/Users/gene/Programming/pure_morph/output/Data.Traversable/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Foldable = require("Data.Foldable");
var Data_Maybe = require("Data.Maybe");
var Data_Maybe_First = require("Data.Maybe.First");
var Data_Maybe_Last = require("Data.Maybe.Last");
var Data_Monoid_Additive = require("Data.Monoid.Additive");
var Data_Monoid_Conj = require("Data.Monoid.Conj");
var Data_Monoid_Disj = require("Data.Monoid.Disj");
var Data_Monoid_Dual = require("Data.Monoid.Dual");
var Data_Monoid_Multiplicative = require("Data.Monoid.Multiplicative");
var StateL = function (x) {
    return x;
};
var StateR = function (x) {
    return x;
};
var Traversable = function (__superclass_Data$dotFoldable$dotFoldable_1, __superclass_Prelude$dotFunctor_0, sequence, traverse) {
    this["__superclass_Data.Foldable.Foldable_1"] = __superclass_Data$dotFoldable$dotFoldable_1;
    this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    this.sequence = sequence;
    this.traverse = traverse;
};
var traverse = function (dict) {
    return dict.traverse;
};
var traversableMultiplicative = new Traversable(function () {
    return Data_Foldable.foldableMultiplicative;
}, function () {
    return Data_Monoid_Multiplicative.functorMultiplicative;
}, function (dictApplicative) {
    return function (v) {
        return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Multiplicative.Multiplicative)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Multiplicative.Multiplicative)(f(v));
        };
    };
});
var traversableMaybe = new Traversable(function () {
    return Data_Foldable.foldableMaybe;
}, function () {
    return Data_Maybe.functorMaybe;
}, function (dictApplicative) {
    return function (v) {
        if (v instanceof Data_Maybe.Nothing) {
            return Prelude.pure(dictApplicative)(Data_Maybe.Nothing.value);
        };
        if (v instanceof Data_Maybe.Just) {
            return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe.Just.create)(v.value0);
        };
        throw new Error("Failed pattern match at Data.Traversable line 76, column 1 - line 82, column 1: " + [ v.constructor.name ]);
    };
}, function (dictApplicative) {
    return function (v) {
        return function (v1) {
            if (v1 instanceof Data_Maybe.Nothing) {
                return Prelude.pure(dictApplicative)(Data_Maybe.Nothing.value);
            };
            if (v1 instanceof Data_Maybe.Just) {
                return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe.Just.create)(v(v1.value0));
            };
            throw new Error("Failed pattern match at Data.Traversable line 76, column 1 - line 82, column 1: " + [ v.constructor.name, v1.constructor.name ]);
        };
    };
});
var traversableDual = new Traversable(function () {
    return Data_Foldable.foldableDual;
}, function () {
    return Data_Monoid_Dual.functorDual;
}, function (dictApplicative) {
    return function (v) {
        return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Dual.Dual)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Dual.Dual)(f(v));
        };
    };
});
var traversableDisj = new Traversable(function () {
    return Data_Foldable.foldableDisj;
}, function () {
    return Data_Monoid_Disj.functorDisj;
}, function (dictApplicative) {
    return function (v) {
        return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Disj.Disj)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Disj.Disj)(f(v));
        };
    };
});
var traversableConj = new Traversable(function () {
    return Data_Foldable.foldableConj;
}, function () {
    return Data_Monoid_Conj.functorConj;
}, function (dictApplicative) {
    return function (v) {
        return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Conj.Conj)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Conj.Conj)(f(v));
        };
    };
});
var traversableAdditive = new Traversable(function () {
    return Data_Foldable.foldableAdditive;
}, function () {
    return Data_Monoid_Additive.functorAdditive;
}, function (dictApplicative) {
    return function (v) {
        return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Additive.Additive)(v);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Monoid_Additive.Additive)(f(v));
        };
    };
});
var stateR = function (v) {
    return v;
};
var stateL = function (v) {
    return v;
};
var sequenceDefault = function (dictTraversable) {
    return function (dictApplicative) {
        return function (tma) {
            return traverse(dictTraversable)(dictApplicative)(Prelude.id(Prelude.categoryFn))(tma);
        };
    };
};
var traversableArray = new Traversable(function () {
    return Data_Foldable.foldableArray;
}, function () {
    return Prelude.functorArray;
}, function (dictApplicative) {
    return sequenceDefault(traversableArray)(dictApplicative);
}, function (dictApplicative) {
    return $foreign.traverseArrayImpl(Prelude.apply(dictApplicative["__superclass_Prelude.Apply_0"]()))(Prelude.map((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]()))(Prelude.pure(dictApplicative));
});
var sequence = function (dict) {
    return dict.sequence;
};
var traversableFirst = new Traversable(function () {
    return Data_Foldable.foldableFirst;
}, function () {
    return Data_Maybe_First.functorFirst;
}, function (dictApplicative) {
    return function (v) {
        return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe_First.First)(sequence(traversableMaybe)(dictApplicative)(v));
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe_First.First)(traverse(traversableMaybe)(dictApplicative)(f)(v));
        };
    };
});
var traversableLast = new Traversable(function () {
    return Data_Foldable.foldableLast;
}, function () {
    return Data_Maybe_Last.functorLast;
}, function (dictApplicative) {
    return function (v) {
        return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe_Last.Last)(sequence(traversableMaybe)(dictApplicative)(v));
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe_Last.Last)(traverse(traversableMaybe)(dictApplicative)(f)(v));
        };
    };
});
var traverseDefault = function (dictTraversable) {
    return function (dictApplicative) {
        return function (f) {
            return function (ta) {
                return sequence(dictTraversable)(dictApplicative)(Prelude.map(dictTraversable["__superclass_Prelude.Functor_0"]())(f)(ta));
            };
        };
    };
};
var functorStateR = new Prelude.Functor(function (f) {
    return function (k) {
        return function (s) {
            var $75 = stateR(k)(s);
            return {
                accum: $75.accum, 
                value: f($75.value)
            };
        };
    };
});
var functorStateL = new Prelude.Functor(function (f) {
    return function (k) {
        return function (s) {
            var $78 = stateL(k)(s);
            return {
                accum: $78.accum, 
                value: f($78.value)
            };
        };
    };
});
var $$for = function (dictApplicative) {
    return function (dictTraversable) {
        return function (x) {
            return function (f) {
                return traverse(dictTraversable)(dictApplicative)(f)(x);
            };
        };
    };
};
var applyStateR = new Prelude.Apply(function () {
    return functorStateR;
}, function (f) {
    return function (x) {
        return function (s) {
            var $81 = stateR(x)(s);
            var $82 = stateR(f)($81.accum);
            return {
                accum: $82.accum, 
                value: $82.value($81.value)
            };
        };
    };
});
var applyStateL = new Prelude.Apply(function () {
    return functorStateL;
}, function (f) {
    return function (x) {
        return function (s) {
            var $87 = stateL(f)(s);
            var $88 = stateL(x)($87.accum);
            return {
                accum: $88.accum, 
                value: $87.value($88.value)
            };
        };
    };
});
var applicativeStateR = new Prelude.Applicative(function () {
    return applyStateR;
}, function (a) {
    return function (s) {
        return {
            accum: s, 
            value: a
        };
    };
});
var mapAccumR = function (dictTraversable) {
    return function (f) {
        return function (s0) {
            return function (xs) {
                return stateR(traverse(dictTraversable)(applicativeStateR)(function (a) {
                    return function (s) {
                        return f(s)(a);
                    };
                })(xs))(s0);
            };
        };
    };
};
var scanr = function (dictTraversable) {
    return function (f) {
        return function (b0) {
            return function (xs) {
                return (mapAccumR(dictTraversable)(function (b) {
                    return function (a) {
                        var b$prime = f(a)(b);
                        return {
                            accum: b$prime, 
                            value: b$prime
                        };
                    };
                })(b0)(xs)).value;
            };
        };
    };
};
var applicativeStateL = new Prelude.Applicative(function () {
    return applyStateL;
}, function (a) {
    return function (s) {
        return {
            accum: s, 
            value: a
        };
    };
});
var mapAccumL = function (dictTraversable) {
    return function (f) {
        return function (s0) {
            return function (xs) {
                return stateL(traverse(dictTraversable)(applicativeStateL)(function (a) {
                    return function (s) {
                        return f(s)(a);
                    };
                })(xs))(s0);
            };
        };
    };
};
var scanl = function (dictTraversable) {
    return function (f) {
        return function (b0) {
            return function (xs) {
                return (mapAccumL(dictTraversable)(function (b) {
                    return function (a) {
                        var b$prime = f(b)(a);
                        return {
                            accum: b$prime, 
                            value: b$prime
                        };
                    };
                })(b0)(xs)).value;
            };
        };
    };
};
module.exports = {
    Traversable: Traversable, 
    mapAccumR: mapAccumR, 
    mapAccumL: mapAccumL, 
    scanr: scanr, 
    scanl: scanl, 
    "for": $$for, 
    sequenceDefault: sequenceDefault, 
    traverseDefault: traverseDefault, 
    sequence: sequence, 
    traverse: traverse, 
    traversableArray: traversableArray, 
    traversableMaybe: traversableMaybe, 
    traversableFirst: traversableFirst, 
    traversableLast: traversableLast, 
    traversableAdditive: traversableAdditive, 
    traversableDual: traversableDual, 
    traversableConj: traversableConj, 
    traversableDisj: traversableDisj, 
    traversableMultiplicative: traversableMultiplicative
};

},{"./foreign":"/Users/gene/Programming/pure_morph/output/Data.Traversable/foreign.js","Data.Foldable":"/Users/gene/Programming/pure_morph/output/Data.Foldable/index.js","Data.Maybe":"/Users/gene/Programming/pure_morph/output/Data.Maybe/index.js","Data.Maybe.First":"/Users/gene/Programming/pure_morph/output/Data.Maybe.First/index.js","Data.Maybe.Last":"/Users/gene/Programming/pure_morph/output/Data.Maybe.Last/index.js","Data.Monoid.Additive":"/Users/gene/Programming/pure_morph/output/Data.Monoid.Additive/index.js","Data.Monoid.Conj":"/Users/gene/Programming/pure_morph/output/Data.Monoid.Conj/index.js","Data.Monoid.Disj":"/Users/gene/Programming/pure_morph/output/Data.Monoid.Disj/index.js","Data.Monoid.Dual":"/Users/gene/Programming/pure_morph/output/Data.Monoid.Dual/index.js","Data.Monoid.Multiplicative":"/Users/gene/Programming/pure_morph/output/Data.Monoid.Multiplicative/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Data.Tuple/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Biapplicative = require("Control.Biapplicative");
var Control_Biapply = require("Control.Biapply");
var Control_Comonad = require("Control.Comonad");
var Control_Extend = require("Control.Extend");
var Control_Lazy = require("Control.Lazy");
var Data_Bifoldable = require("Data.Bifoldable");
var Data_Bifunctor = require("Data.Bifunctor");
var Data_Bitraversable = require("Data.Bitraversable");
var Data_Foldable = require("Data.Foldable");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Data_Maybe = require("Data.Maybe");
var Data_Maybe_First = require("Data.Maybe.First");
var Data_Monoid = require("Data.Monoid");
var Data_Traversable = require("Data.Traversable");
var Tuple = (function () {
    function Tuple(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Tuple.create = function (value0) {
        return function (value1) {
            return new Tuple(value0, value1);
        };
    };
    return Tuple;
})();
var uncurry = function (f) {
    return function (v) {
        return f(v.value0)(v.value1);
    };
};
var swap = function (v) {
    return new Tuple(v.value1, v.value0);
};
var snd = function (v) {
    return v.value1;
};
var showTuple = function (dictShow) {
    return function (dictShow1) {
        return new Prelude.Show(function (v) {
            return "Tuple (" + (Prelude.show(dictShow)(v.value0) + (") (" + (Prelude.show(dictShow1)(v.value1) + ")")));
        });
    };
};
var semiringTuple = function (dictSemiring) {
    return function (dictSemiring1) {
        return new Prelude.Semiring(function (v) {
            return function (v1) {
                return new Tuple(Prelude.add(dictSemiring)(v.value0)(v1.value0), Prelude.add(dictSemiring1)(v.value1)(v1.value1));
            };
        }, function (v) {
            return function (v1) {
                return new Tuple(Prelude.mul(dictSemiring)(v.value0)(v1.value0), Prelude.mul(dictSemiring1)(v.value1)(v1.value1));
            };
        }, new Tuple(Prelude.one(dictSemiring), Prelude.one(dictSemiring1)), new Tuple(Prelude.zero(dictSemiring), Prelude.zero(dictSemiring1)));
    };
};
var semigroupoidTuple = new Prelude.Semigroupoid(function (v) {
    return function (v1) {
        return new Tuple(v1.value0, v.value1);
    };
});
var semigroupTuple = function (dictSemigroup) {
    return function (dictSemigroup1) {
        return new Prelude.Semigroup(function (v) {
            return function (v1) {
                return new Tuple(Prelude["<>"](dictSemigroup)(v.value0)(v1.value0), Prelude["<>"](dictSemigroup1)(v.value1)(v1.value1));
            };
        });
    };
};
var ringTuple = function (dictRing) {
    return function (dictRing1) {
        return new Prelude.Ring(function () {
            return semiringTuple(dictRing["__superclass_Prelude.Semiring_0"]())(dictRing1["__superclass_Prelude.Semiring_0"]());
        }, function (v) {
            return function (v1) {
                return new Tuple(Prelude.sub(dictRing)(v.value0)(v1.value0), Prelude.sub(dictRing1)(v.value1)(v1.value1));
            };
        });
    };
};
var monoidTuple = function (dictMonoid) {
    return function (dictMonoid1) {
        return new Data_Monoid.Monoid(function () {
            return semigroupTuple(dictMonoid["__superclass_Prelude.Semigroup_0"]())(dictMonoid1["__superclass_Prelude.Semigroup_0"]());
        }, new Tuple(Data_Monoid.mempty(dictMonoid), Data_Monoid.mempty(dictMonoid1)));
    };
};
var moduloSemiringTuple = function (dictModuloSemiring) {
    return function (dictModuloSemiring1) {
        return new Prelude.ModuloSemiring(function () {
            return semiringTuple(dictModuloSemiring["__superclass_Prelude.Semiring_0"]())(dictModuloSemiring1["__superclass_Prelude.Semiring_0"]());
        }, function (v) {
            return function (v1) {
                return new Tuple(Prelude.div(dictModuloSemiring)(v.value0)(v1.value0), Prelude.div(dictModuloSemiring1)(v.value1)(v1.value1));
            };
        }, function (v) {
            return function (v1) {
                return new Tuple(Prelude.mod(dictModuloSemiring)(v.value0)(v1.value0), Prelude.mod(dictModuloSemiring1)(v.value1)(v1.value1));
            };
        });
    };
};
var lookup = function (dictFoldable) {
    return function (dictEq) {
        return function (a) {
            return function (f) {
                return Data_Maybe_First.runFirst(Data_Foldable.foldMap(dictFoldable)(Data_Maybe_First.monoidFirst)(function (v) {
                    var $145 = Prelude["=="](dictEq)(a)(v.value0);
                    if ($145) {
                        return new Data_Maybe.Just(v.value1);
                    };
                    if (!$145) {
                        return Data_Maybe.Nothing.value;
                    };
                    throw new Error("Failed pattern match at Data.Tuple line 173, column 1 - line 174, column 1: " + [ $145.constructor.name ]);
                })(f));
            };
        };
    };
};
var functorTuple = new Prelude.Functor(function (f) {
    return function (v) {
        return new Tuple(v.value0, f(v.value1));
    };
});
var invariantTuple = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorTuple));
var fst = function (v) {
    return v.value0;
};
var lazyTuple = function (dictLazy) {
    return function (dictLazy1) {
        return new Control_Lazy.Lazy(function (f) {
            return new Tuple(Control_Lazy.defer(dictLazy)(function (v) {
                return fst(f(Prelude.unit));
            }), Control_Lazy.defer(dictLazy1)(function (v) {
                return snd(f(Prelude.unit));
            }));
        });
    };
};
var foldableTuple = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
        return function (v) {
            return f(v.value1);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(z)(v.value1);
        };
    };
}, function (f) {
    return function (z) {
        return function (v) {
            return f(v.value1)(z);
        };
    };
});
var traversableTuple = new Data_Traversable.Traversable(function () {
    return foldableTuple;
}, function () {
    return functorTuple;
}, function (dictApplicative) {
    return function (v) {
        return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Tuple.create(v.value0))(v.value1);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (v) {
            return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Tuple.create(v.value0))(f(v.value1));
        };
    };
});
var extendTuple = new Control_Extend.Extend(function () {
    return functorTuple;
}, function (f) {
    return function (v) {
        return new Tuple(v.value0, f(v));
    };
});
var eqTuple = function (dictEq) {
    return function (dictEq1) {
        return new Prelude.Eq(function (v) {
            return function (v1) {
                return Prelude["=="](dictEq)(v.value0)(v1.value0) && Prelude["=="](dictEq1)(v.value1)(v1.value1);
            };
        });
    };
};
var ordTuple = function (dictOrd) {
    return function (dictOrd1) {
        return new Prelude.Ord(function () {
            return eqTuple(dictOrd["__superclass_Prelude.Eq_0"]())(dictOrd1["__superclass_Prelude.Eq_0"]());
        }, function (v) {
            return function (v1) {
                var $190 = Prelude.compare(dictOrd)(v.value0)(v1.value0);
                if ($190 instanceof Prelude.EQ) {
                    return Prelude.compare(dictOrd1)(v.value1)(v1.value1);
                };
                return $190;
            };
        });
    };
};
var divisionRingTuple = function (dictDivisionRing) {
    return function (dictDivisionRing1) {
        return new Prelude.DivisionRing(function () {
            return moduloSemiringTuple(dictDivisionRing["__superclass_Prelude.ModuloSemiring_1"]())(dictDivisionRing1["__superclass_Prelude.ModuloSemiring_1"]());
        }, function () {
            return ringTuple(dictDivisionRing["__superclass_Prelude.Ring_0"]())(dictDivisionRing1["__superclass_Prelude.Ring_0"]());
        });
    };
};
var numTuple = function (dictNum) {
    return function (dictNum1) {
        return new Prelude.Num(function () {
            return divisionRingTuple(dictNum["__superclass_Prelude.DivisionRing_0"]())(dictNum1["__superclass_Prelude.DivisionRing_0"]());
        });
    };
};
var curry = function (f) {
    return function (a) {
        return function (b) {
            return f(new Tuple(a, b));
        };
    };
};
var comonadTuple = new Control_Comonad.Comonad(function () {
    return extendTuple;
}, snd);
var boundedTuple = function (dictBounded) {
    return function (dictBounded1) {
        return new Prelude.Bounded(new Tuple(Prelude.bottom(dictBounded), Prelude.bottom(dictBounded1)), new Tuple(Prelude.top(dictBounded), Prelude.top(dictBounded1)));
    };
};
var boundedOrdTuple = function (dictBoundedOrd) {
    return function (dictBoundedOrd1) {
        return new Prelude.BoundedOrd(function () {
            return boundedTuple(dictBoundedOrd["__superclass_Prelude.Bounded_0"]())(dictBoundedOrd1["__superclass_Prelude.Bounded_0"]());
        }, function () {
            return ordTuple(dictBoundedOrd["__superclass_Prelude.Ord_1"]())(dictBoundedOrd1["__superclass_Prelude.Ord_1"]());
        });
    };
};
var booleanAlgebraTuple = function (dictBooleanAlgebra) {
    return function (dictBooleanAlgebra1) {
        return new Prelude.BooleanAlgebra(function () {
            return boundedTuple(dictBooleanAlgebra["__superclass_Prelude.Bounded_0"]())(dictBooleanAlgebra1["__superclass_Prelude.Bounded_0"]());
        }, function (v) {
            return function (v1) {
                return new Tuple(Prelude.conj(dictBooleanAlgebra)(v.value0)(v1.value0), Prelude.conj(dictBooleanAlgebra1)(v.value1)(v1.value1));
            };
        }, function (v) {
            return function (v1) {
                return new Tuple(Prelude.disj(dictBooleanAlgebra)(v.value0)(v1.value0), Prelude.disj(dictBooleanAlgebra1)(v.value1)(v1.value1));
            };
        }, function (v) {
            return new Tuple(Prelude.not(dictBooleanAlgebra)(v.value0), Prelude.not(dictBooleanAlgebra1)(v.value1));
        });
    };
};
var bifunctorTuple = new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
        return function (v) {
            return new Tuple(f(v.value0), g(v.value1));
        };
    };
});
var bifoldableTuple = new Data_Bifoldable.Bifoldable(function (dictMonoid) {
    return function (f) {
        return function (g) {
            return function (v) {
                return Prelude["<>"](dictMonoid["__superclass_Prelude.Semigroup_0"]())(f(v.value0))(g(v.value1));
            };
        };
    };
}, function (f) {
    return function (g) {
        return function (z) {
            return function (v) {
                return g(f(z)(v.value0))(v.value1);
            };
        };
    };
}, function (f) {
    return function (g) {
        return function (z) {
            return function (v) {
                return f(v.value0)(g(v.value1)(z));
            };
        };
    };
});
var bitraversableTuple = new Data_Bitraversable.Bitraversable(function () {
    return bifoldableTuple;
}, function () {
    return bifunctorTuple;
}, function (dictApplicative) {
    return function (v) {
        return Prelude["<*>"](dictApplicative["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Tuple.create)(v.value0))(v.value1);
    };
}, function (dictApplicative) {
    return function (f) {
        return function (g) {
            return function (v) {
                return Prelude["<*>"](dictApplicative["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Tuple.create)(f(v.value0)))(g(v.value1));
            };
        };
    };
});
var biapplyTuple = new Control_Biapply.Biapply(function () {
    return bifunctorTuple;
}, function (v) {
    return function (v1) {
        return new Tuple(v.value0(v1.value0), v.value1(v1.value1));
    };
});
var biapplicativeTuple = new Control_Biapplicative.Biapplicative(function () {
    return biapplyTuple;
}, Tuple.create);
var applyTuple = function (dictSemigroup) {
    return new Prelude.Apply(function () {
        return functorTuple;
    }, function (v) {
        return function (v1) {
            return new Tuple(Prelude["<>"](dictSemigroup)(v.value0)(v1.value0), v.value1(v1.value1));
        };
    });
};
var bindTuple = function (dictSemigroup) {
    return new Prelude.Bind(function () {
        return applyTuple(dictSemigroup);
    }, function (v) {
        return function (f) {
            var $254 = f(v.value1);
            return new Tuple(Prelude["<>"](dictSemigroup)(v.value0)($254.value0), $254.value1);
        };
    });
};
var applicativeTuple = function (dictMonoid) {
    return new Prelude.Applicative(function () {
        return applyTuple(dictMonoid["__superclass_Prelude.Semigroup_0"]());
    }, Tuple.create(Data_Monoid.mempty(dictMonoid)));
};
var monadTuple = function (dictMonoid) {
    return new Prelude.Monad(function () {
        return applicativeTuple(dictMonoid);
    }, function () {
        return bindTuple(dictMonoid["__superclass_Prelude.Semigroup_0"]());
    });
};
module.exports = {
    Tuple: Tuple, 
    lookup: lookup, 
    swap: swap, 
    uncurry: uncurry, 
    curry: curry, 
    snd: snd, 
    fst: fst, 
    showTuple: showTuple, 
    eqTuple: eqTuple, 
    ordTuple: ordTuple, 
    boundedTuple: boundedTuple, 
    boundedOrdTuple: boundedOrdTuple, 
    semigroupoidTuple: semigroupoidTuple, 
    semigroupTuple: semigroupTuple, 
    monoidTuple: monoidTuple, 
    semiringTuple: semiringTuple, 
    moduloSemiringTuple: moduloSemiringTuple, 
    ringTuple: ringTuple, 
    divisionRingTuple: divisionRingTuple, 
    numTuple: numTuple, 
    booleanAlgebraTuple: booleanAlgebraTuple, 
    functorTuple: functorTuple, 
    invariantTuple: invariantTuple, 
    bifunctorTuple: bifunctorTuple, 
    applyTuple: applyTuple, 
    biapplyTuple: biapplyTuple, 
    applicativeTuple: applicativeTuple, 
    biapplicativeTuple: biapplicativeTuple, 
    bindTuple: bindTuple, 
    monadTuple: monadTuple, 
    extendTuple: extendTuple, 
    comonadTuple: comonadTuple, 
    lazyTuple: lazyTuple, 
    foldableTuple: foldableTuple, 
    bifoldableTuple: bifoldableTuple, 
    traversableTuple: traversableTuple, 
    bitraversableTuple: bitraversableTuple
};

},{"Control.Biapplicative":"/Users/gene/Programming/pure_morph/output/Control.Biapplicative/index.js","Control.Biapply":"/Users/gene/Programming/pure_morph/output/Control.Biapply/index.js","Control.Comonad":"/Users/gene/Programming/pure_morph/output/Control.Comonad/index.js","Control.Extend":"/Users/gene/Programming/pure_morph/output/Control.Extend/index.js","Control.Lazy":"/Users/gene/Programming/pure_morph/output/Control.Lazy/index.js","Data.Bifoldable":"/Users/gene/Programming/pure_morph/output/Data.Bifoldable/index.js","Data.Bifunctor":"/Users/gene/Programming/pure_morph/output/Data.Bifunctor/index.js","Data.Bitraversable":"/Users/gene/Programming/pure_morph/output/Data.Bitraversable/index.js","Data.Foldable":"/Users/gene/Programming/pure_morph/output/Data.Foldable/index.js","Data.Functor.Invariant":"/Users/gene/Programming/pure_morph/output/Data.Functor.Invariant/index.js","Data.Maybe":"/Users/gene/Programming/pure_morph/output/Data.Maybe/index.js","Data.Maybe.First":"/Users/gene/Programming/pure_morph/output/Data.Maybe.First/index.js","Data.Monoid":"/Users/gene/Programming/pure_morph/output/Data.Monoid/index.js","Data.Traversable":"/Users/gene/Programming/pure_morph/output/Data.Traversable/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Data.TypedArray/foreign.js":[function(require,module,exports){
/* global exports */

// module Data.TypedArray


    "use strict";

    // conversion from and to typed arrays
    exports.asInt8Array = function(array)
        {var res = new Int8Array(array);
         return res;};

    exports.asUint8Array = function (array)
        {var res = new Uint8Array(array);
         return res;};

    exports.asUint8ClampedArray = function (array)
        {var res = new Uint8ClampedArray(array);
         return res;};

    exports.asInt16Array = function (array)
        {var res = new Int16Array (array);
         return res;};

    exports.asUint16Array = function (array)
        {var res = new Uint16Array (array);
         return res;};

    exports.asInt32Array = function (array)
        {var res = new Int32Array (array);
         return res;};

    exports.asUint32Array = function (array)
        {var res = new Uint32Array (array);
         return res;};

    exports.asFloat32Array = function (array)
        {var res = new Float32Array (array);
         return res;};

    exports.asFloat64Array = function (array)
        {var res = new Float64Array (array);
         return res;};

    exports.asArray = function (arrayBuffer)
        {var res = Array.prototype.slice.call(arrayBuffer);
         return res;};

    exports.length = function (arrayBuffer)
        {return arrayBuffer.length;};

    exports.byteLength = function (arrayBuffer)
        {return arrayBuffer.byteLength;};

    exports.insertAt = function (index) {
        return function (a) {
          return function (l) {
            var l1 = l.slice();
            l1.splice(index, 0, a);
            return l1;
          };
        };
    };

    exports.unsafeIndex = function (xs) {
        return function(n) {
          return xs[n];
        };
    };

},{}],"/Users/gene/Programming/pure_morph/output/Data.TypedArray/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var $foreign = require("./foreign");
var Data_ArrayBuffer_Types = require("Data.ArrayBuffer.Types");
var Data_Maybe = require("Data.Maybe");
var Prelude = require("Prelude");
var $bang$bang = function (xs) {
    return function (n) {
        var $0 = n < 0 || n >= $foreign.length(xs);
        if ($0) {
            return Data_Maybe.Nothing.value;
        };
        if (!$0) {
            return new Data_Maybe.Just($foreign.unsafeIndex(xs)(n));
        };
        throw new Error("Failed pattern match at Data.TypedArray line 51, column 1 - line 52, column 1: " + [ $0.constructor.name ]);
    };
};
module.exports = {
    "!!": $bang$bang, 
    unsafeIndex: $foreign.unsafeIndex, 
    insertAt: $foreign.insertAt, 
    byteLength: $foreign.byteLength, 
    length: $foreign.length, 
    asArray: $foreign.asArray, 
    asFloat64Array: $foreign.asFloat64Array, 
    asFloat32Array: $foreign.asFloat32Array, 
    asUint32Array: $foreign.asUint32Array, 
    asInt32Array: $foreign.asInt32Array, 
    asUint16Array: $foreign.asUint16Array, 
    asInt16Array: $foreign.asInt16Array, 
    asUint8ClampedArray: $foreign.asUint8ClampedArray, 
    asUint8Array: $foreign.asUint8Array, 
    asInt8Array: $foreign.asInt8Array
};

},{"./foreign":"/Users/gene/Programming/pure_morph/output/Data.TypedArray/foreign.js","Data.ArrayBuffer.Types":"/Users/gene/Programming/pure_morph/output/Data.ArrayBuffer.Types/index.js","Data.Maybe":"/Users/gene/Programming/pure_morph/output/Data.Maybe/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Data.Unfoldable/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Tuple = require("Data.Tuple");
var Data_Array_ST = require("Data.Array.ST");
var Data_Traversable = require("Data.Traversable");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Control_Monad_ST = require("Control.Monad.ST");
var Unfoldable = function (unfoldr) {
    this.unfoldr = unfoldr;
};
var unfoldr = function (dict) {
    return dict.unfoldr;
};
var unfoldableArray = new Unfoldable(function (f) {
    return function (b) {
        return Control_Monad_Eff.runPure(Data_Array_ST.runSTArray(function __do() {
            var v = Data_Array_ST.emptySTArray();
            var v1 = Control_Monad_ST.newSTRef(b)();
            (function () {
                while (!(function __do() {
                    var v2 = Control_Monad_ST.readSTRef(v1)();
                    var $12 = f(v2);
                    if ($12 instanceof Data_Maybe.Nothing) {
                        return true;
                    };
                    if ($12 instanceof Data_Maybe.Just) {
                        Data_Array_ST.pushSTArray(v)($12.value0.value0)();
                        Control_Monad_ST.writeSTRef(v1)($12.value0.value1)();
                        return false;
                    };
                    throw new Error("Failed pattern match at Data.Unfoldable line 29, column 1 - line 49, column 1: " + [ $12.constructor.name ]);
                })()) {

                };
                return {};
            })();
            return v;
        }));
    };
});
var replicate = function (dictUnfoldable) {
    return function (n) {
        return function (v) {
            var step = function (i) {
                var $16 = i <= 0;
                if ($16) {
                    return Data_Maybe.Nothing.value;
                };
                if (!$16) {
                    return new Data_Maybe.Just(new Data_Tuple.Tuple(v, i - 1));
                };
                throw new Error("Failed pattern match at Data.Unfoldable line 52, column 5 - line 53, column 5: " + [ $16.constructor.name ]);
            };
            return unfoldr(dictUnfoldable)(step)(n);
        };
    };
};
var replicateA = function (dictApplicative) {
    return function (dictUnfoldable) {
        return function (dictTraversable) {
            return function (n) {
                return function (m) {
                    return Data_Traversable.sequence(dictTraversable)(dictApplicative)(replicate(dictUnfoldable)(n)(m));
                };
            };
        };
    };
};
var singleton = function (dictUnfoldable) {
    return replicate(dictUnfoldable)(1);
};
var none = function (dictUnfoldable) {
    return unfoldr(dictUnfoldable)(Prelude["const"](Data_Maybe.Nothing.value))(Prelude.unit);
};
module.exports = {
    Unfoldable: Unfoldable, 
    singleton: singleton, 
    none: none, 
    replicateA: replicateA, 
    replicate: replicate, 
    unfoldr: unfoldr, 
    unfoldableArray: unfoldableArray
};

},{"Control.Monad.Eff":"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff/index.js","Control.Monad.ST":"/Users/gene/Programming/pure_morph/output/Control.Monad.ST/index.js","Data.Array.ST":"/Users/gene/Programming/pure_morph/output/Data.Array.ST/index.js","Data.Maybe":"/Users/gene/Programming/pure_morph/output/Data.Maybe/index.js","Data.Traversable":"/Users/gene/Programming/pure_morph/output/Data.Traversable/index.js","Data.Tuple":"/Users/gene/Programming/pure_morph/output/Data.Tuple/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Engine/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Tuple = require("Data.Tuple");
var Data_Maybe = require("Data.Maybe");
var Data_Either = require("Data.Either");
var Data_Array = require("Data.Array");
var Data_TypedArray = require("Data.TypedArray");
var Data_Int = require("Data.Int");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Control_Monad_Eff_Class = require("Control.Monad.Eff.Class");
var Control_Monad_Error_Class = require("Control.Monad.Error.Class");
var Control_Monad_Except_Trans = require("Control.Monad.Except.Trans");
var Control_Monad_Reader_Trans = require("Control.Monad.Reader.Trans");
var Control_Monad_Reader_Class = require("Control.Monad.Reader.Class");
var Control_Monad_ST = require("Control.Monad.ST");
var Graphics_WebGL = require("Graphics.WebGL");
var Graphics_WebGL_Types = require("Graphics.WebGL.Types");
var Graphics_WebGL_Raw = require("Graphics.WebGL.Raw");
var Graphics_WebGL_Raw_Enums = require("Graphics.WebGL.Raw.Enums");
var Graphics_WebGL_Raw_Types = require("Graphics.WebGL.Raw.Types");
var Graphics_WebGL_Context = require("Graphics.WebGL.Context");
var Graphics_WebGL_Shader = require("Graphics.WebGL.Shader");
var Graphics_WebGL_Methods = require("Graphics.WebGL.Methods");
var Graphics_Canvas = require("Graphics.Canvas");
var Config = require("Config");
var JSUtil = require("JSUtil");
var Control_Monad_Trans = require("Control.Monad.Trans");
var initTex = function (dim) {
    return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadReaderReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff))))(function (v) {
        return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Graphics_WebGL_Methods.createTexture)(function (v1) {
            return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Graphics_WebGL_Methods.createFramebuffer)(function (v2) {
                return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(Graphics_WebGL_Raw.bindTexture(v)(Graphics_WebGL_Raw_Enums.texture2d)(v1)))(function () {
                    return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(Graphics_WebGL_Raw.texParameteri(v)(Graphics_WebGL_Raw_Enums.texture2d)(Graphics_WebGL_Raw_Enums.textureWrapS)(Graphics_WebGL_Raw_Enums.clampToEdge)))(function () {
                        return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(Graphics_WebGL_Raw.texParameteri(v)(Graphics_WebGL_Raw_Enums.texture2d)(Graphics_WebGL_Raw_Enums.textureWrapT)(Graphics_WebGL_Raw_Enums.clampToEdge)))(function () {
                            return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(Graphics_WebGL_Raw.texParameteri(v)(Graphics_WebGL_Raw_Enums.texture2d)(Graphics_WebGL_Raw_Enums.textureMinFilter)(Graphics_WebGL_Raw_Enums.linear)))(function () {
                                return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(Graphics_WebGL_Raw.texParameteri(v)(Graphics_WebGL_Raw_Enums.texture2d)(Graphics_WebGL_Raw_Enums.textureMagFilter)(Graphics_WebGL_Raw_Enums.linear)))(function () {
                                    return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(Graphics_WebGL_Raw.texImage2D_(v)(Graphics_WebGL_Raw_Enums.texture2d)(0)(Graphics_WebGL_Raw_Enums.rgba)(dim)(dim)(0)(Graphics_WebGL_Raw_Enums.rgba)(Graphics_WebGL_Raw_Enums.unsignedByte)(JSUtil.unsafeNull)))(function () {
                                        return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(Graphics_WebGL_Raw.bindFramebuffer(v)(Graphics_WebGL_Raw_Enums.framebuffer)(v2)))(function () {
                                            return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(Graphics_WebGL_Raw.framebufferTexture2D(v)(Graphics_WebGL_Raw_Enums.framebuffer)(Graphics_WebGL_Raw_Enums.colorAttachment0)(Graphics_WebGL_Raw_Enums.texture2d)(v1)(0)))(function () {
                                                return Prelude["return"](Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_Eff.applicativeEff)))(new Data_Tuple.Tuple(v1, v2));
                                            });
                                        });
                                    });
                                });
                            });
                        });
                    });
                });
            });
        });
    });
};
var initShaders = function (pattern) {
    return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Trans.lift(Control_Monad_Reader_Trans.monadTransReaderT)(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff))(Control_Monad_Trans.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_Eff.monadEff)(JSUtil.unsafeURLGet("/shaders/basic.vert.glsl"))))(function (v) {
        return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Trans.lift(Control_Monad_Reader_Trans.monadTransReaderT)(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff))(Control_Monad_Trans.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_Eff.monadEff)(JSUtil.unsafeURLGet("/shaders/main.frag.glsl"))))(function (v1) {
            return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Trans.lift(Control_Monad_Reader_Trans.monadTransReaderT)(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff))(Control_Monad_Trans.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_Eff.monadEff)(JSUtil.unsafeURLGet("/shaders/display.frag.glsl"))))(function (v2) {
                return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Graphics_WebGL_Shader.compileShadersIntoProgram(v)(v1))(function (v3) {
                    return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Graphics_WebGL_Shader.compileShadersIntoProgram(v)(v2))(function (v4) {
                        return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Graphics_WebGL_Shader.getAttrBindings(v4))(function (v5) {
                            return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Graphics_WebGL_Shader.getAttrBindings(v3))(function (v6) {
                                return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Graphics_WebGL_Methods.createBuffer)(function (v7) {
                                    return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Graphics_WebGL_Methods.bindBuffer((Graphics_WebGL_Types["ArrayBuffer"]).value)(v7))(function () {
                                        return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Graphics_WebGL_Methods.bufferData((Graphics_WebGL_Types["ArrayBuffer"]).value)(new Graphics_WebGL_Types.DataSource(Data_TypedArray.asFloat32Array([ -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0 ])))(Graphics_WebGL_Types.StaticDraw.value))(function () {
                                            return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Graphics_WebGL_Methods.enableVertexAttribArray(v6.a_position))(function () {
                                                return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Graphics_WebGL_Methods.vertexAttribPointer(v6.a_position)(2)(Graphics_WebGL_Types.Float.value)(false)(0)(0))(function () {
                                                    return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Graphics_WebGL_Methods.enableVertexAttribArray(v5.a_position))(function () {
                                                        return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Graphics_WebGL_Methods.vertexAttribPointer(v5.a_position)(2)(Graphics_WebGL_Types.Float.value)(false)(0)(0))(function () {
                                                            return Prelude["return"](Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_Eff.applicativeEff)))(new Data_Tuple.Tuple(v3, v4));
                                                        });
                                                    });
                                                });
                                            });
                                        });
                                    });
                                });
                            });
                        });
                    });
                });
            });
        });
    });
};
var execGL = function (ctx) {
    return function (webGL) {
        return Prelude.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Eff.monadEff))(Control_Monad_Trans.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_Eff.monadEff)(Graphics_WebGL.runWebgl(webGL)(ctx)))(function (v) {
            if (v instanceof Data_Either.Left) {
                return Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadErrorExceptT(Control_Monad_Eff.monadEff))(Prelude.show(Graphics_WebGL_Types.showWebGLError)(v.value0));
            };
            if (v instanceof Data_Either.Right) {
                return Prelude["return"](Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_Eff.applicativeEff))(v.value0);
            };
            throw new Error("Failed pattern match at Engine line 145, column 1 - line 146, column 1: " + [ v.constructor.name ]);
        });
    };
};
var initEngineST = function (canvasId) {
    return function (ecRef) {
        return function (pRef) {
            return Prelude.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Eff.monadEff))(Control_Monad_Eff_Class.liftEff(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff))(Graphics_Canvas.getCanvasElementById(canvasId)))(function (v) {
                if (v instanceof Data_Maybe.Just) {
                    return Prelude.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Eff.monadEff))(Control_Monad_Eff_Class.liftEff(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff))(Graphics_WebGL_Context.getWebglContext(v.value0)))(function (v1) {
                        if (v1 instanceof Data_Maybe.Just) {
                            return Prelude.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Eff.monadEff))(Control_Monad_Trans.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_Eff.monadEff)(Control_Monad_ST.readSTRef(ecRef)))(function (v2) {
                                return Prelude.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Eff.monadEff))(Control_Monad_Trans.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_Eff.monadEff)(Control_Monad_ST.readSTRef(pRef)))(function (v3) {
                                    return Prelude.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Eff.monadEff))(Control_Monad_Trans.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_Eff.monadEff)(Graphics_Canvas.setCanvasWidth(Data_Int.toNumber(v2.kernelDim))(v.value0)))(function () {
                                        return Prelude.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Eff.monadEff))(Control_Monad_Trans.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_Eff.monadEff)(Graphics_Canvas.setCanvasHeight(Data_Int.toNumber(v2.kernelDim))(v.value0)))(function () {
                                            return execGL(v1.value0)(Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(initTex(v2.kernelDim))(function (v4) {
                                                return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(initTex(v2.kernelDim))(function (v5) {
                                                    return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(initShaders(v3))(function (v6) {
                                                        return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Graphics_WebGL_Methods.clearColor(0.0)(0.0)(0.0)(1.0))(function () {
                                                            return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(Graphics_WebGL_Raw.clear(v1.value0)(Graphics_WebGL_Raw_Enums.colorBufferBit)))(function () {
                                                                return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(Graphics_WebGL_Raw.viewport(v1.value0)(0)(0)(v2.kernelDim)(v2.kernelDim)))(function () {
                                                                    return Prelude["return"](Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_Eff.applicativeEff)))({
                                                                        displayProg: v6.value1, 
                                                                        mainProg: v6.value0, 
                                                                        tex: new Data_Tuple.Tuple(v4.value0, v5.value0), 
                                                                        fb: new Data_Tuple.Tuple(v4.value1, v5.value1), 
                                                                        ctx: v1.value0
                                                                    });
                                                                });
                                                            });
                                                        });
                                                    });
                                                });
                                            }));
                                        });
                                    });
                                });
                            });
                        };
                        throw new Error("Failed pattern match at Engine line 87, column 1 - line 88, column 1: " + [ v1.constructor.name ]);
                    });
                };
                throw new Error("Failed pattern match at Engine line 87, column 1 - line 88, column 1: " + [ v.constructor.name ]);
            });
        };
    };
};
var render = function (engineConf) {
    return function (engineST) {
        return function (pattern) {
            return function (frameNum) {
                return execGL(engineST.ctx)((function () {
                    var tm = (function () {
                        var $51 = frameNum % 2 === 0;
                        if ($51) {
                            return Data_Tuple.fst(engineST.tex);
                        };
                        if (!$51) {
                            return Data_Tuple.snd(engineST.tex);
                        };
                        throw new Error("Failed pattern match at Engine line 119, column 9 - line 120, column 5: " + [ $51.constructor.name ]);
                    })();
                    var td = (function () {
                        var $52 = frameNum % 2 === 1;
                        if ($52) {
                            return Data_Tuple.fst(engineST.tex);
                        };
                        if (!$52) {
                            return Data_Tuple.snd(engineST.tex);
                        };
                        throw new Error("Failed pattern match at Engine line 120, column 9 - line 121, column 5: " + [ $52.constructor.name ]);
                    })();
                    var fb = (function () {
                        var $53 = frameNum % 2 === 1;
                        if ($53) {
                            return Data_Tuple.fst(engineST.fb);
                        };
                        if (!$53) {
                            return Data_Tuple.snd(engineST.fb);
                        };
                        throw new Error("Failed pattern match at Engine line 121, column 9 - line 124, column 5: " + [ $53.constructor.name ]);
                    })();
                    return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(Graphics_WebGL_Raw.useProgram(engineST.ctx)(engineST.mainProg)))(function () {
                        return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(Graphics_WebGL_Raw.bindTexture(engineST.ctx)(Graphics_WebGL_Raw_Enums.texture2d)(tm)))(function () {
                            return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(Graphics_WebGL_Raw.bindFramebuffer(engineST.ctx)(Graphics_WebGL_Raw_Enums.framebuffer)(fb)))(function () {
                                return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Graphics_WebGL_Shader.getUniformBindings(engineST.mainProg))(function (v) {
                                    return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Graphics_WebGL_Methods.uniform1f(v.kernel_dim)(Data_Int.toNumber(engineConf.kernelDim)))(function () {
                                        return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Graphics_WebGL_Methods.uniform1f(v.time)(pattern.t / 1000.0))(function () {
                                            return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Graphics_WebGL_Methods.drawArrays(Graphics_WebGL_Types.Triangles.value)(0)(6))(function () {
                                                return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(Graphics_WebGL_Raw.useProgram(engineST.ctx)(engineST.displayProg)))(function () {
                                                    return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(Graphics_WebGL_Raw.bindTexture(engineST.ctx)(Graphics_WebGL_Raw_Enums.texture2d)(td)))(function () {
                                                        return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(Graphics_WebGL_Raw.bindFramebuffer(engineST.ctx)(Graphics_WebGL_Raw_Enums.framebuffer)(JSUtil.unsafeNull)))(function () {
                                                            return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Graphics_WebGL_Shader.getUniformBindings(engineST.displayProg))(function (v1) {
                                                                return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Graphics_WebGL_Methods.uniform1f(v1.kernel_dim)(Data_Int.toNumber(engineConf.kernelDim)))(function () {
                                                                    return Graphics_WebGL_Methods.drawArrays(Graphics_WebGL_Types.Triangles.value)(0)(6);
                                                                });
                                                            });
                                                        });
                                                    });
                                                });
                                            });
                                        });
                                    });
                                });
                            });
                        });
                    });
                })());
            };
        };
    };
};
var defaultEngineConf = {
    kernelDim: 1024, 
    fract: 3
};
var loadEngineConf = function (name) {
    return Prelude["return"](Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_Eff.applicativeEff))(defaultEngineConf);
};
module.exports = {
    execGL: execGL, 
    render: render, 
    initEngineST: initEngineST, 
    initShaders: initShaders, 
    initTex: initTex, 
    loadEngineConf: loadEngineConf, 
    defaultEngineConf: defaultEngineConf
};

},{"Config":"/Users/gene/Programming/pure_morph/output/Config/index.js","Control.Monad.Eff":"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff/index.js","Control.Monad.Eff.Class":"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff.Class/index.js","Control.Monad.Error.Class":"/Users/gene/Programming/pure_morph/output/Control.Monad.Error.Class/index.js","Control.Monad.Except.Trans":"/Users/gene/Programming/pure_morph/output/Control.Monad.Except.Trans/index.js","Control.Monad.Reader.Class":"/Users/gene/Programming/pure_morph/output/Control.Monad.Reader.Class/index.js","Control.Monad.Reader.Trans":"/Users/gene/Programming/pure_morph/output/Control.Monad.Reader.Trans/index.js","Control.Monad.ST":"/Users/gene/Programming/pure_morph/output/Control.Monad.ST/index.js","Control.Monad.Trans":"/Users/gene/Programming/pure_morph/output/Control.Monad.Trans/index.js","Data.Array":"/Users/gene/Programming/pure_morph/output/Data.Array/index.js","Data.Either":"/Users/gene/Programming/pure_morph/output/Data.Either/index.js","Data.Int":"/Users/gene/Programming/pure_morph/output/Data.Int/index.js","Data.Maybe":"/Users/gene/Programming/pure_morph/output/Data.Maybe/index.js","Data.Tuple":"/Users/gene/Programming/pure_morph/output/Data.Tuple/index.js","Data.TypedArray":"/Users/gene/Programming/pure_morph/output/Data.TypedArray/index.js","Graphics.Canvas":"/Users/gene/Programming/pure_morph/output/Graphics.Canvas/index.js","Graphics.WebGL":"/Users/gene/Programming/pure_morph/output/Graphics.WebGL/index.js","Graphics.WebGL.Context":"/Users/gene/Programming/pure_morph/output/Graphics.WebGL.Context/index.js","Graphics.WebGL.Methods":"/Users/gene/Programming/pure_morph/output/Graphics.WebGL.Methods/index.js","Graphics.WebGL.Raw":"/Users/gene/Programming/pure_morph/output/Graphics.WebGL.Raw/index.js","Graphics.WebGL.Raw.Enums":"/Users/gene/Programming/pure_morph/output/Graphics.WebGL.Raw.Enums/index.js","Graphics.WebGL.Raw.Types":"/Users/gene/Programming/pure_morph/output/Graphics.WebGL.Raw.Types/index.js","Graphics.WebGL.Shader":"/Users/gene/Programming/pure_morph/output/Graphics.WebGL.Shader/index.js","Graphics.WebGL.Types":"/Users/gene/Programming/pure_morph/output/Graphics.WebGL.Types/index.js","JSUtil":"/Users/gene/Programming/pure_morph/output/JSUtil/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Graphics.Canvas/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Graphics.Canvas

exports.canvasElementToImageSource = function(e) {
    return e;
};

exports.withImage = function (src) {
  return function(f) {
        return function () {
            var img = new Image();
            img.src = src;
            img.addEventListener("load", function() {
                f(img)();
            }, false);

            return {};
        }
    };
};

exports.getCanvasElementByIdImpl = function(id, Just, Nothing) {
    return function() {
        var el = document.getElementById(id);
        if (el && el instanceof HTMLCanvasElement) {
            return Just(el);
        } else {
            return Nothing;
        }
    };
};

exports.getContext2D = function(c) {
    return function() {
        return c.getContext('2d');
    };
};

exports.getCanvasWidth = function(canvas) {
    return function() {
        return canvas.width;
    };
};

exports.getCanvasHeight = function(canvas) {
    return function() {
        return canvas.height;
    };
};

exports.setCanvasWidth = function(width) {
    return function(canvas) {
        return function() {
            canvas.width = width;
            return canvas;
        };
    };
};

exports.setCanvasHeight = function(height) {
    return function(canvas) {
        return function() {
            canvas.height = height;
            return canvas;
        };
    };
};

exports.canvasToDataURL = function(canvas) {
    return function() {
        return canvas.toDataURL();
    };
};

exports.setLineWidth = function(width) {
    return function(ctx) {
        return function() {
            ctx.lineWidth = width;
            return ctx;
        };
    };
};

exports.setFillStyle = function(style) {
    return function(ctx) {
        return function() {
            ctx.fillStyle = style;
            return ctx;
        };
    };
};

exports.setStrokeStyle = function(style) {
    return function(ctx) {
        return function() {
            ctx.strokeStyle = style;
            return ctx;
        };
    };
};

exports.setShadowColor = function(color) {
    return function(ctx) {
        return function() {
            ctx.shadowColor = color;
            return ctx;
        };
    };
};

exports.setShadowBlur = function(blur) {
    return function(ctx) {
        return function() {
            ctx.shadowBlur = blur;
            return ctx;
        };
    };
};

exports.setShadowOffsetX = function(offsetX) {
    return function(ctx) {
        return function() {
            ctx.shadowOffsetX = offsetX;
            return ctx;
        };
    };
};

exports.setShadowOffsetY = function(offsetY) {
    return function(ctx) {
        return function() {
            ctx.shadowOffsetY = offsetY;
            return ctx;
        };
    };
};

exports.setLineCapImpl = function(cap) {
    return function(ctx) {
        return function() {
            ctx.lineCap = cap;
            return ctx;
        };
    };
};

exports.setGlobalCompositeOperationImpl = function(ctx) {
    return function(op) {
        return function() {
            ctx.globalCompositeOperation = op;
            return ctx;
        };
    };
};

exports.setGlobalAlpha = function(ctx) {
    return function(alpha) {
        return function() {
            ctx.setGlobalAlpha = alpha;
            return ctx;
        };
    };
};

exports.beginPath = function(ctx) {
    return function() {
        ctx.beginPath();
        return ctx;
    };
};

exports.stroke = function(ctx) {
    return function() {
        ctx.stroke();
        return ctx;
    };
};

exports.fill = function(ctx) {
    return function() {
        ctx.fill();
        return ctx;
    };
};

exports.clip = function(ctx) {
    return function() {
        ctx.clip();
        return ctx;
    };
};

exports.lineTo = function(ctx) {
    return function(x) {
        return function(y) {
            return function() {
                ctx.lineTo(x, y);
                return ctx;
            };
        };
    };
};

exports.moveTo = function(ctx) {
    return function(x) {
        return function(y) {
            return function() {
                ctx.moveTo(x, y);
                return ctx;
            };
        };
    };
};

exports.closePath = function(ctx) {
    return function() {
        ctx.closePath();
        return ctx;
    };
};

exports.arc = function(ctx) {
    return function(a) {
        return function() {
            ctx.arc(a.x, a.y, a.r, a.start, a.end);
            return ctx;
        };
    };
};

exports.rect = function(ctx) {
    return function(r) {
        return function() {
            ctx.rect(r.x, r.y, r.w, r.h);
            return ctx;
        };
    };
};

exports.fillRect = function(ctx) {
    return function(r) {
        return function() {
            ctx.fillRect(r.x, r.y, r.w, r.h);
            return ctx;
        };
    };
};

exports.strokeRect = function(ctx) {
    return function(r) {
        return function() {
            ctx.strokeRect(r.x, r.y, r.w, r.h);
            return ctx;
        };
    };
};

exports.scale = function(t) {
    return function(ctx) {
        return function() {
            ctx.scale(t.scaleX, t.scaleY);
            return ctx;
        };
    };
};

exports.rotate = function(angle) {
    return function(ctx) {
        return function() {
            ctx.rotate(angle);
            return ctx;
        };
    };
};

exports.translate = function(t) {
    return function(ctx) {
        return function() {
            ctx.translate(t.translateX, t.translateY);
            return ctx;
        };
    };
};

exports.transform = function(t) {
    return function(ctx) {
        return function() {
            ctx.transform(t.m11, t.m12, t.m21, t.m22, t.m31, t.m32);
            return ctx;
        };
    };
};

exports.clearRect = function(ctx) {
    return function(r) {
        return function() {
            ctx.clearRect(r.x, r.y, r.w, r.h);
            return ctx;
        };
    };
};

exports.textAlignImpl = function(ctx) {
    return function() {
        return ctx.textAlign;
    }
};

exports.setTextAlignImpl = function(ctx) {
    return function(textAlign) {
        return function() {
            ctx.textAlign = textAlign;
            return ctx;
        }
    }
};

exports.font = function(ctx) {
    return function() {
        return ctx.font;
    };
};

exports.setFont = function(fontspec) {
    return function(ctx) {
        return function() {
            ctx.font = fontspec;
            return ctx;
        };
    };
};

exports.fillText = function(ctx) {
    return function(text) {
        return function(x) {
            return function(y) {
                return function() {
                    ctx.fillText(text, x, y);
                    return ctx;
                };
            };
        };
    };
};

exports.strokeText = function(ctx) {
    return function(text) {
        return function(x) {
            return function(y) {
                return function() {
                    ctx.strokeText(text, x, y);
                    return ctx;
                };
            };
        };
    };
};

exports.measureText = function(ctx) {
    return function(text) {
        return function() {
            return ctx.measureText(text);
        };
    };
};

exports.save = function(ctx) {
    return function() {
        ctx.save();
        return ctx;
    };
};

exports.restore = function(ctx) {
    return function() {
        ctx.restore();
        return ctx;
    };
};

exports.getImageData = function(ctx) {
    return function(x) {
        return function(y) {
            return function(w) {
                return function(h) {
                    return function() {
                        return ctx.getImageData(x, y, w, h);
                    };
                };
            };
        };
    };
};

exports.putImageDataFull = function(ctx) {
    return function(image_data) {
        return function(x) {
            return function(y) {
                return function(dx) {
                    return function(dy) {
                        return function(dw) {
                            return function(dh) {
                                return function() {
                                    ctx.putImageData(image_data, x, y, dx, dy, dw, dh);
                                    return ctx;
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};

exports.putImageData = function(ctx) {
    return function(image_data) {
        return function(x) {
            return function(y) {
                return function() {
                    ctx.putImageData(image_data, x, y);
                    return ctx;
                };
            };
        };
    };
};

exports.createImageData = function(ctx) {
    return function(sw) {
        return function(sh) {
            return function() {
                return ctx.createImageData(sw, sh);
            };
        };
    };
};

exports.createImageDataCopy = function(ctx) {
    return function(image_data) {
        return function() {
            return ctx.createImageData(image_data);
        };
    };
};

exports.getImageDataWidth = function(image_data) {
    return function() {
        return image_data.width;
    };
};

exports.getImageDataHeight = function(image_data) {
    return function() {
        return image_data.height;
    };
};

exports.getImageDataPixelArray = function(image_data) {
    return function() {
        return image_data.data;
    };
};

exports.drawImage = function(ctx) {
    return function(image_source) {
        return function(dx) {
            return function(dy) {
                return function() {
                    ctx.drawImage(image_source, dx, dy);
                    return ctx;
                };
            };
        };
    };
};

exports.drawImageScale = function(ctx) {
    return function(image_source) {
        return function(dx) {
            return function(dy) {
                return function(dWidth) {
                    return function(dHeight) {
                        return function() {
                            ctx.drawImage(image_source, dx, dy, dWidth, dHeight);
                            return ctx;
                        };
                    };
                };
            };
        };
    };
};

exports.drawImageFull = function(ctx) {
    return function(image_source) {
        return function(sx) {
            return function(sy) {
                return function(sWidth) {
                    return function(sHeight) {
                        return function(dx) {
                            return function(dy) {
                                return function(dWidth) {
                                    return function(dHeight) {
                                        return function() {
                                            ctx.drawImage(image_source, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight);
                                            return ctx;
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};

exports.createLinearGradient = function(linearGradient) {
    return function(ctx) {
        return function() {
            return ctx.createLinearGradient(linearGradient.x0, linearGradient.y0, linearGradient.x1, linearGradient.y1);
        };
    };
};

exports.createRadialGradient = function(radialGradient) {
    return function(ctx) {
        return function() {
            return ctx.createRadialGradient(radialGradient.x0, radialGradient.y0, radialGradient.r0, radialGradient.x1, radialGradient.y1, radialGradient.r1);
        };
    };
};

exports.addColorStop = function(stop) {
    return function(color) {
        return function(gradient) {
            return function() {
                gradient.addColorStop(stop, color);
                return gradient;
            };
        };
    };
};

exports.setGradientFillStyle = function(gradient) {
    return function(ctx) {
        return function() {
            ctx.fillStyle = gradient;
            return ctx;
        };
    };
};

exports.quadraticCurveTo = function(qCurve) {
    return function(ctx) {
        return function() {
            ctx.quadraticCurveTo(qCurve.cpx, qCurve.cpy, qCurve.x, qCurve.y);
            return ctx;
        };
    };
};

exports.bezierCurveTo = function(bCurve) {
    return function(ctx) {
        return function() {
            ctx.bezierCurveTo(bCurve.cp1x, bCurve.cp1y, bCurve.cp2x, bCurve.cp2y, bCurve.x, bCurve.y);
            return ctx;
        };
    };
};


},{}],"/Users/gene/Programming/pure_morph/output/Graphics.Canvas/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Function = require("Data.Function");
var Data_Maybe = require("Data.Maybe");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Control_Monad_Eff_Exception_Unsafe = require("Control.Monad.Eff.Exception.Unsafe");
var AlignLeft = (function () {
    function AlignLeft() {

    };
    AlignLeft.value = new AlignLeft();
    return AlignLeft;
})();
var AlignRight = (function () {
    function AlignRight() {

    };
    AlignRight.value = new AlignRight();
    return AlignRight;
})();
var AlignCenter = (function () {
    function AlignCenter() {

    };
    AlignCenter.value = new AlignCenter();
    return AlignCenter;
})();
var AlignStart = (function () {
    function AlignStart() {

    };
    AlignStart.value = new AlignStart();
    return AlignStart;
})();
var AlignEnd = (function () {
    function AlignEnd() {

    };
    AlignEnd.value = new AlignEnd();
    return AlignEnd;
})();
var Round = (function () {
    function Round() {

    };
    Round.value = new Round();
    return Round;
})();
var Square = (function () {
    function Square() {

    };
    Square.value = new Square();
    return Square;
})();
var Butt = (function () {
    function Butt() {

    };
    Butt.value = new Butt();
    return Butt;
})();
var SourceOver = (function () {
    function SourceOver() {

    };
    SourceOver.value = new SourceOver();
    return SourceOver;
})();
var SourceIn = (function () {
    function SourceIn() {

    };
    SourceIn.value = new SourceIn();
    return SourceIn;
})();
var SourceOut = (function () {
    function SourceOut() {

    };
    SourceOut.value = new SourceOut();
    return SourceOut;
})();
var SourceAtop = (function () {
    function SourceAtop() {

    };
    SourceAtop.value = new SourceAtop();
    return SourceAtop;
})();
var DestinationOver = (function () {
    function DestinationOver() {

    };
    DestinationOver.value = new DestinationOver();
    return DestinationOver;
})();
var DestinationIn = (function () {
    function DestinationIn() {

    };
    DestinationIn.value = new DestinationIn();
    return DestinationIn;
})();
var DestinationOut = (function () {
    function DestinationOut() {

    };
    DestinationOut.value = new DestinationOut();
    return DestinationOut;
})();
var DestinationAtop = (function () {
    function DestinationAtop() {

    };
    DestinationAtop.value = new DestinationAtop();
    return DestinationAtop;
})();
var Lighter = (function () {
    function Lighter() {

    };
    Lighter.value = new Lighter();
    return Lighter;
})();
var Copy = (function () {
    function Copy() {

    };
    Copy.value = new Copy();
    return Copy;
})();
var Xor = (function () {
    function Xor() {

    };
    Xor.value = new Xor();
    return Xor;
})();
var withContext = function (ctx) {
    return function (action) {
        return function __do() {
            $foreign.save(ctx)();
            var v = action();
            $foreign.restore(ctx)();
            return v;
        };
    };
};
var textAlign = function (ctx) {
    var unsafeParseTextAlign = function (v) {
        if (v === "left") {
            return AlignLeft.value;
        };
        if (v === "right") {
            return AlignRight.value;
        };
        if (v === "center") {
            return AlignCenter.value;
        };
        if (v === "start") {
            return AlignStart.value;
        };
        if (v === "end") {
            return AlignEnd.value;
        };
        return Control_Monad_Eff_Exception_Unsafe.unsafeThrow("invalid TextAlign: " + v);
    };
    return Prelude["<$>"](Control_Monad_Eff.functorEff)(unsafeParseTextAlign)($foreign.textAlignImpl(ctx));
};
var strokePath = function (ctx) {
    return function (path) {
        return function __do() {
            $foreign.beginPath(ctx)();
            var v = path();
            $foreign.stroke(ctx)();
            return v;
        };
    };
};
var showTextAlign = new Prelude.Show(function (v) {
    if (v instanceof AlignLeft) {
        return "left";
    };
    if (v instanceof AlignRight) {
        return "right";
    };
    if (v instanceof AlignCenter) {
        return "center";
    };
    if (v instanceof AlignStart) {
        return "start";
    };
    if (v instanceof AlignEnd) {
        return "end";
    };
    throw new Error("Failed pattern match at Graphics.Canvas line 388, column 1 - line 395, column 1: " + [ v.constructor.name ]);
});
var showComposite = new Prelude.Show(function (v) {
    if (v instanceof SourceOver) {
        return "source-over";
    };
    if (v instanceof SourceIn) {
        return "source-in";
    };
    if (v instanceof SourceOut) {
        return "source-out";
    };
    if (v instanceof SourceAtop) {
        return "source-atop";
    };
    if (v instanceof DestinationOver) {
        return "destination-over";
    };
    if (v instanceof DestinationIn) {
        return "destination-in";
    };
    if (v instanceof DestinationOut) {
        return "destination-out";
    };
    if (v instanceof DestinationAtop) {
        return "destination-atop";
    };
    if (v instanceof Lighter) {
        return "lighter";
    };
    if (v instanceof Copy) {
        return "copy";
    };
    if (v instanceof Xor) {
        return "xor";
    };
    throw new Error("Failed pattern match at Graphics.Canvas line 228, column 1 - line 241, column 1: " + [ v.constructor.name ]);
});
var setTextAlign = function (ctx) {
    return function (textalign) {
        return $foreign.setTextAlignImpl(ctx)(Prelude.show(showTextAlign)(textalign));
    };
};
var setLineCap = function (v) {
    if (v instanceof Round) {
        return $foreign.setLineCapImpl("round");
    };
    if (v instanceof Square) {
        return $foreign.setLineCapImpl("square");
    };
    if (v instanceof Butt) {
        return $foreign.setLineCapImpl("butt");
    };
    throw new Error("Failed pattern match at Graphics.Canvas line 209, column 1 - line 210, column 1: " + [ v.constructor.name ]);
};
var setGlobalCompositeOperation = function (ctx) {
    return function (composite) {
        return $foreign.setGlobalCompositeOperationImpl(ctx)(Prelude.show(showComposite)(composite));
    };
};
var setCanvasDimensions = function (d) {
    return function (ce) {
        return Prelude[">>="](Control_Monad_Eff.bindEff)($foreign.setCanvasHeight(d.height)(ce))($foreign.setCanvasWidth(d.width));
    };
};
var getCanvasElementById = function (elId) {
    return $foreign.getCanvasElementByIdImpl(elId, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
};
var getCanvasDimensions = function (ce) {
    return function __do() {
        var v = $foreign.getCanvasWidth(ce)();
        var v1 = $foreign.getCanvasHeight(ce)();
        return {
            width: v, 
            height: v1
        };
    };
};
var fillPath = function (ctx) {
    return function (path) {
        return function __do() {
            $foreign.beginPath(ctx)();
            var v = path();
            $foreign.fill(ctx)();
            return v;
        };
    };
};
module.exports = {
    AlignLeft: AlignLeft, 
    AlignRight: AlignRight, 
    AlignCenter: AlignCenter, 
    AlignStart: AlignStart, 
    AlignEnd: AlignEnd, 
    Round: Round, 
    Square: Square, 
    Butt: Butt, 
    SourceOver: SourceOver, 
    SourceIn: SourceIn, 
    SourceOut: SourceOut, 
    SourceAtop: SourceAtop, 
    DestinationOver: DestinationOver, 
    DestinationIn: DestinationIn, 
    DestinationOut: DestinationOut, 
    DestinationAtop: DestinationAtop, 
    Lighter: Lighter, 
    Copy: Copy, 
    Xor: Xor, 
    withContext: withContext, 
    setTextAlign: setTextAlign, 
    textAlign: textAlign, 
    fillPath: fillPath, 
    strokePath: strokePath, 
    setGlobalCompositeOperation: setGlobalCompositeOperation, 
    setLineCap: setLineCap, 
    setCanvasDimensions: setCanvasDimensions, 
    getCanvasDimensions: getCanvasDimensions, 
    getCanvasElementById: getCanvasElementById, 
    showComposite: showComposite, 
    showTextAlign: showTextAlign, 
    bezierCurveTo: $foreign.bezierCurveTo, 
    quadraticCurveTo: $foreign.quadraticCurveTo, 
    setGradientFillStyle: $foreign.setGradientFillStyle, 
    addColorStop: $foreign.addColorStop, 
    createRadialGradient: $foreign.createRadialGradient, 
    createLinearGradient: $foreign.createLinearGradient, 
    drawImageFull: $foreign.drawImageFull, 
    drawImageScale: $foreign.drawImageScale, 
    drawImage: $foreign.drawImage, 
    canvasElementToImageSource: $foreign.canvasElementToImageSource, 
    createImageDataCopy: $foreign.createImageDataCopy, 
    createImageData: $foreign.createImageData, 
    putImageDataFull: $foreign.putImageDataFull, 
    putImageData: $foreign.putImageData, 
    getImageDataPixelArray: $foreign.getImageDataPixelArray, 
    getImageDataHeight: $foreign.getImageDataHeight, 
    getImageDataWidth: $foreign.getImageDataWidth, 
    getImageData: $foreign.getImageData, 
    withImage: $foreign.withImage, 
    restore: $foreign.restore, 
    save: $foreign.save, 
    measureText: $foreign.measureText, 
    strokeText: $foreign.strokeText, 
    fillText: $foreign.fillText, 
    setFont: $foreign.setFont, 
    font: $foreign.font, 
    transform: $foreign.transform, 
    translate: $foreign.translate, 
    rotate: $foreign.rotate, 
    scale: $foreign.scale, 
    clearRect: $foreign.clearRect, 
    strokeRect: $foreign.strokeRect, 
    fillRect: $foreign.fillRect, 
    rect: $foreign.rect, 
    arc: $foreign.arc, 
    closePath: $foreign.closePath, 
    moveTo: $foreign.moveTo, 
    lineTo: $foreign.lineTo, 
    clip: $foreign.clip, 
    fill: $foreign.fill, 
    stroke: $foreign.stroke, 
    beginPath: $foreign.beginPath, 
    setGlobalAlpha: $foreign.setGlobalAlpha, 
    setShadowColor: $foreign.setShadowColor, 
    setShadowOffsetY: $foreign.setShadowOffsetY, 
    setShadowOffsetX: $foreign.setShadowOffsetX, 
    setShadowBlur: $foreign.setShadowBlur, 
    setStrokeStyle: $foreign.setStrokeStyle, 
    setFillStyle: $foreign.setFillStyle, 
    setLineWidth: $foreign.setLineWidth, 
    canvasToDataURL: $foreign.canvasToDataURL, 
    setCanvasHeight: $foreign.setCanvasHeight, 
    getCanvasHeight: $foreign.getCanvasHeight, 
    setCanvasWidth: $foreign.setCanvasWidth, 
    getCanvasWidth: $foreign.getCanvasWidth, 
    getContext2D: $foreign.getContext2D
};

},{"./foreign":"/Users/gene/Programming/pure_morph/output/Graphics.Canvas/foreign.js","Control.Monad.Eff":"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff/index.js","Control.Monad.Eff.Exception.Unsafe":"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff.Exception.Unsafe/index.js","Data.Function":"/Users/gene/Programming/pure_morph/output/Data.Function/index.js","Data.Maybe":"/Users/gene/Programming/pure_morph/output/Data.Maybe/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Graphics.WebGL.Context/foreign.js":[function(require,module,exports){
"use strict";

// module Graphics.WebGL.Context

exports.getWebglContextWithAttrsImpl = function getWebglContextWithAttrsImpl(canvas, attrs, Just, Nothing) {
  return function () {
    try {
      return Just(
        canvas.getContext('webgl', attrs) || canvas.getContext('experimental-webgl', attrs)
      );
    } catch(err) {
      return Nothing;
    };
  }
}

},{}],"/Users/gene/Programming/pure_morph/output/Graphics.WebGL.Context/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Control_Monad_Eff_Class = require("Control.Monad.Eff.Class");
var Control_Monad_Reader_Class = require("Control.Monad.Reader.Class");
var Data_Function = require("Data.Function");
var Data_Maybe = require("Data.Maybe");
var Graphics_Canvas = require("Graphics.Canvas");
var Graphics_WebGL_Unsafe = require("Graphics.WebGL.Unsafe");
var Graphics_WebGL_Types = require("Graphics.WebGL.Types");
var Control_Monad_Reader_Trans = require("Control.Monad.Reader.Trans");
var Control_Monad_Except_Trans = require("Control.Monad.Except.Trans");
var getWebglContextWithAttrs = function (canvas) {
    return function (attrs) {
        return $foreign.getWebglContextWithAttrsImpl(canvas, attrs, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
    };
};
var defaultWebglContextAttrs = {
    alpha: true, 
    depth: true, 
    stencil: false, 
    antialias: true, 
    premultipliedAlpha: true, 
    preserveDrawingBuffer: false, 
    preferLowPowerToHighPerformance: false, 
    failIfMajorPerformanceCaveat: false
};
var getWebglContext = function (canvas) {
    return getWebglContextWithAttrs(canvas)(defaultWebglContextAttrs);
};
var contextProperties = Prelude[">>="](Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadReaderReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff))))(function ($3) {
    return Prelude["return"](Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_Eff.applicativeEff)))(Graphics_WebGL_Unsafe.unsafeCoerce($3));
});
var drawingBufferHeight = Prelude["<$>"](Control_Monad_Reader_Trans.functorReaderT(Control_Monad_Except_Trans.functorExceptT(Control_Monad_Eff.functorEff)))(function (v) {
    return v.drawingBufferHeight;
})(contextProperties);
var drawingBufferWidth = Prelude["<$>"](Control_Monad_Reader_Trans.functorReaderT(Control_Monad_Except_Trans.functorExceptT(Control_Monad_Eff.functorEff)))(function (v) {
    return v.drawingBufferWidth;
})(contextProperties);
var canvasElement = Prelude["<$>"](Control_Monad_Reader_Trans.functorReaderT(Control_Monad_Except_Trans.functorExceptT(Control_Monad_Eff.functorEff)))(function (v) {
    return v.canvas;
})(contextProperties);
module.exports = {
    drawingBufferWidth: drawingBufferWidth, 
    drawingBufferHeight: drawingBufferHeight, 
    canvasElement: canvasElement, 
    getWebglContextWithAttrs: getWebglContextWithAttrs, 
    getWebglContext: getWebglContext, 
    defaultWebglContextAttrs: defaultWebglContextAttrs
};

},{"./foreign":"/Users/gene/Programming/pure_morph/output/Graphics.WebGL.Context/foreign.js","Control.Monad.Eff":"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff/index.js","Control.Monad.Eff.Class":"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff.Class/index.js","Control.Monad.Except.Trans":"/Users/gene/Programming/pure_morph/output/Control.Monad.Except.Trans/index.js","Control.Monad.Reader.Class":"/Users/gene/Programming/pure_morph/output/Control.Monad.Reader.Class/index.js","Control.Monad.Reader.Trans":"/Users/gene/Programming/pure_morph/output/Control.Monad.Reader.Trans/index.js","Data.Function":"/Users/gene/Programming/pure_morph/output/Data.Function/index.js","Data.Maybe":"/Users/gene/Programming/pure_morph/output/Data.Maybe/index.js","Graphics.Canvas":"/Users/gene/Programming/pure_morph/output/Graphics.Canvas/index.js","Graphics.WebGL.Types":"/Users/gene/Programming/pure_morph/output/Graphics.WebGL.Types/index.js","Graphics.WebGL.Unsafe":"/Users/gene/Programming/pure_morph/output/Graphics.WebGL.Unsafe/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Graphics.WebGL.Methods/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Monad_Eff_Class = require("Control.Monad.Eff.Class");
var Control_Monad_Reader_Class = require("Control.Monad.Reader.Class");
var Control_Monad_Error_Class = require("Control.Monad.Error.Class");
var Data_ArrayBuffer_Types = require("Data.ArrayBuffer.Types");
var Data_Maybe = require("Data.Maybe");
var Graphics_WebGL_Raw = require("Graphics.WebGL.Raw");
var Graphics_WebGL_Types = require("Graphics.WebGL.Types");
var Control_Monad_Reader_Trans = require("Control.Monad.Reader.Trans");
var Control_Monad_Except_Trans = require("Control.Monad.Except.Trans");
var Control_Monad_Eff = require("Control.Monad.Eff");
var vertexAttribPointer = function (v) {
    return function (size) {
        return function (dtype) {
            return function (isNormalized) {
                return function (stride) {
                    return function (offset) {
                        return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadReaderReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff))))(function (v1) {
                            return Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(Graphics_WebGL_Raw.vertexAttribPointer(v1)(v)(size)(Graphics_WebGL_Types.toWebglEnum(Graphics_WebGL_Types.toWebglEnumDataType)(dtype))(isNormalized)(stride)(offset));
                        });
                    };
                };
            };
        };
    };
};
var vertexAttrib4fv = function (v) {
    return function (xs) {
        return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadReaderReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff))))(function (v1) {
            return Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(Graphics_WebGL_Raw.vertexAttrib4fv_(v1)(v)(xs));
        });
    };
};
var vertexAttrib4f = function (v) {
    return function (x) {
        return function (y) {
            return function (z) {
                return function (w) {
                    return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadReaderReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff))))(function (v1) {
                        return Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(Graphics_WebGL_Raw.vertexAttrib4f(v1)(v)(x)(y)(z)(w));
                    });
                };
            };
        };
    };
};
var vertexAttrib3fv = function (v) {
    return function (xs) {
        return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadReaderReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff))))(function (v1) {
            return Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(Graphics_WebGL_Raw.vertexAttrib3fv_(v1)(v)(xs));
        });
    };
};
var vertexAttrib3f = function (v) {
    return function (x) {
        return function (y) {
            return function (z) {
                return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadReaderReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff))))(function (v1) {
                    return Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(Graphics_WebGL_Raw.vertexAttrib3f(v1)(v)(x)(y)(z));
                });
            };
        };
    };
};
var vertexAttrib2fv = function (v) {
    return function (xs) {
        return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadReaderReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff))))(function (v1) {
            return Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(Graphics_WebGL_Raw.vertexAttrib2fv_(v1)(v)(xs));
        });
    };
};
var vertexAttrib2f = function (v) {
    return function (x) {
        return function (y) {
            return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadReaderReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff))))(function (v1) {
                return Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(Graphics_WebGL_Raw.vertexAttrib2f(v1)(v)(x)(y));
            });
        };
    };
};
var vertexAttrib1fv = function (v) {
    return function (xs) {
        return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadReaderReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff))))(function (v1) {
            return Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(Graphics_WebGL_Raw.vertexAttrib1fv_(v1)(v)(xs));
        });
    };
};
var vertexAttrib1f = function (v) {
    return function (x) {
        return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadReaderReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff))))(function (v1) {
            return Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(Graphics_WebGL_Raw.vertexAttrib1f(v1)(v)(x));
        });
    };
};
var useProgram = function (prog) {
    return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadReaderReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff))))(function (v) {
        return Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(Graphics_WebGL_Raw.useProgram(v)(prog));
    });
};
var uniform4fv = function (v) {
    return function (xs) {
        return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadReaderReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff))))(function (v1) {
            return Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(Graphics_WebGL_Raw.uniform4fv_(v1)(v)(xs));
        });
    };
};
var uniform4f = function (v) {
    return function (x) {
        return function (y) {
            return function (z) {
                return function (w) {
                    return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadReaderReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff))))(function (v1) {
                        return Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(Graphics_WebGL_Raw.uniform4f(v1)(v)(x)(y)(z)(w));
                    });
                };
            };
        };
    };
};
var uniform3fv = function (v) {
    return function (xs) {
        return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadReaderReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff))))(function (v1) {
            return Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(Graphics_WebGL_Raw.uniform3fv_(v1)(v)(xs));
        });
    };
};
var uniform3f = function (v) {
    return function (x) {
        return function (y) {
            return function (z) {
                return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadReaderReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff))))(function (v1) {
                    return Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(Graphics_WebGL_Raw.uniform3f(v1)(v)(x)(y)(z));
                });
            };
        };
    };
};
var uniform2fv = function (v) {
    return function (xs) {
        return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadReaderReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff))))(function (v1) {
            return Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(Graphics_WebGL_Raw.uniform2fv_(v1)(v)(xs));
        });
    };
};
var uniform2f = function (v) {
    return function (x) {
        return function (y) {
            return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadReaderReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff))))(function (v1) {
                return Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(Graphics_WebGL_Raw.uniform2f(v1)(v)(x)(y));
            });
        };
    };
};
var uniform1fv = function (v) {
    return function (xs) {
        return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadReaderReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff))))(function (v1) {
            return Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(Graphics_WebGL_Raw.uniform1fv_(v1)(v)(xs));
        });
    };
};
var uniform1f = function (v) {
    return function (x) {
        return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadReaderReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff))))(function (v1) {
            return Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(Graphics_WebGL_Raw.uniform1f(v1)(v)(x));
        });
    };
};
var shaderSource = function (shader) {
    return function (src) {
        return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadReaderReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff))))(function (v) {
            return Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(Graphics_WebGL_Raw.shaderSource(v)(shader)(src));
        });
    };
};
var linkProgram = function (prog) {
    return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadReaderReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff))))(function (v) {
        return Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(Graphics_WebGL_Raw.linkProgram(v)(prog));
    });
};
var isContextLost = Prelude[">>="](Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadReaderReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff))))(function ($170) {
    return Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(Graphics_WebGL_Raw.isContextLost($170));
});
var getShaderParameter = function (prog) {
    return function (param) {
        return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadReaderReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff))))(function (v) {
            return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(Graphics_WebGL_Raw.getShaderParameter(v)(prog)(Graphics_WebGL_Types.toWebglEnum(Graphics_WebGL_Types.toWebglEnumShaderParam)(param))))(function (v1) {
                if (v1 instanceof Data_Maybe.Just) {
                    return Prelude["return"](Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_Eff.applicativeEff)))(v1.value0);
                };
                if (v1 instanceof Data_Maybe.Nothing) {
                    return Control_Monad_Error_Class.throwError(Control_Monad_Reader_Trans.monadErrorReaderT(Control_Monad_Except_Trans.monadErrorExceptT(Control_Monad_Eff.monadEff)))(new Graphics_WebGL_Types.NullValue("getShaderParameter"));
                };
                throw new Error("Failed pattern match at Graphics.WebGL.Methods line 104, column 1 - line 105, column 1: " + [ v1.constructor.name ]);
            });
        });
    };
};
var getShaderInfoLog = function (shader) {
    return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadReaderReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff))))(function (v) {
        return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(Graphics_WebGL_Raw.getShaderInfoLog(v)(shader)))(function (v1) {
            if (v1 instanceof Data_Maybe.Just) {
                return Prelude["return"](Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_Eff.applicativeEff)))(v1.value0);
            };
            if (v1 instanceof Data_Maybe.Nothing) {
                return Control_Monad_Error_Class.throwError(Control_Monad_Reader_Trans.monadErrorReaderT(Control_Monad_Except_Trans.monadErrorExceptT(Control_Monad_Eff.monadEff)))(new Graphics_WebGL_Types.NullValue("getShaderInfoLog"));
            };
            throw new Error("Failed pattern match at Graphics.WebGL.Methods line 112, column 1 - line 113, column 1: " + [ v1.constructor.name ]);
        });
    });
};
var getProgramParameter = function (prog) {
    return function (param) {
        return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadReaderReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff))))(function (v) {
            return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(Graphics_WebGL_Raw.getProgramParameter(v)(prog)(Graphics_WebGL_Types.toWebglEnum(Graphics_WebGL_Types.toWebglEnumProgramParam)(param))))(function (v1) {
                if (v1 instanceof Data_Maybe.Just) {
                    return Prelude["return"](Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_Eff.applicativeEff)))(v1.value0);
                };
                if (v1 instanceof Data_Maybe.Nothing) {
                    return Control_Monad_Error_Class.throwError(Control_Monad_Reader_Trans.monadErrorReaderT(Control_Monad_Except_Trans.monadErrorExceptT(Control_Monad_Eff.monadEff)))(new Graphics_WebGL_Types.NullValue("getProgramParameter"));
                };
                throw new Error("Failed pattern match at Graphics.WebGL.Methods line 96, column 1 - line 97, column 1: " + [ v1.constructor.name ]);
            });
        });
    };
};
var getError = Prelude[">>="](Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadReaderReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff))))(function ($171) {
    return Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(Graphics_WebGL_Raw.getError($171));
});
var enableVertexAttribArray = function (v) {
    return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadReaderReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff))))(function (v1) {
        return Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(Graphics_WebGL_Raw.enableVertexAttribArray(v1)(v));
    });
};
var drawArrays = function (mode) {
    return function (first) {
        return function (count) {
            return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadReaderReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff))))(function (v) {
                return Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(Graphics_WebGL_Raw.drawArrays(v)(Graphics_WebGL_Types.toWebglEnum(Graphics_WebGL_Types.toWebglEnumDrawMode)(mode))(first)(count));
            });
        };
    };
};
var createTexture = Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Prelude[">>="](Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadReaderReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff))))(function ($172) {
    return Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(Graphics_WebGL_Raw.createTexture($172));
}))(function (v) {
    if (v instanceof Data_Maybe.Just) {
        return Prelude["return"](Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_Eff.applicativeEff)))(v.value0);
    };
    if (v instanceof Data_Maybe.Nothing) {
        return Control_Monad_Error_Class.throwError(Control_Monad_Reader_Trans.monadErrorReaderT(Control_Monad_Except_Trans.monadErrorExceptT(Control_Monad_Eff.monadEff)))(new Graphics_WebGL_Types.NullValue("createTexture"));
    };
    throw new Error("Failed pattern match at Graphics.WebGL.Methods line 53, column 1 - line 54, column 1: " + [ v.constructor.name ]);
});
var createShader = function (stype) {
    return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadReaderReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff))))(function (v) {
        return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(Graphics_WebGL_Raw.createShader(v)(Graphics_WebGL_Types.toWebglEnum(Graphics_WebGL_Types.toWebglEnumShader)(stype))))(function (v1) {
            if (v1 instanceof Data_Maybe.Just) {
                return Prelude["return"](Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_Eff.applicativeEff)))(v1.value0);
            };
            if (v1 instanceof Data_Maybe.Nothing) {
                return Control_Monad_Error_Class.throwError(Control_Monad_Reader_Trans.monadErrorReaderT(Control_Monad_Except_Trans.monadErrorExceptT(Control_Monad_Eff.monadEff)))(new Graphics_WebGL_Types.NullValue("createShader"));
            };
            throw new Error("Failed pattern match at Graphics.WebGL.Methods line 75, column 1 - line 76, column 1: " + [ v1.constructor.name ]);
        });
    });
};
var createProgram = Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadReaderReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff))))(function (v) {
    return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(Graphics_WebGL_Raw.createProgram(v)))(function (v1) {
        if (v1 instanceof Data_Maybe.Just) {
            return Prelude["return"](Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_Eff.applicativeEff)))(v1.value0);
        };
        if (v1 instanceof Data_Maybe.Nothing) {
            return Control_Monad_Error_Class.throwError(Control_Monad_Reader_Trans.monadErrorReaderT(Control_Monad_Except_Trans.monadErrorExceptT(Control_Monad_Eff.monadEff)))(new Graphics_WebGL_Types.NullValue("createProgram"));
        };
        throw new Error("Failed pattern match at Graphics.WebGL.Methods line 67, column 1 - line 68, column 1: " + [ v1.constructor.name ]);
    });
});
var createFramebuffer = Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Prelude[">>="](Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadReaderReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff))))(function ($173) {
    return Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(Graphics_WebGL_Raw.createFramebuffer($173));
}))(function (v) {
    if (v instanceof Data_Maybe.Just) {
        return Prelude["return"](Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_Eff.applicativeEff)))(v.value0);
    };
    if (v instanceof Data_Maybe.Nothing) {
        return Control_Monad_Error_Class.throwError(Control_Monad_Reader_Trans.monadErrorReaderT(Control_Monad_Except_Trans.monadErrorExceptT(Control_Monad_Eff.monadEff)))(new Graphics_WebGL_Types.NullValue("createFramebuffer"));
    };
    throw new Error("Failed pattern match at Graphics.WebGL.Methods line 60, column 1 - line 61, column 1: " + [ v.constructor.name ]);
});
var createBuffer = Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Prelude[">>="](Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadReaderReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff))))(function ($174) {
    return Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(Graphics_WebGL_Raw.createBuffer($174));
}))(function (v) {
    if (v instanceof Data_Maybe.Just) {
        return Prelude["return"](Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_Eff.applicativeEff)))(v.value0);
    };
    if (v instanceof Data_Maybe.Nothing) {
        return Control_Monad_Error_Class.throwError(Control_Monad_Reader_Trans.monadErrorReaderT(Control_Monad_Except_Trans.monadErrorExceptT(Control_Monad_Eff.monadEff)))(new Graphics_WebGL_Types.NullValue("createBuffer"));
    };
    throw new Error("Failed pattern match at Graphics.WebGL.Methods line 46, column 1 - line 47, column 1: " + [ v.constructor.name ]);
});
var compileShader = function (shader) {
    return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadReaderReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff))))(function (v) {
        return Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(Graphics_WebGL_Raw.compileShader(v)(shader));
    });
};
var clearColor = function (r) {
    return function (g) {
        return function (b) {
            return function (a) {
                return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadReaderReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff))))(function (v) {
                    return Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(Graphics_WebGL_Raw.clearColor(v)(r)(g)(b)(a));
                });
            };
        };
    };
};
var clear = function (buffer) {
    return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadReaderReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff))))(function (v) {
        return Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(Graphics_WebGL_Raw.clear(v)(Graphics_WebGL_Types.toWebglEnum(Graphics_WebGL_Types.toWebglEnumBufferType)(buffer)));
    });
};
var bufferData = function (btype) {
    return function (datatype) {
        return function (usage) {
            return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadReaderReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff))))(function (v) {
                return Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))((function () {
                    if (datatype instanceof Graphics_WebGL_Types.DataSource) {
                        return Graphics_WebGL_Raw.bufferData(v)(Graphics_WebGL_Types.toWebglEnum(Graphics_WebGL_Types.toWebglEnumArrayBufferType)(btype))(datatype.value0)(Graphics_WebGL_Types.toWebglEnum(Graphics_WebGL_Types.toWebglEnumBufferUsage)(usage));
                    };
                    if (datatype instanceof Graphics_WebGL_Types.DataSize) {
                        return Graphics_WebGL_Raw.bufferData_(v)(Graphics_WebGL_Types.toWebglEnum(Graphics_WebGL_Types.toWebglEnumArrayBufferType)(btype))(datatype.value0)(Graphics_WebGL_Types.toWebglEnum(Graphics_WebGL_Types.toWebglEnumBufferUsage)(usage));
                    };
                    throw new Error("Failed pattern match at Graphics.WebGL.Methods line 24, column 1 - line 25, column 1: " + [ datatype.constructor.name ]);
                })());
            });
        };
    };
};
var bindBuffer = function (btype) {
    return function (buffer) {
        return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadReaderReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff))))(function (v) {
            return Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(Graphics_WebGL_Raw.bindBuffer(v)(Graphics_WebGL_Types.toWebglEnum(Graphics_WebGL_Types.toWebglEnumArrayBufferType)(btype))(buffer));
        });
    };
};
var attachShader = function (prog) {
    return function (shader) {
        return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadReaderReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff))))(function (v) {
            return Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(Graphics_WebGL_Raw.attachShader(v)(prog)(shader));
        });
    };
};
module.exports = {
    vertexAttribPointer: vertexAttribPointer, 
    vertexAttrib4fv: vertexAttrib4fv, 
    vertexAttrib4f: vertexAttrib4f, 
    vertexAttrib3fv: vertexAttrib3fv, 
    vertexAttrib3f: vertexAttrib3f, 
    vertexAttrib2fv: vertexAttrib2fv, 
    vertexAttrib2f: vertexAttrib2f, 
    vertexAttrib1fv: vertexAttrib1fv, 
    vertexAttrib1f: vertexAttrib1f, 
    useProgram: useProgram, 
    uniform4fv: uniform4fv, 
    uniform4f: uniform4f, 
    uniform3fv: uniform3fv, 
    uniform3f: uniform3f, 
    uniform2fv: uniform2fv, 
    uniform2f: uniform2f, 
    uniform1fv: uniform1fv, 
    uniform1f: uniform1f, 
    shaderSource: shaderSource, 
    linkProgram: linkProgram, 
    isContextLost: isContextLost, 
    getShaderInfoLog: getShaderInfoLog, 
    getShaderParameter: getShaderParameter, 
    getProgramParameter: getProgramParameter, 
    getError: getError, 
    enableVertexAttribArray: enableVertexAttribArray, 
    drawArrays: drawArrays, 
    createShader: createShader, 
    createProgram: createProgram, 
    createFramebuffer: createFramebuffer, 
    createTexture: createTexture, 
    createBuffer: createBuffer, 
    compileShader: compileShader, 
    clearColor: clearColor, 
    clear: clear, 
    bufferData: bufferData, 
    bindBuffer: bindBuffer, 
    attachShader: attachShader
};

},{"Control.Monad.Eff":"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff/index.js","Control.Monad.Eff.Class":"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff.Class/index.js","Control.Monad.Error.Class":"/Users/gene/Programming/pure_morph/output/Control.Monad.Error.Class/index.js","Control.Monad.Except.Trans":"/Users/gene/Programming/pure_morph/output/Control.Monad.Except.Trans/index.js","Control.Monad.Reader.Class":"/Users/gene/Programming/pure_morph/output/Control.Monad.Reader.Class/index.js","Control.Monad.Reader.Trans":"/Users/gene/Programming/pure_morph/output/Control.Monad.Reader.Trans/index.js","Data.ArrayBuffer.Types":"/Users/gene/Programming/pure_morph/output/Data.ArrayBuffer.Types/index.js","Data.Maybe":"/Users/gene/Programming/pure_morph/output/Data.Maybe/index.js","Graphics.WebGL.Raw":"/Users/gene/Programming/pure_morph/output/Graphics.WebGL.Raw/index.js","Graphics.WebGL.Types":"/Users/gene/Programming/pure_morph/output/Graphics.WebGL.Types/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Graphics.WebGL.Raw.Enums/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Graphics_WebGL_Raw_Types = require("Graphics.WebGL.Raw.Types");
var zero = 0;
var viewport = 2978;
var vertexShader = 35633;
var vertexAttribArrayType = 34341;
var vertexAttribArrayStride = 34340;
var vertexAttribArraySize = 34339;
var vertexAttribArrayPointer = 34373;
var vertexAttribArrayNormalized = 34922;
var vertexAttribArrayEnabled = 34338;
var vertexAttribArrayBufferBinding = 34975;
var version = 7938;
var vendor = 7936;
var validateStatus = 35715;
var unsignedShort565 = 33635;
var unsignedShort5551 = 32820;
var unsignedShort4444 = 32819;
var unsignedShort = 5123;
var unsignedInt = 5125;
var unsignedByte = 5121;
var unpackPremultiplyAlphaWebgl = 37441;
var unpackFlipYWebgl = 37440;
var unpackColorspaceConversionWebgl = 37443;
var unpackAlignment = 3317;
var triangles = 4;
var triangleStrip = 5;
var triangleFan = 6;
var textureWrapT = 10243;
var textureWrapS = 10242;
var textureMinFilter = 10241;
var textureMagFilter = 10240;
var textureCubeMapPositiveZ = 34073;
var textureCubeMapPositiveY = 34071;
var textureCubeMapPositiveX = 34069;
var textureCubeMapNegativeZ = 34074;
var textureCubeMapNegativeY = 34072;
var textureCubeMapNegativeX = 34070;
var textureCubeMap = 34067;
var textureBindingCubeMap = 34068;
var textureBinding2d = 32873;
var texture9 = 33993;
var texture8 = 33992;
var texture7 = 33991;
var texture6 = 33990;
var texture5 = 33989;
var texture4 = 33988;
var texture31 = 34015;
var texture30 = 34014;
var texture3 = 33987;
var texture2d = 3553;
var texture29 = 34013;
var texture28 = 34012;
var texture27 = 34011;
var texture26 = 34010;
var texture25 = 34009;
var texture24 = 34008;
var texture23 = 34007;
var texture22 = 34006;
var texture21 = 34005;
var texture20 = 34004;
var texture2 = 33986;
var texture19 = 34003;
var texture18 = 34002;
var texture17 = 34001;
var texture16 = 34000;
var texture15 = 33999;
var texture14 = 33998;
var texture13 = 33997;
var texture12 = 33996;
var texture11 = 33995;
var texture10 = 33994;
var texture1 = 33985;
var texture0 = 33984;
var texture = 5890;
var subpixelBits = 3408;
var streamDraw = 35040;
var stencilWritemask = 2968;
var stencilValueMask = 2963;
var stencilTest = 2960;
var stencilRef = 2967;
var stencilPassDepthPass = 2966;
var stencilPassDepthFail = 2965;
var stencilIndex8 = 36168;
var stencilIndex = 6401;
var stencilFunc = 2962;
var stencilFail = 2964;
var stencilClearValue = 2961;
var stencilBufferBit = 1024;
var stencilBits = 3415;
var stencilBackWritemask = 36005;
var stencilBackValueMask = 36004;
var stencilBackRef = 36003;
var stencilBackPassDepthPass = 34819;
var stencilBackPassDepthFail = 34818;
var stencilBackFunc = 34816;
var stencilBackFail = 34817;
var stencilAttachment = 36128;
var staticDraw = 35044;
var srcColor = 768;
var srcAlphaSaturate = 776;
var srcAlpha = 770;
var $$short = 5122;
var shadingLanguageVersion = 35724;
var shaderType = 35663;
var scissorTest = 3089;
var scissorBox = 3088;
var samples = 32937;
var samplerCube = 35680;
var sampler2d = 35678;
var sampleCoverageValue = 32938;
var sampleCoverageInvert = 32939;
var sampleCoverage = 32928;
var sampleBuffers = 32936;
var sampleAlphaToCoverage = 32926;
var rgba4 = 32854;
var rgba = 6408;
var rgb5A1 = 32855;
var rgb565 = 36194;
var rgb = 6407;
var replace = 7681;
var repeat = 10497;
var renderer = 7937;
var renderbufferWidth = 36162;
var renderbufferStencilSize = 36181;
var renderbufferRedSize = 36176;
var renderbufferInternalFormat = 36164;
var renderbufferHeight = 36163;
var renderbufferGreenSize = 36177;
var renderbufferDepthSize = 36180;
var renderbufferBlueSize = 36178;
var renderbufferBinding = 36007;
var renderbufferAlphaSize = 36179;
var renderbuffer = 36161;
var redBits = 3410;
var polygonOffsetUnits = 10752;
var polygonOffsetFill = 32823;
var polygonOffsetFactor = 32824;
var points = 0;
var packAlignment = 3333;
var outOfMemory = 1285;
var oneMinusSrcColor = 769;
var oneMinusSrcAlpha = 771;
var oneMinusDstColor = 775;
var oneMinusDstAlpha = 773;
var oneMinusConstantColor = 32770;
var oneMinusConstantAlpha = 32772;
var one = 1;
var notequal = 517;
var none = 0;
var noError = 0;
var nicest = 4354;
var never = 512;
var nearestMipmapNearest = 9984;
var nearestMipmapLinear = 9986;
var nearest = 9728;
var mirroredRepeat = 33648;
var mediumInt = 36340;
var mediumFloat = 36337;
var maxViewportDims = 3386;
var maxVertexUniformVectors = 36347;
var maxVertexTextureImageUnits = 35660;
var maxVertexAttribs = 34921;
var maxVaryingVectors = 36348;
var maxTextureSize = 3379;
var maxTextureImageUnits = 34930;
var maxRenderbufferSize = 34024;
var maxFragmentUniformVectors = 36349;
var maxCubeMapTextureSize = 34076;
var maxCombinedTextureImageUnits = 35661;
var luminanceAlpha = 6410;
var luminance = 6409;
var lowInt = 36339;
var lowFloat = 36336;
var linkStatus = 35714;
var lines = 1;
var linearMipmapNearest = 9985;
var linearMipmapLinear = 9987;
var linear = 9729;
var lineWidth = 2849;
var lineStrip = 3;
var lineLoop = 2;
var less = 513;
var lequal = 515;
var keep = 7680;
var invert = 5386;
var invalidValue = 1281;
var invalidOperation = 1282;
var invalidFramebufferOperation = 1286;
var invalidEnum = 1280;
var intVec4 = 35669;
var intVec3 = 35668;
var intVec2 = 35667;
var $$int = 5124;
var incrWrap = 34055;
var incr = 7682;
var implementationColorReadType = 35738;
var implementationColorReadFormat = 35739;
var highInt = 36341;
var highFloat = 36338;
var greenBits = 3411;
var greater = 516;
var gequal = 518;
var generateMipmapHint = 33170;
var funcSubtract = 32778;
var funcReverseSubtract = 32779;
var funcAdd = 32774;
var frontFace = 2886;
var frontAndBack = 1032;
var front = 1028;
var framebufferUnsupported = 36061;
var framebufferIncompleteMissingAttachment = 36055;
var framebufferIncompleteDimensions = 36057;
var framebufferIncompleteAttachment = 36054;
var framebufferComplete = 36053;
var framebufferBinding = 36006;
var framebufferAttachmentTextureLevel = 36050;
var framebufferAttachmentTextureCubeMapFace = 36051;
var framebufferAttachmentObjectType = 36048;
var framebufferAttachmentObjectName = 36049;
var framebuffer = 36160;
var fragmentShader = 35632;
var floatVec4 = 35666;
var floatVec3 = 35665;
var floatVec2 = 35664;
var floatMat4 = 35676;
var floatMat3 = 35675;
var floatMat2 = 35674;
var $$float = 5126;
var fastest = 4353;
var equal = 514;
var elementArrayBufferBinding = 34965;
var elementArrayBuffer = 34963;
var dynamicDraw = 35048;
var dstColor = 774;
var dstAlpha = 772;
var dontCare = 4352;
var dither = 3024;
var depthWritemask = 2930;
var depthTest = 2929;
var depthStencilAttachment = 33306;
var depthStencil = 34041;
var depthRange = 2928;
var depthFunc = 2932;
var depthComponent16 = 33189;
var depthComponent = 6402;
var depthClearValue = 2931;
var depthBufferBit = 256;
var depthBits = 3414;
var depthAttachment = 36096;
var deleteStatus = 35712;
var decrWrap = 34056;
var decr = 7683;
var cw = 2304;
var currentVertexAttrib = 34342;
var currentProgram = 35725;
var cullFaceMode = 2885;
var cullFace = 2884;
var contextLostWebgl = 37442;
var constantColor = 32769;
var constantAlpha = 32771;
var compressedTextureFormats = 34467;
var compileStatus = 35713;
var colorWritemask = 3107;
var colorClearValue = 3106;
var colorBufferBit = 16384;
var colorAttachment0 = 36064;
var clampToEdge = 33071;
var ccw = 2305;
var $$byte = 5120;
var bufferUsage = 34661;
var bufferSize = 34660;
var browserDefaultWebgl = 37444;
var boolVec4 = 35673;
var boolVec3 = 35672;
var boolVec2 = 35671;
var bool = 35670;
var blueBits = 3412;
var blendSrcRgb = 32969;
var blendSrcAlpha = 32971;
var blendEquationRgb = 32777;
var blendEquationAlpha = 34877;
var blendEquation = 32777;
var blendDstRgb = 32968;
var blendDstAlpha = 32970;
var blendColor = 32773;
var blend = 3042;
var back = 1029;
var attachedShaders = 35717;
var arrayBufferBinding = 34964;
var arrayBuffer = 34962;
var always = 519;
var alphaBits = 3413;
var alpha = 6406;
var aliasedPointSizeRange = 33901;
var aliasedLineWidthRange = 33902;
var activeUniforms = 35718;
var activeTexture = 34016;
var activeAttributes = 35721;
module.exports = {
    zero: zero, 
    viewport: viewport, 
    vertexShader: vertexShader, 
    vertexAttribArrayType: vertexAttribArrayType, 
    vertexAttribArrayStride: vertexAttribArrayStride, 
    vertexAttribArraySize: vertexAttribArraySize, 
    vertexAttribArrayPointer: vertexAttribArrayPointer, 
    vertexAttribArrayNormalized: vertexAttribArrayNormalized, 
    vertexAttribArrayEnabled: vertexAttribArrayEnabled, 
    vertexAttribArrayBufferBinding: vertexAttribArrayBufferBinding, 
    version: version, 
    vendor: vendor, 
    validateStatus: validateStatus, 
    unsignedShort565: unsignedShort565, 
    unsignedShort5551: unsignedShort5551, 
    unsignedShort4444: unsignedShort4444, 
    unsignedShort: unsignedShort, 
    unsignedInt: unsignedInt, 
    unsignedByte: unsignedByte, 
    unpackPremultiplyAlphaWebgl: unpackPremultiplyAlphaWebgl, 
    unpackFlipYWebgl: unpackFlipYWebgl, 
    unpackColorspaceConversionWebgl: unpackColorspaceConversionWebgl, 
    unpackAlignment: unpackAlignment, 
    triangleStrip: triangleStrip, 
    triangleFan: triangleFan, 
    triangles: triangles, 
    textureWrapT: textureWrapT, 
    textureWrapS: textureWrapS, 
    textureMinFilter: textureMinFilter, 
    textureMagFilter: textureMagFilter, 
    textureCubeMapPositiveZ: textureCubeMapPositiveZ, 
    textureCubeMapPositiveY: textureCubeMapPositiveY, 
    textureCubeMapPositiveX: textureCubeMapPositiveX, 
    textureCubeMapNegativeZ: textureCubeMapNegativeZ, 
    textureCubeMapNegativeY: textureCubeMapNegativeY, 
    textureCubeMapNegativeX: textureCubeMapNegativeX, 
    textureCubeMap: textureCubeMap, 
    textureBindingCubeMap: textureBindingCubeMap, 
    textureBinding2d: textureBinding2d, 
    texture2d: texture2d, 
    texture9: texture9, 
    texture8: texture8, 
    texture7: texture7, 
    texture6: texture6, 
    texture5: texture5, 
    texture4: texture4, 
    texture31: texture31, 
    texture30: texture30, 
    texture3: texture3, 
    texture29: texture29, 
    texture28: texture28, 
    texture27: texture27, 
    texture26: texture26, 
    texture25: texture25, 
    texture24: texture24, 
    texture23: texture23, 
    texture22: texture22, 
    texture21: texture21, 
    texture20: texture20, 
    texture2: texture2, 
    texture19: texture19, 
    texture18: texture18, 
    texture17: texture17, 
    texture16: texture16, 
    texture15: texture15, 
    texture14: texture14, 
    texture13: texture13, 
    texture12: texture12, 
    texture11: texture11, 
    texture10: texture10, 
    texture1: texture1, 
    texture0: texture0, 
    texture: texture, 
    subpixelBits: subpixelBits, 
    streamDraw: streamDraw, 
    stencilWritemask: stencilWritemask, 
    stencilValueMask: stencilValueMask, 
    stencilTest: stencilTest, 
    stencilRef: stencilRef, 
    stencilPassDepthPass: stencilPassDepthPass, 
    stencilPassDepthFail: stencilPassDepthFail, 
    stencilIndex8: stencilIndex8, 
    stencilIndex: stencilIndex, 
    stencilFunc: stencilFunc, 
    stencilFail: stencilFail, 
    stencilClearValue: stencilClearValue, 
    stencilBufferBit: stencilBufferBit, 
    stencilBits: stencilBits, 
    stencilBackWritemask: stencilBackWritemask, 
    stencilBackValueMask: stencilBackValueMask, 
    stencilBackRef: stencilBackRef, 
    stencilBackPassDepthPass: stencilBackPassDepthPass, 
    stencilBackPassDepthFail: stencilBackPassDepthFail, 
    stencilBackFunc: stencilBackFunc, 
    stencilBackFail: stencilBackFail, 
    stencilAttachment: stencilAttachment, 
    staticDraw: staticDraw, 
    srcColor: srcColor, 
    srcAlphaSaturate: srcAlphaSaturate, 
    srcAlpha: srcAlpha, 
    "short": $$short, 
    shadingLanguageVersion: shadingLanguageVersion, 
    shaderType: shaderType, 
    scissorTest: scissorTest, 
    scissorBox: scissorBox, 
    sampleCoverageValue: sampleCoverageValue, 
    sampleCoverageInvert: sampleCoverageInvert, 
    sampleCoverage: sampleCoverage, 
    sampleBuffers: sampleBuffers, 
    sampleAlphaToCoverage: sampleAlphaToCoverage, 
    samples: samples, 
    samplerCube: samplerCube, 
    sampler2d: sampler2d, 
    rgba4: rgba4, 
    rgba: rgba, 
    rgb5A1: rgb5A1, 
    rgb565: rgb565, 
    rgb: rgb, 
    replace: replace, 
    repeat: repeat, 
    renderer: renderer, 
    renderbufferWidth: renderbufferWidth, 
    renderbufferStencilSize: renderbufferStencilSize, 
    renderbufferRedSize: renderbufferRedSize, 
    renderbufferInternalFormat: renderbufferInternalFormat, 
    renderbufferHeight: renderbufferHeight, 
    renderbufferGreenSize: renderbufferGreenSize, 
    renderbufferDepthSize: renderbufferDepthSize, 
    renderbufferBlueSize: renderbufferBlueSize, 
    renderbufferBinding: renderbufferBinding, 
    renderbufferAlphaSize: renderbufferAlphaSize, 
    renderbuffer: renderbuffer, 
    redBits: redBits, 
    polygonOffsetUnits: polygonOffsetUnits, 
    polygonOffsetFill: polygonOffsetFill, 
    polygonOffsetFactor: polygonOffsetFactor, 
    points: points, 
    packAlignment: packAlignment, 
    outOfMemory: outOfMemory, 
    oneMinusSrcColor: oneMinusSrcColor, 
    oneMinusSrcAlpha: oneMinusSrcAlpha, 
    oneMinusDstColor: oneMinusDstColor, 
    oneMinusDstAlpha: oneMinusDstAlpha, 
    oneMinusConstantColor: oneMinusConstantColor, 
    oneMinusConstantAlpha: oneMinusConstantAlpha, 
    one: one, 
    noError: noError, 
    notequal: notequal, 
    none: none, 
    nicest: nicest, 
    never: never, 
    nearestMipmapNearest: nearestMipmapNearest, 
    nearestMipmapLinear: nearestMipmapLinear, 
    nearest: nearest, 
    mirroredRepeat: mirroredRepeat, 
    mediumInt: mediumInt, 
    mediumFloat: mediumFloat, 
    maxViewportDims: maxViewportDims, 
    maxVertexUniformVectors: maxVertexUniformVectors, 
    maxVertexTextureImageUnits: maxVertexTextureImageUnits, 
    maxVertexAttribs: maxVertexAttribs, 
    maxVaryingVectors: maxVaryingVectors, 
    maxTextureSize: maxTextureSize, 
    maxTextureImageUnits: maxTextureImageUnits, 
    maxRenderbufferSize: maxRenderbufferSize, 
    maxFragmentUniformVectors: maxFragmentUniformVectors, 
    maxCubeMapTextureSize: maxCubeMapTextureSize, 
    maxCombinedTextureImageUnits: maxCombinedTextureImageUnits, 
    luminanceAlpha: luminanceAlpha, 
    luminance: luminance, 
    lowInt: lowInt, 
    lowFloat: lowFloat, 
    linkStatus: linkStatus, 
    lineWidth: lineWidth, 
    lineStrip: lineStrip, 
    lineLoop: lineLoop, 
    lines: lines, 
    linearMipmapNearest: linearMipmapNearest, 
    linearMipmapLinear: linearMipmapLinear, 
    linear: linear, 
    less: less, 
    lequal: lequal, 
    keep: keep, 
    invert: invert, 
    invalidValue: invalidValue, 
    invalidOperation: invalidOperation, 
    invalidFramebufferOperation: invalidFramebufferOperation, 
    invalidEnum: invalidEnum, 
    intVec4: intVec4, 
    intVec3: intVec3, 
    intVec2: intVec2, 
    "int": $$int, 
    incrWrap: incrWrap, 
    incr: incr, 
    implementationColorReadType: implementationColorReadType, 
    implementationColorReadFormat: implementationColorReadFormat, 
    highInt: highInt, 
    highFloat: highFloat, 
    greenBits: greenBits, 
    greater: greater, 
    gequal: gequal, 
    generateMipmapHint: generateMipmapHint, 
    funcSubtract: funcSubtract, 
    funcReverseSubtract: funcReverseSubtract, 
    funcAdd: funcAdd, 
    frontFace: frontFace, 
    frontAndBack: frontAndBack, 
    front: front, 
    framebufferUnsupported: framebufferUnsupported, 
    framebufferIncompleteMissingAttachment: framebufferIncompleteMissingAttachment, 
    framebufferIncompleteDimensions: framebufferIncompleteDimensions, 
    framebufferIncompleteAttachment: framebufferIncompleteAttachment, 
    framebufferComplete: framebufferComplete, 
    framebufferBinding: framebufferBinding, 
    framebufferAttachmentTextureLevel: framebufferAttachmentTextureLevel, 
    framebufferAttachmentTextureCubeMapFace: framebufferAttachmentTextureCubeMapFace, 
    framebufferAttachmentObjectType: framebufferAttachmentObjectType, 
    framebufferAttachmentObjectName: framebufferAttachmentObjectName, 
    framebuffer: framebuffer, 
    fragmentShader: fragmentShader, 
    floatVec4: floatVec4, 
    floatVec3: floatVec3, 
    floatVec2: floatVec2, 
    floatMat4: floatMat4, 
    floatMat3: floatMat3, 
    floatMat2: floatMat2, 
    "float": $$float, 
    fastest: fastest, 
    equal: equal, 
    elementArrayBufferBinding: elementArrayBufferBinding, 
    elementArrayBuffer: elementArrayBuffer, 
    dynamicDraw: dynamicDraw, 
    dstColor: dstColor, 
    dstAlpha: dstAlpha, 
    dontCare: dontCare, 
    dither: dither, 
    depthWritemask: depthWritemask, 
    depthTest: depthTest, 
    depthStencilAttachment: depthStencilAttachment, 
    depthStencil: depthStencil, 
    depthRange: depthRange, 
    depthFunc: depthFunc, 
    depthComponent16: depthComponent16, 
    depthComponent: depthComponent, 
    depthClearValue: depthClearValue, 
    depthBufferBit: depthBufferBit, 
    depthBits: depthBits, 
    depthAttachment: depthAttachment, 
    deleteStatus: deleteStatus, 
    decrWrap: decrWrap, 
    decr: decr, 
    cw: cw, 
    currentVertexAttrib: currentVertexAttrib, 
    currentProgram: currentProgram, 
    cullFaceMode: cullFaceMode, 
    cullFace: cullFace, 
    contextLostWebgl: contextLostWebgl, 
    constantColor: constantColor, 
    constantAlpha: constantAlpha, 
    compressedTextureFormats: compressedTextureFormats, 
    compileStatus: compileStatus, 
    colorWritemask: colorWritemask, 
    colorClearValue: colorClearValue, 
    colorBufferBit: colorBufferBit, 
    colorAttachment0: colorAttachment0, 
    clampToEdge: clampToEdge, 
    ccw: ccw, 
    "byte": $$byte, 
    bufferUsage: bufferUsage, 
    bufferSize: bufferSize, 
    browserDefaultWebgl: browserDefaultWebgl, 
    boolVec4: boolVec4, 
    boolVec3: boolVec3, 
    boolVec2: boolVec2, 
    bool: bool, 
    blueBits: blueBits, 
    blendSrcRgb: blendSrcRgb, 
    blendSrcAlpha: blendSrcAlpha, 
    blendEquationRgb: blendEquationRgb, 
    blendEquationAlpha: blendEquationAlpha, 
    blendEquation: blendEquation, 
    blendDstRgb: blendDstRgb, 
    blendDstAlpha: blendDstAlpha, 
    blendColor: blendColor, 
    blend: blend, 
    back: back, 
    attachedShaders: attachedShaders, 
    arrayBufferBinding: arrayBufferBinding, 
    arrayBuffer: arrayBuffer, 
    always: always, 
    alphaBits: alphaBits, 
    alpha: alpha, 
    aliasedPointSizeRange: aliasedPointSizeRange, 
    aliasedLineWidthRange: aliasedLineWidthRange, 
    activeUniforms: activeUniforms, 
    activeTexture: activeTexture, 
    activeAttributes: activeAttributes
};

},{"Graphics.WebGL.Raw.Types":"/Users/gene/Programming/pure_morph/output/Graphics.WebGL.Raw.Types/index.js"}],"/Users/gene/Programming/pure_morph/output/Graphics.WebGL.Raw.Types/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Data_ArrayBuffer_Types = require("Data.ArrayBuffer.Types");
module.exports = {};

},{"Data.ArrayBuffer.Types":"/Users/gene/Programming/pure_morph/output/Data.ArrayBuffer.Types/index.js"}],"/Users/gene/Programming/pure_morph/output/Graphics.WebGL.Raw.Util/foreign.js":[function(require,module,exports){
"use strict";

// module Graphics.WebGL.Raw.Util

exports.toMaybeImpl = function (Nothing, Just, x) {
  if (x === undefined || x === null) {
    return Nothing;
  } else {
    return Just(x);
  }
}

exports.nullAsEmpty = function (x) {
  if (x === undefined || x === null) {
    return [];
  } else {
    return x;
  }
}

},{}],"/Users/gene/Programming/pure_morph/output/Graphics.WebGL.Raw.Util/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var $foreign = require("./foreign");
var Data_Function = require("Data.Function");
var Data_Maybe = require("Data.Maybe");
var toMaybe = function (x) {
    return $foreign.toMaybeImpl(Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);
};
module.exports = {
    toMaybe: toMaybe, 
    nullAsEmpty: $foreign.nullAsEmpty
};

},{"./foreign":"/Users/gene/Programming/pure_morph/output/Graphics.WebGL.Raw.Util/foreign.js","Data.Function":"/Users/gene/Programming/pure_morph/output/Data.Function/index.js","Data.Maybe":"/Users/gene/Programming/pure_morph/output/Data.Maybe/index.js"}],"/Users/gene/Programming/pure_morph/output/Graphics.WebGL.Raw/foreign.js":[function(require,module,exports){
"use strict";

// module Graphics.WebGL.Raw

exports.activeTextureImpl = function (webgl, texture) {
  return function () {
    return webgl.activeTexture(texture);
  };
}

exports.attachShaderImpl = function (webgl, program, shader) {
  return function () {
    return webgl.attachShader(program, shader);
  };
}

exports.bindAttribLocationImpl = function (webgl, program, index, name) {
  return function () {
    return webgl.bindAttribLocation(program, index, name);
  };
}

exports.bindBufferImpl = function (webgl, target, buffer) {
  return function () {
    return webgl.bindBuffer(target, buffer);
  };
}

exports.bindFramebufferImpl = function (webgl, target, framebuffer) {
  return function () {
    return webgl.bindFramebuffer(target, framebuffer);
  };
}

exports.bindRenderbufferImpl = function (webgl, target, renderbuffer) {
  return function () {
    return webgl.bindRenderbuffer(target, renderbuffer);
  };
}

exports.bindTextureImpl = function (webgl, target, texture) {
  return function () {
    return webgl.bindTexture(target, texture);
  };
}

exports.blendColorImpl = function (webgl, red, green, blue, alpha) {
  return function () {
    return webgl.blendColor(red, green, blue, alpha);
  };
}

exports.blendEquationImpl = function (webgl, mode) {
  return function () {
    return webgl.blendEquation(mode);
  };
}

exports.blendEquationSeparateImpl = function (webgl, modeRGB, modeAlpha) {
  return function () {
    return webgl.blendEquationSeparate(modeRGB, modeAlpha);
  };
}

exports.blendFuncImpl = function (webgl, sfactor, dfactor) {
  return function () {
    return webgl.blendFunc(sfactor, dfactor);
  };
}

exports.blendFuncSeparateImpl = function (webgl, srcRGB, dstRGB, srcAlpha, dstAlpha) {
  return function () {
    return webgl.blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha);
  };
}

exports.bufferDataImpl = function (webgl, target, data, usage) {
  return function () {
    return webgl.bufferData(target, data, usage);
  };
}

exports.bufferData_Impl = function (webgl, target, size, usage) {
  return function () {
    return webgl.bufferData(target, size, usage);
  };
}

exports.bufferSubDataImpl = function (webgl, target, offset, data) {
  return function () {
    return webgl.bufferSubData(target, offset, data);
  };
}

exports.checkFramebufferStatusImpl = function (webgl, target) {
  return function () {
    return webgl.checkFramebufferStatus(target);
  };
}

exports.clearImpl = function (webgl, mask) {
  return function () {
    return webgl.clear(mask);
  };
}

exports.clearColorImpl = function (webgl, red, green, blue, alpha) {
  return function () {
    return webgl.clearColor(red, green, blue, alpha);
  };
}

exports.clearDepthImpl = function (webgl, depth) {
  return function () {
    return webgl.clearDepth(depth);
  };
}

exports.clearStencilImpl = function (webgl, s) {
  return function () {
    return webgl.clearStencil(s);
  };
}

exports.colorMaskImpl = function (webgl, red, green, blue, alpha) {
  return function () {
    return webgl.colorMask(red, green, blue, alpha);
  };
}

exports.compileShaderImpl = function (webgl, shader) {
  return function () {
    return webgl.compileShader(shader);
  };
}

exports.compressedTexImage2DImpl = function (webgl, target, level, internalformat, width, height, border, data) {
  return function () {
    return webgl.compressedTexImage2D(target, level, internalformat, width, height, border, data);
  };
}

exports.compressedTexSubImage2DImpl = function (webgl, target, level, xoffset, yoffset, width, height, format, data) {
  return function () {
    return webgl.compressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, data);
  };
}

exports.copyTexImage2DImpl = function (webgl, target, level, internalformat, x, y, width, height, border) {
  return function () {
    return webgl.copyTexImage2D(target, level, internalformat, x, y, width, height, border);
  };
}

exports.copyTexSubImage2DImpl = function (webgl, target, level, xoffset, yoffset, x, y, width, height) {
  return function () {
    return webgl.copyTexSubImage2D(target, level, xoffset, yoffset, x, y, width, height);
  };
}

exports.createBufferImpl = function (webgl) {
  return function () {
    return webgl.createBuffer();
  };
}

exports.createFramebufferImpl = function (webgl) {
  return function () {
    return webgl.createFramebuffer();
  };
}

exports.createProgramImpl = function (webgl) {
  return function () {
    return webgl.createProgram();
  };
}

exports.createRenderbufferImpl = function (webgl) {
  return function () {
    return webgl.createRenderbuffer();
  };
}

exports.createShaderImpl = function (webgl, type) {
  return function () {
    return webgl.createShader(type);
  };
}

exports.createTextureImpl = function (webgl) {
  return function () {
    return webgl.createTexture();
  };
}

exports.cullFaceImpl = function (webgl, mode) {
  return function () {
    return webgl.cullFace(mode);
  };
}

exports.deleteBufferImpl = function (webgl, buffer) {
  return function () {
    return webgl.deleteBuffer(buffer);
  };
}

exports.deleteFramebufferImpl = function (webgl, framebuffer) {
  return function () {
    return webgl.deleteFramebuffer(framebuffer);
  };
}

exports.deleteProgramImpl = function (webgl, program) {
  return function () {
    return webgl.deleteProgram(program);
  };
}

exports.deleteRenderbufferImpl = function (webgl, renderbuffer) {
  return function () {
    return webgl.deleteRenderbuffer(renderbuffer);
  };
}

exports.deleteShaderImpl = function (webgl, shader) {
  return function () {
    return webgl.deleteShader(shader);
  };
}

exports.deleteTextureImpl = function (webgl, texture) {
  return function () {
    return webgl.deleteTexture(texture);
  };
}

exports.depthFuncImpl = function (webgl, func) {
  return function () {
    return webgl.depthFunc(func);
  };
}

exports.depthMaskImpl = function (webgl, flag) {
  return function () {
    return webgl.depthMask(flag);
  };
}

exports.depthRangeImpl = function (webgl, zNear, zFar) {
  return function () {
    return webgl.depthRange(zNear, zFar);
  };
}

exports.detachShaderImpl = function (webgl, program, shader) {
  return function () {
    return webgl.detachShader(program, shader);
  };
}

exports.disableImpl = function (webgl, cap) {
  return function () {
    return webgl.disable(cap);
  };
}

exports.disableVertexAttribArrayImpl = function (webgl, index) {
  return function () {
    return webgl.disableVertexAttribArray(index);
  };
}

exports.drawArraysImpl = function (webgl, mode, first, count) {
  return function () {
    return webgl.drawArrays(mode, first, count);
  };
}

exports.drawElementsImpl = function (webgl, mode, count, type, offset) {
  return function () {
    return webgl.drawElements(mode, count, type, offset);
  };
}

exports.enableImpl = function (webgl, cap) {
  return function () {
    return webgl.enable(cap);
  };
}

exports.enableVertexAttribArrayImpl = function (webgl, index) {
  return function () {
    return webgl.enableVertexAttribArray(index);
  };
}

exports.finishImpl = function (webgl) {
  return function () {
    return webgl.finish();
  };
}

exports.flushImpl = function (webgl) {
  return function () {
    return webgl.flush();
  };
}

exports.framebufferRenderbufferImpl = function (webgl, target, attachment, renderbuffertarget, renderbuffer) {
  return function () {
    return webgl.framebufferRenderbuffer(target, attachment, renderbuffertarget, renderbuffer);
  };
}

exports.framebufferTexture2DImpl = function (webgl, target, attachment, textarget, texture, level) {
  return function () {
    return webgl.framebufferTexture2D(target, attachment, textarget, texture, level);
  };
}

exports.frontFaceImpl = function (webgl, mode) {
  return function () {
    return webgl.frontFace(mode);
  };
}

exports.generateMipmapImpl = function (webgl, target) {
  return function () {
    return webgl.generateMipmap(target);
  };
}

exports.getActiveAttribImpl = function (webgl, program, index) {
  return function () {
    return webgl.getActiveAttrib(program, index);
  };
}

exports.getActiveUniformImpl = function (webgl, program, index) {
  return function () {
    return webgl.getActiveUniform(program, index);
  };
}

exports.getAttachedShadersImpl = function (webgl, program) {
  return function () {
    return webgl.getAttachedShaders(program);
  };
}

exports.getAttribLocationImpl = function (webgl, program, name) {
  return function () {
    return webgl.getAttribLocation(program, name);
  };
}

exports.getBufferParameterImpl = function (webgl, target, pname) {
  return function () {
    return webgl.getBufferParameter(target, pname);
  };
}

exports.getContextAttributesImpl = function (webgl) {
  return function () {
    return webgl.getContextAttributes();
  };
}

exports.getErrorImpl = function (webgl) {
  return function () {
    return webgl.getError();
  };
}

exports.getExtensionImpl = function (webgl, name) {
  return function () {
    return webgl.getExtension(name);
  };
}

exports.getFramebufferAttachmentParameterImpl = function (webgl, target, attachment, pname) {
  return function () {
    return webgl.getFramebufferAttachmentParameter(target, attachment, pname);
  };
}

exports.getParameterImpl = function (webgl, pname) {
  return function () {
    return webgl.getParameter(pname);
  };
}

exports.getProgramInfoLogImpl = function (webgl, program) {
  return function () {
    return webgl.getProgramInfoLog(program);
  };
}

exports.getProgramParameterImpl = function (webgl, program, pname) {
  return function () {
    return webgl.getProgramParameter(program, pname);
  };
}

exports.getRenderbufferParameterImpl = function (webgl, target, pname) {
  return function () {
    return webgl.getRenderbufferParameter(target, pname);
  };
}

exports.getShaderInfoLogImpl = function (webgl, shader) {
  return function () {
    return webgl.getShaderInfoLog(shader);
  };
}

exports.getShaderParameterImpl = function (webgl, shader, pname) {
  return function () {
    return webgl.getShaderParameter(shader, pname);
  };
}

exports.getShaderPrecisionFormatImpl = function (webgl, shadertype, precisiontype) {
  return function () {
    return webgl.getShaderPrecisionFormat(shadertype, precisiontype);
  };
}

exports.getShaderSourceImpl = function (webgl, shader) {
  return function () {
    return webgl.getShaderSource(shader);
  };
}

exports.getSupportedExtensionsImpl = function (webgl) {
  return function () {
    return webgl.getSupportedExtensions();
  };
}

exports.getTexParameterImpl = function (webgl, target, pname) {
  return function () {
    return webgl.getTexParameter(target, pname);
  };
}

exports.getUniformImpl = function (webgl, program, location) {
  return function () {
    return webgl.getUniform(program, location);
  };
}

exports.getUniformLocationImpl = function (webgl, program, name) {
  return function () {
    return webgl.getUniformLocation(program, name);
  };
}

exports.getVertexAttribImpl = function (webgl, index, pname) {
  return function () {
    return webgl.getVertexAttrib(index, pname);
  };
}

exports.getVertexAttribOffsetImpl = function (webgl, index, pname) {
  return function () {
    return webgl.getVertexAttribOffset(index, pname);
  };
}

exports.hintImpl = function (webgl, target, mode) {
  return function () {
    return webgl.hint(target, mode);
  };
}

exports.isBufferImpl = function (webgl, buffer) {
  return function () {
    return webgl.isBuffer(buffer);
  };
}

exports.isContextLostImpl = function (webgl) {
  return function () {
    return webgl.isContextLost();
  };
}

exports.isEnabledImpl = function (webgl, cap) {
  return function () {
    return webgl.isEnabled(cap);
  };
}

exports.isFramebufferImpl = function (webgl, framebuffer) {
  return function () {
    return webgl.isFramebuffer(framebuffer);
  };
}

exports.isProgramImpl = function (webgl, program) {
  return function () {
    return webgl.isProgram(program);
  };
}

exports.isRenderbufferImpl = function (webgl, renderbuffer) {
  return function () {
    return webgl.isRenderbuffer(renderbuffer);
  };
}

exports.isShaderImpl = function (webgl, shader) {
  return function () {
    return webgl.isShader(shader);
  };
}

exports.isTextureImpl = function (webgl, texture) {
  return function () {
    return webgl.isTexture(texture);
  };
}

exports.lineWidthImpl = function (webgl, width) {
  return function () {
    return webgl.lineWidth(width);
  };
}

exports.linkProgramImpl = function (webgl, program) {
  return function () {
    return webgl.linkProgram(program);
  };
}

exports.pixelStoreiImpl = function (webgl, pname, param) {
  return function () {
    return webgl.pixelStorei(pname, param);
  };
}

exports.polygonOffsetImpl = function (webgl, factor, units) {
  return function () {
    return webgl.polygonOffset(factor, units);
  };
}

exports.readPixelsImpl = function (webgl, x, y, width, height, format, type, pixels) {
  return function () {
    return webgl.readPixels(x, y, width, height, format, type, pixels);
  };
}

exports.renderbufferStorageImpl = function (webgl, target, internalformat, width, height) {
  return function () {
    return webgl.renderbufferStorage(target, internalformat, width, height);
  };
}

exports.sampleCoverageImpl = function (webgl, value, invert) {
  return function () {
    return webgl.sampleCoverage(value, invert);
  };
}

exports.scissorImpl = function (webgl, x, y, width, height) {
  return function () {
    return webgl.scissor(x, y, width, height);
  };
}

exports.shaderSourceImpl = function (webgl, shader, source) {
  return function () {
    return webgl.shaderSource(shader, source);
  };
}

exports.stencilFuncImpl = function (webgl, func, ref, mask) {
  return function () {
    return webgl.stencilFunc(func, ref, mask);
  };
}

exports.stencilFuncSeparateImpl = function (webgl, face, func, ref, mask) {
  return function () {
    return webgl.stencilFuncSeparate(face, func, ref, mask);
  };
}

exports.stencilMaskImpl = function (webgl, mask) {
  return function () {
    return webgl.stencilMask(mask);
  };
}

exports.stencilMaskSeparateImpl = function (webgl, face, mask) {
  return function () {
    return webgl.stencilMaskSeparate(face, mask);
  };
}

exports.stencilOpImpl = function (webgl, fail, zfail, zpass) {
  return function () {
    return webgl.stencilOp(fail, zfail, zpass);
  };
}

exports.stencilOpSeparateImpl = function (webgl, face, fail, zfail, zpass) {
  return function () {
    return webgl.stencilOpSeparate(face, fail, zfail, zpass);
  };
}

exports.texImage2DImpl = function (webgl, target, level, internalformat, format, type, source) {
  return function () {
    return webgl.texImage2D(target, level, internalformat, format, type, source);
  };
}

exports.texImage2D_Impl = function (webgl, target, level, internalformat, width, height, border, format, type, pixels) {
  return function () {
    return webgl.texImage2D(target, level, internalformat, width, height, border, format, type, pixels);
  };
}

exports.texParameterfImpl = function (webgl, target, pname, param) {
  return function () {
    return webgl.texParameterf(target, pname, param);
  };
}

exports.texParameteriImpl = function (webgl, target, pname, param) {
  return function () {
    return webgl.texParameteri(target, pname, param);
  };
}

exports.texSubImage2DImpl = function (webgl, target, level, xoffset, yoffset, format, type, source) {
  return function () {
    return webgl.texSubImage2D(target, level, xoffset, yoffset, format, type, source);
  };
}

exports.texSubImage2D_Impl = function (webgl, target, level, xoffset, yoffset, width, height, format, type, pixels) {
  return function () {
    return webgl.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels);
  };
}

exports.uniform1fImpl = function (webgl, location, x) {
  return function () {
    return webgl.uniform1f(location, x);
  };
}

exports.uniform1fvImpl = function (webgl, location, v) {
  return function () {
    return webgl.uniform1fv(location, v);
  };
}

exports.uniform1fv_Impl = function (webgl, location, v) {
  return function () {
    return webgl.uniform1fv(location, v);
  };
}

exports.uniform1iImpl = function (webgl, location, x) {
  return function () {
    return webgl.uniform1i(location, x);
  };
}

exports.uniform1ivImpl = function (webgl, location, v) {
  return function () {
    return webgl.uniform1iv(location, v);
  };
}

exports.uniform1iv_Impl = function (webgl, location, v) {
  return function () {
    return webgl.uniform1iv(location, v);
  };
}

exports.uniform2fImpl = function (webgl, location, x, y) {
  return function () {
    return webgl.uniform2f(location, x, y);
  };
}

exports.uniform2fvImpl = function (webgl, location, v) {
  return function () {
    return webgl.uniform2fv(location, v);
  };
}

exports.uniform2fv_Impl = function (webgl, location, v) {
  return function () {
    return webgl.uniform2fv(location, v);
  };
}

exports.uniform2iImpl = function (webgl, location, x, y) {
  return function () {
    return webgl.uniform2i(location, x, y);
  };
}

exports.uniform2ivImpl = function (webgl, location, v) {
  return function () {
    return webgl.uniform2iv(location, v);
  };
}

exports.uniform2iv_Impl = function (webgl, location, v) {
  return function () {
    return webgl.uniform2iv(location, v);
  };
}

exports.uniform3fImpl = function (webgl, location, x, y, z) {
  return function () {
    return webgl.uniform3f(location, x, y, z);
  };
}

exports.uniform3fvImpl = function (webgl, location, v) {
  return function () {
    return webgl.uniform3fv(location, v);
  };
}

exports.uniform3fv_Impl = function (webgl, location, v) {
  return function () {
    return webgl.uniform3fv(location, v);
  };
}

exports.uniform3iImpl = function (webgl, location, x, y, z) {
  return function () {
    return webgl.uniform3i(location, x, y, z);
  };
}

exports.uniform3ivImpl = function (webgl, location, v) {
  return function () {
    return webgl.uniform3iv(location, v);
  };
}

exports.uniform3iv_Impl = function (webgl, location, v) {
  return function () {
    return webgl.uniform3iv(location, v);
  };
}

exports.uniform4fImpl = function (webgl, location, x, y, z, w) {
  return function () {
    return webgl.uniform4f(location, x, y, z, w);
  };
}

exports.uniform4fvImpl = function (webgl, location, v) {
  return function () {
    return webgl.uniform4fv(location, v);
  };
}

exports.uniform4fv_Impl = function (webgl, location, v) {
  return function () {
    return webgl.uniform4fv(location, v);
  };
}

exports.uniform4iImpl = function (webgl, location, x, y, z, w) {
  return function () {
    return webgl.uniform4i(location, x, y, z, w);
  };
}

exports.uniform4ivImpl = function (webgl, location, v) {
  return function () {
    return webgl.uniform4iv(location, v);
  };
}

exports.uniform4iv_Impl = function (webgl, location, v) {
  return function () {
    return webgl.uniform4iv(location, v);
  };
}

exports.uniformMatrix2fvImpl = function (webgl, location, transpose, value) {
  return function () {
    return webgl.uniformMatrix2fv(location, transpose, value);
  };
}

exports.uniformMatrix2fv_Impl = function (webgl, location, transpose, value) {
  return function () {
    return webgl.uniformMatrix2fv(location, transpose, value);
  };
}

exports.uniformMatrix3fvImpl = function (webgl, location, transpose, value) {
  return function () {
    return webgl.uniformMatrix3fv(location, transpose, value);
  };
}

exports.uniformMatrix3fv_Impl = function (webgl, location, transpose, value) {
  return function () {
    return webgl.uniformMatrix3fv(location, transpose, value);
  };
}

exports.uniformMatrix4fvImpl = function (webgl, location, transpose, value) {
  return function () {
    return webgl.uniformMatrix4fv(location, transpose, value);
  };
}

exports.uniformMatrix4fv_Impl = function (webgl, location, transpose, value) {
  return function () {
    return webgl.uniformMatrix4fv(location, transpose, value);
  };
}

exports.useProgramImpl = function (webgl, program) {
  return function () {
    return webgl.useProgram(program);
  };
}

exports.validateProgramImpl = function (webgl, program) {
  return function () {
    return webgl.validateProgram(program);
  };
}

exports.vertexAttrib1fImpl = function (webgl, indx, x) {
  return function () {
    return webgl.vertexAttrib1f(indx, x);
  };
}

exports.vertexAttrib1fvImpl = function (webgl, indx, values) {
  return function () {
    return webgl.vertexAttrib1fv(indx, values);
  };
}

exports.vertexAttrib1fv_Impl = function (webgl, indx, values) {
  return function () {
    return webgl.vertexAttrib1fv(indx, values);
  };
}

exports.vertexAttrib2fImpl = function (webgl, indx, x, y) {
  return function () {
    return webgl.vertexAttrib2f(indx, x, y);
  };
}

exports.vertexAttrib2fvImpl = function (webgl, indx, values) {
  return function () {
    return webgl.vertexAttrib2fv(indx, values);
  };
}

exports.vertexAttrib2fv_Impl = function (webgl, indx, values) {
  return function () {
    return webgl.vertexAttrib2fv(indx, values);
  };
}

exports.vertexAttrib3fImpl = function (webgl, indx, x, y, z) {
  return function () {
    return webgl.vertexAttrib3f(indx, x, y, z);
  };
}

exports.vertexAttrib3fvImpl = function (webgl, indx, values) {
  return function () {
    return webgl.vertexAttrib3fv(indx, values);
  };
}

exports.vertexAttrib3fv_Impl = function (webgl, indx, values) {
  return function () {
    return webgl.vertexAttrib3fv(indx, values);
  };
}

exports.vertexAttrib4fImpl = function (webgl, indx, x, y, z, w) {
  return function () {
    return webgl.vertexAttrib4f(indx, x, y, z, w);
  };
}

exports.vertexAttrib4fvImpl = function (webgl, indx, values) {
  return function () {
    return webgl.vertexAttrib4fv(indx, values);
  };
}

exports.vertexAttrib4fv_Impl = function (webgl, indx, values) {
  return function () {
    return webgl.vertexAttrib4fv(indx, values);
  };
}

exports.vertexAttribPointerImpl = function (webgl, indx, size, type, normalized, stride, offset) {
  return function () {
    return webgl.vertexAttribPointer(indx, size, type, normalized, stride, offset);
  };
}

exports.viewportImpl = function (webgl, x, y, width, height) {
  return function () {
    return webgl.viewport(x, y, width, height);
  };
}


},{}],"/Users/gene/Programming/pure_morph/output/Graphics.WebGL.Raw/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var $foreign = require("./foreign");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_ArrayBuffer_Types = require("Data.ArrayBuffer.Types");
var Data_Function = require("Data.Function");
var Data_Maybe = require("Data.Maybe");
var Graphics_Canvas = require("Graphics.Canvas");
var Graphics_WebGL_Raw_Types = require("Graphics.WebGL.Raw.Types");
var Graphics_WebGL_Raw_Util = require("Graphics.WebGL.Raw.Util");
var Prelude = require("Prelude");
var viewport = function (webgl) {
    return function (x) {
        return function (y) {
            return function (width) {
                return function (height) {
                    return $foreign.viewportImpl(webgl, x, y, width, height);
                };
            };
        };
    };
};
var vertexAttribPointer = function (webgl) {
    return function (indx) {
        return function (size) {
            return function (type$prime) {
                return function (normalized) {
                    return function (stride) {
                        return function (offset) {
                            return $foreign.vertexAttribPointerImpl(webgl, indx, size, type$prime, normalized, stride, offset);
                        };
                    };
                };
            };
        };
    };
};
var vertexAttrib4fv_ = function (webgl) {
    return function (indx) {
        return function (values) {
            return $foreign.vertexAttrib4fv_Impl(webgl, indx, values);
        };
    };
};
var vertexAttrib4fv = function (webgl) {
    return function (indx) {
        return function (values) {
            return $foreign.vertexAttrib4fvImpl(webgl, indx, values);
        };
    };
};
var vertexAttrib4f = function (webgl) {
    return function (indx) {
        return function (x) {
            return function (y) {
                return function (z) {
                    return function (w) {
                        return $foreign.vertexAttrib4fImpl(webgl, indx, x, y, z, w);
                    };
                };
            };
        };
    };
};
var vertexAttrib3fv_ = function (webgl) {
    return function (indx) {
        return function (values) {
            return $foreign.vertexAttrib3fv_Impl(webgl, indx, values);
        };
    };
};
var vertexAttrib3fv = function (webgl) {
    return function (indx) {
        return function (values) {
            return $foreign.vertexAttrib3fvImpl(webgl, indx, values);
        };
    };
};
var vertexAttrib3f = function (webgl) {
    return function (indx) {
        return function (x) {
            return function (y) {
                return function (z) {
                    return $foreign.vertexAttrib3fImpl(webgl, indx, x, y, z);
                };
            };
        };
    };
};
var vertexAttrib2fv_ = function (webgl) {
    return function (indx) {
        return function (values) {
            return $foreign.vertexAttrib2fv_Impl(webgl, indx, values);
        };
    };
};
var vertexAttrib2fv = function (webgl) {
    return function (indx) {
        return function (values) {
            return $foreign.vertexAttrib2fvImpl(webgl, indx, values);
        };
    };
};
var vertexAttrib2f = function (webgl) {
    return function (indx) {
        return function (x) {
            return function (y) {
                return $foreign.vertexAttrib2fImpl(webgl, indx, x, y);
            };
        };
    };
};
var vertexAttrib1fv_ = function (webgl) {
    return function (indx) {
        return function (values) {
            return $foreign.vertexAttrib1fv_Impl(webgl, indx, values);
        };
    };
};
var vertexAttrib1fv = function (webgl) {
    return function (indx) {
        return function (values) {
            return $foreign.vertexAttrib1fvImpl(webgl, indx, values);
        };
    };
};
var vertexAttrib1f = function (webgl) {
    return function (indx) {
        return function (x) {
            return $foreign.vertexAttrib1fImpl(webgl, indx, x);
        };
    };
};
var validateProgram = function (webgl) {
    return function (program) {
        return $foreign.validateProgramImpl(webgl, program);
    };
};
var useProgram = function (webgl) {
    return function (program) {
        return $foreign.useProgramImpl(webgl, program);
    };
};
var uniformMatrix4fv_ = function (webgl) {
    return function (location) {
        return function (transpose) {
            return function (value) {
                return $foreign.uniformMatrix4fv_Impl(webgl, location, transpose, value);
            };
        };
    };
};
var uniformMatrix4fv = function (webgl) {
    return function (location) {
        return function (transpose) {
            return function (value) {
                return $foreign.uniformMatrix4fvImpl(webgl, location, transpose, value);
            };
        };
    };
};
var uniformMatrix3fv_ = function (webgl) {
    return function (location) {
        return function (transpose) {
            return function (value) {
                return $foreign.uniformMatrix3fv_Impl(webgl, location, transpose, value);
            };
        };
    };
};
var uniformMatrix3fv = function (webgl) {
    return function (location) {
        return function (transpose) {
            return function (value) {
                return $foreign.uniformMatrix3fvImpl(webgl, location, transpose, value);
            };
        };
    };
};
var uniformMatrix2fv_ = function (webgl) {
    return function (location) {
        return function (transpose) {
            return function (value) {
                return $foreign.uniformMatrix2fv_Impl(webgl, location, transpose, value);
            };
        };
    };
};
var uniformMatrix2fv = function (webgl) {
    return function (location) {
        return function (transpose) {
            return function (value) {
                return $foreign.uniformMatrix2fvImpl(webgl, location, transpose, value);
            };
        };
    };
};
var uniform4iv_ = function (webgl) {
    return function (location) {
        return function (v) {
            return $foreign.uniform4iv_Impl(webgl, location, v);
        };
    };
};
var uniform4iv = function (webgl) {
    return function (location) {
        return function (v) {
            return $foreign.uniform4ivImpl(webgl, location, v);
        };
    };
};
var uniform4i = function (webgl) {
    return function (location) {
        return function (x) {
            return function (y) {
                return function (z) {
                    return function (w) {
                        return $foreign.uniform4iImpl(webgl, location, x, y, z, w);
                    };
                };
            };
        };
    };
};
var uniform4fv_ = function (webgl) {
    return function (location) {
        return function (v) {
            return $foreign.uniform4fv_Impl(webgl, location, v);
        };
    };
};
var uniform4fv = function (webgl) {
    return function (location) {
        return function (v) {
            return $foreign.uniform4fvImpl(webgl, location, v);
        };
    };
};
var uniform4f = function (webgl) {
    return function (location) {
        return function (x) {
            return function (y) {
                return function (z) {
                    return function (w) {
                        return $foreign.uniform4fImpl(webgl, location, x, y, z, w);
                    };
                };
            };
        };
    };
};
var uniform3iv_ = function (webgl) {
    return function (location) {
        return function (v) {
            return $foreign.uniform3iv_Impl(webgl, location, v);
        };
    };
};
var uniform3iv = function (webgl) {
    return function (location) {
        return function (v) {
            return $foreign.uniform3ivImpl(webgl, location, v);
        };
    };
};
var uniform3i = function (webgl) {
    return function (location) {
        return function (x) {
            return function (y) {
                return function (z) {
                    return $foreign.uniform3iImpl(webgl, location, x, y, z);
                };
            };
        };
    };
};
var uniform3fv_ = function (webgl) {
    return function (location) {
        return function (v) {
            return $foreign.uniform3fv_Impl(webgl, location, v);
        };
    };
};
var uniform3fv = function (webgl) {
    return function (location) {
        return function (v) {
            return $foreign.uniform3fvImpl(webgl, location, v);
        };
    };
};
var uniform3f = function (webgl) {
    return function (location) {
        return function (x) {
            return function (y) {
                return function (z) {
                    return $foreign.uniform3fImpl(webgl, location, x, y, z);
                };
            };
        };
    };
};
var uniform2iv_ = function (webgl) {
    return function (location) {
        return function (v) {
            return $foreign.uniform2iv_Impl(webgl, location, v);
        };
    };
};
var uniform2iv = function (webgl) {
    return function (location) {
        return function (v) {
            return $foreign.uniform2ivImpl(webgl, location, v);
        };
    };
};
var uniform2i = function (webgl) {
    return function (location) {
        return function (x) {
            return function (y) {
                return $foreign.uniform2iImpl(webgl, location, x, y);
            };
        };
    };
};
var uniform2fv_ = function (webgl) {
    return function (location) {
        return function (v) {
            return $foreign.uniform2fv_Impl(webgl, location, v);
        };
    };
};
var uniform2fv = function (webgl) {
    return function (location) {
        return function (v) {
            return $foreign.uniform2fvImpl(webgl, location, v);
        };
    };
};
var uniform2f = function (webgl) {
    return function (location) {
        return function (x) {
            return function (y) {
                return $foreign.uniform2fImpl(webgl, location, x, y);
            };
        };
    };
};
var uniform1iv_ = function (webgl) {
    return function (location) {
        return function (v) {
            return $foreign.uniform1iv_Impl(webgl, location, v);
        };
    };
};
var uniform1iv = function (webgl) {
    return function (location) {
        return function (v) {
            return $foreign.uniform1ivImpl(webgl, location, v);
        };
    };
};
var uniform1i = function (webgl) {
    return function (location) {
        return function (x) {
            return $foreign.uniform1iImpl(webgl, location, x);
        };
    };
};
var uniform1fv_ = function (webgl) {
    return function (location) {
        return function (v) {
            return $foreign.uniform1fv_Impl(webgl, location, v);
        };
    };
};
var uniform1fv = function (webgl) {
    return function (location) {
        return function (v) {
            return $foreign.uniform1fvImpl(webgl, location, v);
        };
    };
};
var uniform1f = function (webgl) {
    return function (location) {
        return function (x) {
            return $foreign.uniform1fImpl(webgl, location, x);
        };
    };
};
var texSubImage2D_ = function (webgl) {
    return function (target) {
        return function (level) {
            return function (xoffset) {
                return function (yoffset) {
                    return function (width) {
                        return function (height) {
                            return function (format) {
                                return function (type$prime) {
                                    return function (pixels) {
                                        return $foreign.texSubImage2D_Impl(webgl, target, level, xoffset, yoffset, width, height, format, type$prime, pixels);
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var texSubImage2D = function (webgl) {
    return function (target) {
        return function (level) {
            return function (xoffset) {
                return function (yoffset) {
                    return function (format) {
                        return function (type$prime) {
                            return function (source) {
                                return $foreign.texSubImage2DImpl(webgl, target, level, xoffset, yoffset, format, type$prime, source);
                            };
                        };
                    };
                };
            };
        };
    };
};
var texParameteri = function (webgl) {
    return function (target) {
        return function (pname) {
            return function (param) {
                return $foreign.texParameteriImpl(webgl, target, pname, param);
            };
        };
    };
};
var texParameterf = function (webgl) {
    return function (target) {
        return function (pname) {
            return function (param) {
                return $foreign.texParameterfImpl(webgl, target, pname, param);
            };
        };
    };
};
var texImage2D_ = function (webgl) {
    return function (target) {
        return function (level) {
            return function (internalformat) {
                return function (width) {
                    return function (height) {
                        return function (border) {
                            return function (format) {
                                return function (type$prime) {
                                    return function (pixels) {
                                        return $foreign.texImage2D_Impl(webgl, target, level, internalformat, width, height, border, format, type$prime, pixels);
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var texImage2D = function (webgl) {
    return function (target) {
        return function (level) {
            return function (internalformat) {
                return function (format) {
                    return function (type$prime) {
                        return function (source) {
                            return $foreign.texImage2DImpl(webgl, target, level, internalformat, format, type$prime, source);
                        };
                    };
                };
            };
        };
    };
};
var stencilOpSeparate = function (webgl) {
    return function (face) {
        return function (fail) {
            return function (zfail) {
                return function (zpass) {
                    return $foreign.stencilOpSeparateImpl(webgl, face, fail, zfail, zpass);
                };
            };
        };
    };
};
var stencilOp = function (webgl) {
    return function (fail) {
        return function (zfail) {
            return function (zpass) {
                return $foreign.stencilOpImpl(webgl, fail, zfail, zpass);
            };
        };
    };
};
var stencilMaskSeparate = function (webgl) {
    return function (face) {
        return function (mask) {
            return $foreign.stencilMaskSeparateImpl(webgl, face, mask);
        };
    };
};
var stencilMask = function (webgl) {
    return function (mask) {
        return $foreign.stencilMaskImpl(webgl, mask);
    };
};
var stencilFuncSeparate = function (webgl) {
    return function (face) {
        return function (func) {
            return function (ref) {
                return function (mask) {
                    return $foreign.stencilFuncSeparateImpl(webgl, face, func, ref, mask);
                };
            };
        };
    };
};
var stencilFunc = function (webgl) {
    return function (func) {
        return function (ref) {
            return function (mask) {
                return $foreign.stencilFuncImpl(webgl, func, ref, mask);
            };
        };
    };
};
var shaderSource = function (webgl) {
    return function (shader) {
        return function (source) {
            return $foreign.shaderSourceImpl(webgl, shader, source);
        };
    };
};
var scissor = function (webgl) {
    return function (x) {
        return function (y) {
            return function (width) {
                return function (height) {
                    return $foreign.scissorImpl(webgl, x, y, width, height);
                };
            };
        };
    };
};
var sampleCoverage = function (webgl) {
    return function (value) {
        return function (invert) {
            return $foreign.sampleCoverageImpl(webgl, value, invert);
        };
    };
};
var renderbufferStorage = function (webgl) {
    return function (target) {
        return function (internalformat) {
            return function (width) {
                return function (height) {
                    return $foreign.renderbufferStorageImpl(webgl, target, internalformat, width, height);
                };
            };
        };
    };
};
var readPixels = function (webgl) {
    return function (x) {
        return function (y) {
            return function (width) {
                return function (height) {
                    return function (format) {
                        return function (type$prime) {
                            return function (pixels) {
                                return $foreign.readPixelsImpl(webgl, x, y, width, height, format, type$prime, pixels);
                            };
                        };
                    };
                };
            };
        };
    };
};
var polygonOffset = function (webgl) {
    return function (factor) {
        return function (units) {
            return $foreign.polygonOffsetImpl(webgl, factor, units);
        };
    };
};
var pixelStorei = function (webgl) {
    return function (pname) {
        return function (param) {
            return $foreign.pixelStoreiImpl(webgl, pname, param);
        };
    };
};
var linkProgram = function (webgl) {
    return function (program) {
        return $foreign.linkProgramImpl(webgl, program);
    };
};
var lineWidth = function (webgl) {
    return function (width) {
        return $foreign.lineWidthImpl(webgl, width);
    };
};
var isTexture = function (webgl) {
    return function (texture) {
        return $foreign.isTextureImpl(webgl, texture);
    };
};
var isShader = function (webgl) {
    return function (shader) {
        return $foreign.isShaderImpl(webgl, shader);
    };
};
var isRenderbuffer = function (webgl) {
    return function (renderbuffer) {
        return $foreign.isRenderbufferImpl(webgl, renderbuffer);
    };
};
var isProgram = function (webgl) {
    return function (program) {
        return $foreign.isProgramImpl(webgl, program);
    };
};
var isFramebuffer = function (webgl) {
    return function (framebuffer) {
        return $foreign.isFramebufferImpl(webgl, framebuffer);
    };
};
var isEnabled = function (webgl) {
    return function (cap) {
        return $foreign.isEnabledImpl(webgl, cap);
    };
};
var isContextLost = function (webgl) {
    return $foreign.isContextLostImpl(webgl);
};
var isBuffer = function (webgl) {
    return function (buffer) {
        return $foreign.isBufferImpl(webgl, buffer);
    };
};
var hint = function (webgl) {
    return function (target) {
        return function (mode) {
            return $foreign.hintImpl(webgl, target, mode);
        };
    };
};
var getVertexAttribOffset = function (webgl) {
    return function (index) {
        return function (pname) {
            return $foreign.getVertexAttribOffsetImpl(webgl, index, pname);
        };
    };
};
var getVertexAttrib = function (webgl) {
    return function (index) {
        return function (pname) {
            return function __do() {
                var $0 = $foreign.getVertexAttribImpl(webgl, index, pname)();
                return Graphics_WebGL_Raw_Util.toMaybe($0);
            };
        };
    };
};
var getUniformLocation = function (webgl) {
    return function (program) {
        return function (name) {
            return function __do() {
                var $1 = $foreign.getUniformLocationImpl(webgl, program, name)();
                return Graphics_WebGL_Raw_Util.toMaybe($1);
            };
        };
    };
};
var getUniform = function (webgl) {
    return function (program) {
        return function (location) {
            return function __do() {
                var $2 = $foreign.getUniformImpl(webgl, program, location)();
                return Graphics_WebGL_Raw_Util.toMaybe($2);
            };
        };
    };
};
var getTexParameter = function (webgl) {
    return function (target) {
        return function (pname) {
            return function __do() {
                var $3 = $foreign.getTexParameterImpl(webgl, target, pname)();
                return Graphics_WebGL_Raw_Util.toMaybe($3);
            };
        };
    };
};
var getSupportedExtensions = function (webgl) {
    return function __do() {
        var $4 = $foreign.getSupportedExtensionsImpl(webgl)();
        return Graphics_WebGL_Raw_Util.nullAsEmpty($4);
    };
};
var getShaderSource = function (webgl) {
    return function (shader) {
        return function __do() {
            var $5 = $foreign.getShaderSourceImpl(webgl, shader)();
            return Graphics_WebGL_Raw_Util.toMaybe($5);
        };
    };
};
var getShaderPrecisionFormat = function (webgl) {
    return function (shadertype) {
        return function (precisiontype) {
            return function __do() {
                var $6 = $foreign.getShaderPrecisionFormatImpl(webgl, shadertype, precisiontype)();
                return Graphics_WebGL_Raw_Util.toMaybe($6);
            };
        };
    };
};
var getShaderParameter = function (webgl) {
    return function (shader) {
        return function (pname) {
            return function __do() {
                var $7 = $foreign.getShaderParameterImpl(webgl, shader, pname)();
                return Graphics_WebGL_Raw_Util.toMaybe($7);
            };
        };
    };
};
var getShaderInfoLog = function (webgl) {
    return function (shader) {
        return function __do() {
            var $8 = $foreign.getShaderInfoLogImpl(webgl, shader)();
            return Graphics_WebGL_Raw_Util.toMaybe($8);
        };
    };
};
var getRenderbufferParameter = function (webgl) {
    return function (target) {
        return function (pname) {
            return function __do() {
                var $9 = $foreign.getRenderbufferParameterImpl(webgl, target, pname)();
                return Graphics_WebGL_Raw_Util.toMaybe($9);
            };
        };
    };
};
var getProgramParameter = function (webgl) {
    return function (program) {
        return function (pname) {
            return function __do() {
                var $10 = $foreign.getProgramParameterImpl(webgl, program, pname)();
                return Graphics_WebGL_Raw_Util.toMaybe($10);
            };
        };
    };
};
var getProgramInfoLog = function (webgl) {
    return function (program) {
        return function __do() {
            var $11 = $foreign.getProgramInfoLogImpl(webgl, program)();
            return Graphics_WebGL_Raw_Util.toMaybe($11);
        };
    };
};
var getParameter = function (webgl) {
    return function (pname) {
        return function __do() {
            var $12 = $foreign.getParameterImpl(webgl, pname)();
            return Graphics_WebGL_Raw_Util.toMaybe($12);
        };
    };
};
var getFramebufferAttachmentParameter = function (webgl) {
    return function (target) {
        return function (attachment) {
            return function (pname) {
                return function __do() {
                    var $13 = $foreign.getFramebufferAttachmentParameterImpl(webgl, target, attachment, pname)();
                    return Graphics_WebGL_Raw_Util.toMaybe($13);
                };
            };
        };
    };
};
var getExtension = function (webgl) {
    return function (name) {
        return function __do() {
            var $14 = $foreign.getExtensionImpl(webgl, name)();
            return Graphics_WebGL_Raw_Util.toMaybe($14);
        };
    };
};
var getError = function (webgl) {
    return $foreign.getErrorImpl(webgl);
};
var getContextAttributes = function (webgl) {
    return function __do() {
        var $15 = $foreign.getContextAttributesImpl(webgl)();
        return Graphics_WebGL_Raw_Util.toMaybe($15);
    };
};
var getBufferParameter = function (webgl) {
    return function (target) {
        return function (pname) {
            return function __do() {
                var $16 = $foreign.getBufferParameterImpl(webgl, target, pname)();
                return Graphics_WebGL_Raw_Util.toMaybe($16);
            };
        };
    };
};
var getAttribLocation = function (webgl) {
    return function (program) {
        return function (name) {
            return $foreign.getAttribLocationImpl(webgl, program, name);
        };
    };
};
var getAttachedShaders = function (webgl) {
    return function (program) {
        return function __do() {
            var $17 = $foreign.getAttachedShadersImpl(webgl, program)();
            return Graphics_WebGL_Raw_Util.nullAsEmpty($17);
        };
    };
};
var getActiveUniform = function (webgl) {
    return function (program) {
        return function (index) {
            return function __do() {
                var $18 = $foreign.getActiveUniformImpl(webgl, program, index)();
                return Graphics_WebGL_Raw_Util.toMaybe($18);
            };
        };
    };
};
var getActiveAttrib = function (webgl) {
    return function (program) {
        return function (index) {
            return function __do() {
                var $19 = $foreign.getActiveAttribImpl(webgl, program, index)();
                return Graphics_WebGL_Raw_Util.toMaybe($19);
            };
        };
    };
};
var generateMipmap = function (webgl) {
    return function (target) {
        return $foreign.generateMipmapImpl(webgl, target);
    };
};
var frontFace = function (webgl) {
    return function (mode) {
        return $foreign.frontFaceImpl(webgl, mode);
    };
};
var framebufferTexture2D = function (webgl) {
    return function (target) {
        return function (attachment) {
            return function (textarget) {
                return function (texture) {
                    return function (level) {
                        return $foreign.framebufferTexture2DImpl(webgl, target, attachment, textarget, texture, level);
                    };
                };
            };
        };
    };
};
var framebufferRenderbuffer = function (webgl) {
    return function (target) {
        return function (attachment) {
            return function (renderbuffertarget) {
                return function (renderbuffer) {
                    return $foreign.framebufferRenderbufferImpl(webgl, target, attachment, renderbuffertarget, renderbuffer);
                };
            };
        };
    };
};
var flush = function (webgl) {
    return $foreign.flushImpl(webgl);
};
var finish = function (webgl) {
    return $foreign.finishImpl(webgl);
};
var enableVertexAttribArray = function (webgl) {
    return function (index) {
        return $foreign.enableVertexAttribArrayImpl(webgl, index);
    };
};
var enable = function (webgl) {
    return function (cap) {
        return $foreign.enableImpl(webgl, cap);
    };
};
var drawElements = function (webgl) {
    return function (mode) {
        return function (count) {
            return function (type$prime) {
                return function (offset) {
                    return $foreign.drawElementsImpl(webgl, mode, count, type$prime, offset);
                };
            };
        };
    };
};
var drawArrays = function (webgl) {
    return function (mode) {
        return function (first) {
            return function (count) {
                return $foreign.drawArraysImpl(webgl, mode, first, count);
            };
        };
    };
};
var disableVertexAttribArray = function (webgl) {
    return function (index) {
        return $foreign.disableVertexAttribArrayImpl(webgl, index);
    };
};
var disable = function (webgl) {
    return function (cap) {
        return $foreign.disableImpl(webgl, cap);
    };
};
var detachShader = function (webgl) {
    return function (program) {
        return function (shader) {
            return $foreign.detachShaderImpl(webgl, program, shader);
        };
    };
};
var depthRange = function (webgl) {
    return function (zNear) {
        return function (zFar) {
            return $foreign.depthRangeImpl(webgl, zNear, zFar);
        };
    };
};
var depthMask = function (webgl) {
    return function (flag) {
        return $foreign.depthMaskImpl(webgl, flag);
    };
};
var depthFunc = function (webgl) {
    return function (func) {
        return $foreign.depthFuncImpl(webgl, func);
    };
};
var deleteTexture = function (webgl) {
    return function (texture) {
        return $foreign.deleteTextureImpl(webgl, texture);
    };
};
var deleteShader = function (webgl) {
    return function (shader) {
        return $foreign.deleteShaderImpl(webgl, shader);
    };
};
var deleteRenderbuffer = function (webgl) {
    return function (renderbuffer) {
        return $foreign.deleteRenderbufferImpl(webgl, renderbuffer);
    };
};
var deleteProgram = function (webgl) {
    return function (program) {
        return $foreign.deleteProgramImpl(webgl, program);
    };
};
var deleteFramebuffer = function (webgl) {
    return function (framebuffer) {
        return $foreign.deleteFramebufferImpl(webgl, framebuffer);
    };
};
var deleteBuffer = function (webgl) {
    return function (buffer) {
        return $foreign.deleteBufferImpl(webgl, buffer);
    };
};
var cullFace = function (webgl) {
    return function (mode) {
        return $foreign.cullFaceImpl(webgl, mode);
    };
};
var createTexture = function (webgl) {
    return function __do() {
        var $20 = $foreign.createTextureImpl(webgl)();
        return Graphics_WebGL_Raw_Util.toMaybe($20);
    };
};
var createShader = function (webgl) {
    return function (type$prime) {
        return function __do() {
            var $21 = $foreign.createShaderImpl(webgl, type$prime)();
            return Graphics_WebGL_Raw_Util.toMaybe($21);
        };
    };
};
var createRenderbuffer = function (webgl) {
    return function __do() {
        var $22 = $foreign.createRenderbufferImpl(webgl)();
        return Graphics_WebGL_Raw_Util.toMaybe($22);
    };
};
var createProgram = function (webgl) {
    return function __do() {
        var $23 = $foreign.createProgramImpl(webgl)();
        return Graphics_WebGL_Raw_Util.toMaybe($23);
    };
};
var createFramebuffer = function (webgl) {
    return function __do() {
        var $24 = $foreign.createFramebufferImpl(webgl)();
        return Graphics_WebGL_Raw_Util.toMaybe($24);
    };
};
var createBuffer = function (webgl) {
    return function __do() {
        var $25 = $foreign.createBufferImpl(webgl)();
        return Graphics_WebGL_Raw_Util.toMaybe($25);
    };
};
var copyTexSubImage2D = function (webgl) {
    return function (target) {
        return function (level) {
            return function (xoffset) {
                return function (yoffset) {
                    return function (x) {
                        return function (y) {
                            return function (width) {
                                return function (height) {
                                    return $foreign.copyTexSubImage2DImpl(webgl, target, level, xoffset, yoffset, x, y, width, height);
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var copyTexImage2D = function (webgl) {
    return function (target) {
        return function (level) {
            return function (internalformat) {
                return function (x) {
                    return function (y) {
                        return function (width) {
                            return function (height) {
                                return function (border) {
                                    return $foreign.copyTexImage2DImpl(webgl, target, level, internalformat, x, y, width, height, border);
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var compressedTexSubImage2D = function (webgl) {
    return function (target) {
        return function (level) {
            return function (xoffset) {
                return function (yoffset) {
                    return function (width) {
                        return function (height) {
                            return function (format) {
                                return function (data$prime) {
                                    return $foreign.compressedTexSubImage2DImpl(webgl, target, level, xoffset, yoffset, width, height, format, data$prime);
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var compressedTexImage2D = function (webgl) {
    return function (target) {
        return function (level) {
            return function (internalformat) {
                return function (width) {
                    return function (height) {
                        return function (border) {
                            return function (data$prime) {
                                return $foreign.compressedTexImage2DImpl(webgl, target, level, internalformat, width, height, border, data$prime);
                            };
                        };
                    };
                };
            };
        };
    };
};
var compileShader = function (webgl) {
    return function (shader) {
        return $foreign.compileShaderImpl(webgl, shader);
    };
};
var colorMask = function (webgl) {
    return function (red) {
        return function (green) {
            return function (blue) {
                return function (alpha) {
                    return $foreign.colorMaskImpl(webgl, red, green, blue, alpha);
                };
            };
        };
    };
};
var clearStencil = function (webgl) {
    return function (s) {
        return $foreign.clearStencilImpl(webgl, s);
    };
};
var clearDepth = function (webgl) {
    return function (depth) {
        return $foreign.clearDepthImpl(webgl, depth);
    };
};
var clearColor = function (webgl) {
    return function (red) {
        return function (green) {
            return function (blue) {
                return function (alpha) {
                    return $foreign.clearColorImpl(webgl, red, green, blue, alpha);
                };
            };
        };
    };
};
var clear = function (webgl) {
    return function (mask) {
        return $foreign.clearImpl(webgl, mask);
    };
};
var checkFramebufferStatus = function (webgl) {
    return function (target) {
        return $foreign.checkFramebufferStatusImpl(webgl, target);
    };
};
var bufferSubData = function (webgl) {
    return function (target) {
        return function (offset) {
            return function (data$prime) {
                return $foreign.bufferSubDataImpl(webgl, target, offset, data$prime);
            };
        };
    };
};
var bufferData_ = function (webgl) {
    return function (target) {
        return function (size) {
            return function (usage) {
                return $foreign.bufferData_Impl(webgl, target, size, usage);
            };
        };
    };
};
var bufferData = function (webgl) {
    return function (target) {
        return function (data$prime) {
            return function (usage) {
                return $foreign.bufferDataImpl(webgl, target, data$prime, usage);
            };
        };
    };
};
var blendFuncSeparate = function (webgl) {
    return function (srcRGB) {
        return function (dstRGB) {
            return function (srcAlpha) {
                return function (dstAlpha) {
                    return $foreign.blendFuncSeparateImpl(webgl, srcRGB, dstRGB, srcAlpha, dstAlpha);
                };
            };
        };
    };
};
var blendFunc = function (webgl) {
    return function (sfactor) {
        return function (dfactor) {
            return $foreign.blendFuncImpl(webgl, sfactor, dfactor);
        };
    };
};
var blendEquationSeparate = function (webgl) {
    return function (modeRGB) {
        return function (modeAlpha) {
            return $foreign.blendEquationSeparateImpl(webgl, modeRGB, modeAlpha);
        };
    };
};
var blendEquation = function (webgl) {
    return function (mode) {
        return $foreign.blendEquationImpl(webgl, mode);
    };
};
var blendColor = function (webgl) {
    return function (red) {
        return function (green) {
            return function (blue) {
                return function (alpha) {
                    return $foreign.blendColorImpl(webgl, red, green, blue, alpha);
                };
            };
        };
    };
};
var bindTexture = function (webgl) {
    return function (target) {
        return function (texture) {
            return $foreign.bindTextureImpl(webgl, target, texture);
        };
    };
};
var bindRenderbuffer = function (webgl) {
    return function (target) {
        return function (renderbuffer) {
            return $foreign.bindRenderbufferImpl(webgl, target, renderbuffer);
        };
    };
};
var bindFramebuffer = function (webgl) {
    return function (target) {
        return function (framebuffer) {
            return $foreign.bindFramebufferImpl(webgl, target, framebuffer);
        };
    };
};
var bindBuffer = function (webgl) {
    return function (target) {
        return function (buffer) {
            return $foreign.bindBufferImpl(webgl, target, buffer);
        };
    };
};
var bindAttribLocation = function (webgl) {
    return function (program) {
        return function (index) {
            return function (name) {
                return $foreign.bindAttribLocationImpl(webgl, program, index, name);
            };
        };
    };
};
var attachShader = function (webgl) {
    return function (program) {
        return function (shader) {
            return $foreign.attachShaderImpl(webgl, program, shader);
        };
    };
};
var activeTexture = function (webgl) {
    return function (texture) {
        return $foreign.activeTextureImpl(webgl, texture);
    };
};
module.exports = {
    viewport: viewport, 
    vertexAttribPointer: vertexAttribPointer, 
    vertexAttrib4fv_: vertexAttrib4fv_, 
    vertexAttrib4fv: vertexAttrib4fv, 
    vertexAttrib4f: vertexAttrib4f, 
    vertexAttrib3fv_: vertexAttrib3fv_, 
    vertexAttrib3fv: vertexAttrib3fv, 
    vertexAttrib3f: vertexAttrib3f, 
    vertexAttrib2fv_: vertexAttrib2fv_, 
    vertexAttrib2fv: vertexAttrib2fv, 
    vertexAttrib2f: vertexAttrib2f, 
    vertexAttrib1fv_: vertexAttrib1fv_, 
    vertexAttrib1fv: vertexAttrib1fv, 
    vertexAttrib1f: vertexAttrib1f, 
    validateProgram: validateProgram, 
    useProgram: useProgram, 
    uniformMatrix4fv_: uniformMatrix4fv_, 
    uniformMatrix4fv: uniformMatrix4fv, 
    uniformMatrix3fv_: uniformMatrix3fv_, 
    uniformMatrix3fv: uniformMatrix3fv, 
    uniformMatrix2fv_: uniformMatrix2fv_, 
    uniformMatrix2fv: uniformMatrix2fv, 
    uniform4iv_: uniform4iv_, 
    uniform4iv: uniform4iv, 
    uniform4i: uniform4i, 
    uniform4fv_: uniform4fv_, 
    uniform4fv: uniform4fv, 
    uniform4f: uniform4f, 
    uniform3iv_: uniform3iv_, 
    uniform3iv: uniform3iv, 
    uniform3i: uniform3i, 
    uniform3fv_: uniform3fv_, 
    uniform3fv: uniform3fv, 
    uniform3f: uniform3f, 
    uniform2iv_: uniform2iv_, 
    uniform2iv: uniform2iv, 
    uniform2i: uniform2i, 
    uniform2fv_: uniform2fv_, 
    uniform2fv: uniform2fv, 
    uniform2f: uniform2f, 
    uniform1iv_: uniform1iv_, 
    uniform1iv: uniform1iv, 
    uniform1i: uniform1i, 
    uniform1fv_: uniform1fv_, 
    uniform1fv: uniform1fv, 
    uniform1f: uniform1f, 
    texSubImage2D_: texSubImage2D_, 
    texSubImage2D: texSubImage2D, 
    texParameteri: texParameteri, 
    texParameterf: texParameterf, 
    texImage2D_: texImage2D_, 
    texImage2D: texImage2D, 
    stencilOpSeparate: stencilOpSeparate, 
    stencilOp: stencilOp, 
    stencilMaskSeparate: stencilMaskSeparate, 
    stencilMask: stencilMask, 
    stencilFuncSeparate: stencilFuncSeparate, 
    stencilFunc: stencilFunc, 
    shaderSource: shaderSource, 
    scissor: scissor, 
    sampleCoverage: sampleCoverage, 
    renderbufferStorage: renderbufferStorage, 
    readPixels: readPixels, 
    polygonOffset: polygonOffset, 
    pixelStorei: pixelStorei, 
    linkProgram: linkProgram, 
    lineWidth: lineWidth, 
    isTexture: isTexture, 
    isShader: isShader, 
    isRenderbuffer: isRenderbuffer, 
    isProgram: isProgram, 
    isFramebuffer: isFramebuffer, 
    isEnabled: isEnabled, 
    isContextLost: isContextLost, 
    isBuffer: isBuffer, 
    hint: hint, 
    getVertexAttribOffset: getVertexAttribOffset, 
    getVertexAttrib: getVertexAttrib, 
    getUniformLocation: getUniformLocation, 
    getUniform: getUniform, 
    getTexParameter: getTexParameter, 
    getSupportedExtensions: getSupportedExtensions, 
    getShaderSource: getShaderSource, 
    getShaderPrecisionFormat: getShaderPrecisionFormat, 
    getShaderParameter: getShaderParameter, 
    getShaderInfoLog: getShaderInfoLog, 
    getRenderbufferParameter: getRenderbufferParameter, 
    getProgramParameter: getProgramParameter, 
    getProgramInfoLog: getProgramInfoLog, 
    getParameter: getParameter, 
    getFramebufferAttachmentParameter: getFramebufferAttachmentParameter, 
    getExtension: getExtension, 
    getError: getError, 
    getContextAttributes: getContextAttributes, 
    getBufferParameter: getBufferParameter, 
    getAttribLocation: getAttribLocation, 
    getAttachedShaders: getAttachedShaders, 
    getActiveUniform: getActiveUniform, 
    getActiveAttrib: getActiveAttrib, 
    generateMipmap: generateMipmap, 
    frontFace: frontFace, 
    framebufferTexture2D: framebufferTexture2D, 
    framebufferRenderbuffer: framebufferRenderbuffer, 
    flush: flush, 
    finish: finish, 
    enableVertexAttribArray: enableVertexAttribArray, 
    enable: enable, 
    drawElements: drawElements, 
    drawArrays: drawArrays, 
    disableVertexAttribArray: disableVertexAttribArray, 
    disable: disable, 
    detachShader: detachShader, 
    depthRange: depthRange, 
    depthMask: depthMask, 
    depthFunc: depthFunc, 
    deleteTexture: deleteTexture, 
    deleteShader: deleteShader, 
    deleteRenderbuffer: deleteRenderbuffer, 
    deleteProgram: deleteProgram, 
    deleteFramebuffer: deleteFramebuffer, 
    deleteBuffer: deleteBuffer, 
    cullFace: cullFace, 
    createTexture: createTexture, 
    createShader: createShader, 
    createRenderbuffer: createRenderbuffer, 
    createProgram: createProgram, 
    createFramebuffer: createFramebuffer, 
    createBuffer: createBuffer, 
    copyTexSubImage2D: copyTexSubImage2D, 
    copyTexImage2D: copyTexImage2D, 
    compressedTexSubImage2D: compressedTexSubImage2D, 
    compressedTexImage2D: compressedTexImage2D, 
    compileShader: compileShader, 
    colorMask: colorMask, 
    clearStencil: clearStencil, 
    clearDepth: clearDepth, 
    clearColor: clearColor, 
    clear: clear, 
    checkFramebufferStatus: checkFramebufferStatus, 
    bufferSubData: bufferSubData, 
    bufferData_: bufferData_, 
    bufferData: bufferData, 
    blendFuncSeparate: blendFuncSeparate, 
    blendFunc: blendFunc, 
    blendEquationSeparate: blendEquationSeparate, 
    blendEquation: blendEquation, 
    blendColor: blendColor, 
    bindTexture: bindTexture, 
    bindRenderbuffer: bindRenderbuffer, 
    bindFramebuffer: bindFramebuffer, 
    bindBuffer: bindBuffer, 
    bindAttribLocation: bindAttribLocation, 
    attachShader: attachShader, 
    activeTexture: activeTexture
};

},{"./foreign":"/Users/gene/Programming/pure_morph/output/Graphics.WebGL.Raw/foreign.js","Control.Monad.Eff":"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff/index.js","Data.ArrayBuffer.Types":"/Users/gene/Programming/pure_morph/output/Data.ArrayBuffer.Types/index.js","Data.Function":"/Users/gene/Programming/pure_morph/output/Data.Function/index.js","Data.Maybe":"/Users/gene/Programming/pure_morph/output/Data.Maybe/index.js","Graphics.Canvas":"/Users/gene/Programming/pure_morph/output/Graphics.Canvas/index.js","Graphics.WebGL.Raw.Types":"/Users/gene/Programming/pure_morph/output/Graphics.WebGL.Raw.Types/index.js","Graphics.WebGL.Raw.Util":"/Users/gene/Programming/pure_morph/output/Graphics.WebGL.Raw.Util/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Graphics.WebGL.Shader/foreign.js":[function(require,module,exports){
"use strict";

// module Graphics.WebGL.Shader

exports.getAttrBindingsImpl = function getAttrBindingsImpl(ctx, prog, wrapper) {
  return function () {
    var all, attr, count, loc;

    try {
      all = {};
      count = ctx.getProgramParameter(prog, ctx.ACTIVE_ATTRIBUTES);

      for (var i = 0; i < count; i++) {
	attr = ctx.getActiveAttrib(prog, i);
	loc = ctx.getAttribLocation(prog, attr.name);
	all[attr.name] = wrapper(loc);
      }

      return all;
    } catch(e) {
      return null;
    }
  };
}


exports.getUniformBindingsImpl = function getUniformBindingsImpl(ctx, prog, wrapper) {
    return function () {
      var all, unif, count, loc;

      try {
        all = {};
        count = ctx.getProgramParameter(prog, ctx.ACTIVE_UNIFORMS);

        for (var i = 0; i < count; i++) {
          unif = ctx.getActiveUniform(prog, i);
          loc = ctx.getUniformLocation(prog, unif.name);
          all[unif.name] = wrapper(loc);
        }

        return all;
      } catch(e) {
        return null;
      }
    };
  }

},{}],"/Users/gene/Programming/pure_morph/output/Graphics.WebGL.Shader/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Control_Monad = require("Control.Monad");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Control_Monad_Eff_Class = require("Control.Monad.Eff.Class");
var Control_Monad_Error_Class = require("Control.Monad.Error.Class");
var Control_Monad_Reader_Class = require("Control.Monad.Reader.Class");
var Data_Function = require("Data.Function");
var Data_Maybe = require("Data.Maybe");
var Graphics_Canvas = require("Graphics.Canvas");
var Graphics_WebGL_Raw_Util = require("Graphics.WebGL.Raw.Util");
var Graphics_WebGL_Methods = require("Graphics.WebGL.Methods");
var Graphics_WebGL_Raw_Types = require("Graphics.WebGL.Raw.Types");
var Graphics_WebGL_Types = require("Graphics.WebGL.Types");
var Control_Monad_Reader_Trans = require("Control.Monad.Reader.Trans");
var Control_Monad_Except_Trans = require("Control.Monad.Except.Trans");
var SetVertAttr = function (setVertAttr) {
    this.setVertAttr = setVertAttr;
};
var SetUniform = function (setUniform) {
    this.setUniform = setUniform;
};
var shaderLinkError = new Graphics_WebGL_Types.ShaderError("could not link shaders prog");
var setVertAttrVec4 = new SetVertAttr(function (attr) {
    return function (v) {
        return Graphics_WebGL_Methods.vertexAttrib4f(attr)(v.value0)(v.value1)(v.value2)(v.value3);
    };
});
var setVertAttrVec3 = new SetVertAttr(function (attr) {
    return function (v) {
        return Graphics_WebGL_Methods.vertexAttrib3f(attr)(v.value0)(v.value1)(v.value2);
    };
});
var setVertAttrVec2 = new SetVertAttr(function (attr) {
    return function (v) {
        return Graphics_WebGL_Methods.vertexAttrib2f(attr)(v.value0)(v.value1);
    };
});
var setVertAttrNumber = new SetVertAttr(function (attr) {
    return function (x) {
        return Graphics_WebGL_Methods.vertexAttrib1f(attr)(x);
    };
});
var setVertAttr = function (dict) {
    return dict.setVertAttr;
};
var setUniformVec4 = new SetUniform(function (unif) {
    return function (v) {
        return Graphics_WebGL_Methods.uniform4f(unif)(v.value0)(v.value1)(v.value2)(v.value3);
    };
});
var setUniformVec3 = new SetUniform(function (unif) {
    return function (v) {
        return Graphics_WebGL_Methods.uniform3f(unif)(v.value0)(v.value1)(v.value2);
    };
});
var setUniformVec2 = new SetUniform(function (unif) {
    return function (v) {
        return Graphics_WebGL_Methods.uniform2f(unif)(v.value0)(v.value1);
    };
});
var setUniformNumber = new SetUniform(function (unif) {
    return function (x) {
        return Graphics_WebGL_Methods.uniform1f(unif)(x);
    };
});
var setUniform = function (dict) {
    return dict.setUniform;
};
var getUniformBindings_ = function (ctx) {
    return function (prog) {
        return function __do() {
            var $58 = $foreign.getUniformBindingsImpl(ctx, prog, Graphics_WebGL_Types.Uniform)();
            return Graphics_WebGL_Raw_Util.toMaybe($58);
        };
    };
};
var getUniformBindings = function (prog) {
    return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadReaderReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff))))(function (v) {
        return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(getUniformBindings_(v)(prog)))(function (v1) {
            if (v1 instanceof Data_Maybe.Just) {
                return Prelude["return"](Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_Eff.applicativeEff)))(v1.value0);
            };
            if (v1 instanceof Data_Maybe.Nothing) {
                return Control_Monad_Error_Class.throwError(Control_Monad_Reader_Trans.monadErrorReaderT(Control_Monad_Except_Trans.monadErrorExceptT(Control_Monad_Eff.monadEff)))(new Graphics_WebGL_Types.NullValue("getUniformBindings"));
            };
            throw new Error("Failed pattern match at Graphics.WebGL.Shader line 94, column 1 - line 95, column 1: " + [ v1.constructor.name ]);
        });
    });
};
var getAttrBindings_ = function (ctx) {
    return function (prog) {
        return function __do() {
            var $59 = $foreign.getAttrBindingsImpl(ctx, prog, Graphics_WebGL_Types.Attribute)();
            return Graphics_WebGL_Raw_Util.toMaybe($59);
        };
    };
};
var getAttrBindings = function (prog) {
    return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadReaderReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff))))(function (v) {
        return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad_Eff_Class.liftEff(Control_Monad_Reader_Trans.monadEffReader(Control_Monad_Except_Trans.monadEffExceptT(Control_Monad_Eff_Class.monadEffEff)))(getAttrBindings_(v)(prog)))(function (v1) {
            if (v1 instanceof Data_Maybe.Just) {
                return Prelude["return"](Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_Eff.applicativeEff)))(v1.value0);
            };
            if (v1 instanceof Data_Maybe.Nothing) {
                return Control_Monad_Error_Class.throwError(Control_Monad_Reader_Trans.monadErrorReaderT(Control_Monad_Except_Trans.monadErrorExceptT(Control_Monad_Eff.monadEff)))(new Graphics_WebGL_Types.NullValue("getAttrBindings"));
            };
            throw new Error("Failed pattern match at Graphics.WebGL.Shader line 86, column 1 - line 87, column 1: " + [ v1.constructor.name ]);
        });
    });
};
var addShaderToProgram = function (prog) {
    return function (stype) {
        return function (src) {
            return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Graphics_WebGL_Methods.createShader(stype))(function (v) {
                return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Graphics_WebGL_Methods.shaderSource(v)(src))(function () {
                    return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Graphics_WebGL_Methods.compileShader(v))(function () {
                        return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Graphics_WebGL_Methods.attachShader(prog)(v))(function () {
                            return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Graphics_WebGL_Methods.getShaderParameter(v)(Graphics_WebGL_Types.CompileStatusSP.value))(function (v1) {
                                return Control_Monad.when(Control_Monad_Reader_Trans.monadReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(!v1)(Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Graphics_WebGL_Methods.getShaderInfoLog(v))(function (v2) {
                                    return Control_Monad_Error_Class.throwError(Control_Monad_Reader_Trans.monadErrorReaderT(Control_Monad_Except_Trans.monadErrorExceptT(Control_Monad_Eff.monadEff)))(new Graphics_WebGL_Types.ShaderError(v2));
                                }));
                            });
                        });
                    });
                });
            });
        };
    };
};
var compileShadersIntoProgram = function (vertSrc) {
    return function (fragSrc) {
        return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Graphics_WebGL_Methods.createProgram)(function (v) {
            return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(addShaderToProgram(v)(Graphics_WebGL_Types.VertexShader.value)(vertSrc))(function () {
                return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(addShaderToProgram(v)(Graphics_WebGL_Types.FragmentShader.value)(fragSrc))(function () {
                    return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Graphics_WebGL_Methods.linkProgram(v))(function () {
                        return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Graphics_WebGL_Methods.getProgramParameter(v)(Graphics_WebGL_Types.LinkStatus.value))(function (v1) {
                            return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Control_Monad.when(Control_Monad_Reader_Trans.monadReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(!v1)(Control_Monad_Error_Class.throwError(Control_Monad_Reader_Trans.monadErrorReaderT(Control_Monad_Except_Trans.monadErrorExceptT(Control_Monad_Eff.monadEff)))(shaderLinkError)))(function () {
                                return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Graphics_WebGL_Methods.useProgram(v))(function () {
                                    return Prelude["return"](Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_Eff.applicativeEff)))(v);
                                });
                            });
                        });
                    });
                });
            });
        });
    };
};
module.exports = {
    getUniformBindings: getUniformBindings, 
    getAttrBindings: getAttrBindings, 
    compileShadersIntoProgram: compileShadersIntoProgram, 
    addShaderToProgram: addShaderToProgram
};

},{"./foreign":"/Users/gene/Programming/pure_morph/output/Graphics.WebGL.Shader/foreign.js","Control.Monad":"/Users/gene/Programming/pure_morph/output/Control.Monad/index.js","Control.Monad.Eff":"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff/index.js","Control.Monad.Eff.Class":"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff.Class/index.js","Control.Monad.Error.Class":"/Users/gene/Programming/pure_morph/output/Control.Monad.Error.Class/index.js","Control.Monad.Except.Trans":"/Users/gene/Programming/pure_morph/output/Control.Monad.Except.Trans/index.js","Control.Monad.Reader.Class":"/Users/gene/Programming/pure_morph/output/Control.Monad.Reader.Class/index.js","Control.Monad.Reader.Trans":"/Users/gene/Programming/pure_morph/output/Control.Monad.Reader.Trans/index.js","Data.Function":"/Users/gene/Programming/pure_morph/output/Data.Function/index.js","Data.Maybe":"/Users/gene/Programming/pure_morph/output/Data.Maybe/index.js","Graphics.Canvas":"/Users/gene/Programming/pure_morph/output/Graphics.Canvas/index.js","Graphics.WebGL.Methods":"/Users/gene/Programming/pure_morph/output/Graphics.WebGL.Methods/index.js","Graphics.WebGL.Raw.Types":"/Users/gene/Programming/pure_morph/output/Graphics.WebGL.Raw.Types/index.js","Graphics.WebGL.Raw.Util":"/Users/gene/Programming/pure_morph/output/Graphics.WebGL.Raw.Util/index.js","Graphics.WebGL.Types":"/Users/gene/Programming/pure_morph/output/Graphics.WebGL.Types/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Graphics.WebGL.Types/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Monad_Except_Trans = require("Control.Monad.Except.Trans");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Control_Monad_Reader_Trans = require("Control.Monad.Reader.Trans");
var Data_ArrayBuffer_Types = require("Data.ArrayBuffer.Types");
var Data_Int = require("Data.Int");
var Graphics_Canvas = require("Graphics.Canvas");
var Graphics_WebGL_Raw_Enums = require("Graphics.WebGL.Raw.Enums");
var Graphics_WebGL_Raw_Types = require("Graphics.WebGL.Raw.Types");
var Vec4 = (function () {
    function Vec4(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    Vec4.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new Vec4(value0, value1, value2, value3);
                };
            };
        };
    };
    return Vec4;
})();
var Vec3 = (function () {
    function Vec3(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    Vec3.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new Vec3(value0, value1, value2);
            };
        };
    };
    return Vec3;
})();
var Vec2 = (function () {
    function Vec2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Vec2.create = function (value0) {
        return function (value1) {
            return new Vec2(value0, value1);
        };
    };
    return Vec2;
})();
var Uniform = function (x) {
    return x;
};
var FragmentShader = (function () {
    function FragmentShader() {

    };
    FragmentShader.value = new FragmentShader();
    return FragmentShader;
})();
var VertexShader = (function () {
    function VertexShader() {

    };
    VertexShader.value = new VertexShader();
    return VertexShader;
})();
var ShaderTypeSP = (function () {
    function ShaderTypeSP() {

    };
    ShaderTypeSP.value = new ShaderTypeSP();
    return ShaderTypeSP;
})();
var DeleteStatusSP = (function () {
    function DeleteStatusSP() {

    };
    DeleteStatusSP.value = new DeleteStatusSP();
    return DeleteStatusSP;
})();
var CompileStatusSP = (function () {
    function CompileStatusSP() {

    };
    CompileStatusSP.value = new CompileStatusSP();
    return CompileStatusSP;
})();
var DeleteStatus = (function () {
    function DeleteStatus() {

    };
    DeleteStatus.value = new DeleteStatus();
    return DeleteStatus;
})();
var LinkStatus = (function () {
    function LinkStatus() {

    };
    LinkStatus.value = new LinkStatus();
    return LinkStatus;
})();
var ValidateStatus = (function () {
    function ValidateStatus() {

    };
    ValidateStatus.value = new ValidateStatus();
    return ValidateStatus;
})();
var AttachedShaders = (function () {
    function AttachedShaders() {

    };
    AttachedShaders.value = new AttachedShaders();
    return AttachedShaders;
})();
var ActiveAttrs = (function () {
    function ActiveAttrs() {

    };
    ActiveAttrs.value = new ActiveAttrs();
    return ActiveAttrs;
})();
var ActiveUniforms = (function () {
    function ActiveUniforms() {

    };
    ActiveUniforms.value = new ActiveUniforms();
    return ActiveUniforms;
})();
var Mat4 = (function () {
    function Mat4(value0, value1, value2, value3, value4, value5, value6, value7, value8, value9, value10, value11, value12, value13, value14, value15) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
        this.value6 = value6;
        this.value7 = value7;
        this.value8 = value8;
        this.value9 = value9;
        this.value10 = value10;
        this.value11 = value11;
        this.value12 = value12;
        this.value13 = value13;
        this.value14 = value14;
        this.value15 = value15;
    };
    Mat4.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return function (value6) {
                                return function (value7) {
                                    return function (value8) {
                                        return function (value9) {
                                            return function (value10) {
                                                return function (value11) {
                                                    return function (value12) {
                                                        return function (value13) {
                                                            return function (value14) {
                                                                return function (value15) {
                                                                    return new Mat4(value0, value1, value2, value3, value4, value5, value6, value7, value8, value9, value10, value11, value12, value13, value14, value15);
                                                                };
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
    return Mat4;
})();
var Mat3 = (function () {
    function Mat3(value0, value1, value2, value3, value4, value5, value6, value7, value8) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
        this.value6 = value6;
        this.value7 = value7;
        this.value8 = value8;
    };
    Mat3.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return function (value6) {
                                return function (value7) {
                                    return function (value8) {
                                        return new Mat3(value0, value1, value2, value3, value4, value5, value6, value7, value8);
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
    return Mat3;
})();
var Mat2 = (function () {
    function Mat2(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    Mat2.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new Mat2(value0, value1, value2, value3);
                };
            };
        };
    };
    return Mat2;
})();
var NoError = (function () {
    function NoError() {

    };
    NoError.value = new NoError();
    return NoError;
})();
var InvalidEnum = (function () {
    function InvalidEnum() {

    };
    InvalidEnum.value = new InvalidEnum();
    return InvalidEnum;
})();
var InvalidValue = (function () {
    function InvalidValue() {

    };
    InvalidValue.value = new InvalidValue();
    return InvalidValue;
})();
var InvalidOperation = (function () {
    function InvalidOperation() {

    };
    InvalidOperation.value = new InvalidOperation();
    return InvalidOperation;
})();
var OutOfMemory = (function () {
    function OutOfMemory() {

    };
    OutOfMemory.value = new OutOfMemory();
    return OutOfMemory;
})();
var UnknownError = (function () {
    function UnknownError() {

    };
    UnknownError.value = new UnknownError();
    return UnknownError;
})();
var ContextLost = (function () {
    function ContextLost() {

    };
    ContextLost.value = new ContextLost();
    return ContextLost;
})();
var ErrorCode = (function () {
    function ErrorCode(value0) {
        this.value0 = value0;
    };
    ErrorCode.create = function (value0) {
        return new ErrorCode(value0);
    };
    return ErrorCode;
})();
var NullValue = (function () {
    function NullValue(value0) {
        this.value0 = value0;
    };
    NullValue.create = function (value0) {
        return new NullValue(value0);
    };
    return NullValue;
})();
var ShaderError = (function () {
    function ShaderError(value0) {
        this.value0 = value0;
    };
    ShaderError.create = function (value0) {
        return new ShaderError(value0);
    };
    return ShaderError;
})();
var Points = (function () {
    function Points() {

    };
    Points.value = new Points();
    return Points;
})();
var Lines = (function () {
    function Lines() {

    };
    Lines.value = new Lines();
    return Lines;
})();
var LineLoop = (function () {
    function LineLoop() {

    };
    LineLoop.value = new LineLoop();
    return LineLoop;
})();
var LineStrip = (function () {
    function LineStrip() {

    };
    LineStrip.value = new LineStrip();
    return LineStrip;
})();
var Triangles = (function () {
    function Triangles() {

    };
    Triangles.value = new Triangles();
    return Triangles;
})();
var TriangleStrip = (function () {
    function TriangleStrip() {

    };
    TriangleStrip.value = new TriangleStrip();
    return TriangleStrip;
})();
var TriangleFan = (function () {
    function TriangleFan() {

    };
    TriangleFan.value = new TriangleFan();
    return TriangleFan;
})();
var Byte = (function () {
    function Byte() {

    };
    Byte.value = new Byte();
    return Byte;
})();
var UnsignedByte = (function () {
    function UnsignedByte() {

    };
    UnsignedByte.value = new UnsignedByte();
    return UnsignedByte;
})();
var Short = (function () {
    function Short() {

    };
    Short.value = new Short();
    return Short;
})();
var UnsignedShort = (function () {
    function UnsignedShort() {

    };
    UnsignedShort.value = new UnsignedShort();
    return UnsignedShort;
})();
var Int = (function () {
    function Int() {

    };
    Int.value = new Int();
    return Int;
})();
var UnsignedInt = (function () {
    function UnsignedInt() {

    };
    UnsignedInt.value = new UnsignedInt();
    return UnsignedInt;
})();
var Float = (function () {
    function Float() {

    };
    Float.value = new Float();
    return Float;
})();
var DynamicDraw = (function () {
    function DynamicDraw() {

    };
    DynamicDraw.value = new DynamicDraw();
    return DynamicDraw;
})();
var StaticDraw = (function () {
    function StaticDraw() {

    };
    StaticDraw.value = new StaticDraw();
    return StaticDraw;
})();
var StreamDraw = (function () {
    function StreamDraw() {

    };
    StreamDraw.value = new StreamDraw();
    return StreamDraw;
})();
var DepthBuffer = (function () {
    function DepthBuffer() {

    };
    DepthBuffer.value = new DepthBuffer();
    return DepthBuffer;
})();
var ColorBuffer = (function () {
    function ColorBuffer() {

    };
    ColorBuffer.value = new ColorBuffer();
    return ColorBuffer;
})();
var StencilBuffer = (function () {
    function StencilBuffer() {

    };
    StencilBuffer.value = new StencilBuffer();
    return StencilBuffer;
})();
var DataSize = (function () {
    function DataSize(value0) {
        this.value0 = value0;
    };
    DataSize.create = function (value0) {
        return new DataSize(value0);
    };
    return DataSize;
})();
var DataSource = (function () {
    function DataSource(value0) {
        this.value0 = value0;
    };
    DataSource.create = function (value0) {
        return new DataSource(value0);
    };
    return DataSource;
})();
var Attribute = function (x) {
    return x;
};
var $$ArrayBuffer = (function () {
    function ArrayBuffer() {

    };
    ArrayBuffer.value = new ArrayBuffer();
    return ArrayBuffer;
})();
var ElementArrayBuffer = (function () {
    function ElementArrayBuffer() {

    };
    ElementArrayBuffer.value = new ElementArrayBuffer();
    return ElementArrayBuffer;
})();
var ToWebGLEnum = function (toWebglEnum) {
    this.toWebglEnum = toWebglEnum;
};
var FromWebGLEnum = function (fromWebglEnum) {
    this.fromWebglEnum = fromWebglEnum;
};
var toWebglEnumShaderParam = new ToWebGLEnum(function (v) {
    if (v instanceof ShaderTypeSP) {
        return Graphics_WebGL_Raw_Enums.shaderType;
    };
    if (v instanceof DeleteStatusSP) {
        return Graphics_WebGL_Raw_Enums.deleteStatus;
    };
    if (v instanceof CompileStatusSP) {
        return Graphics_WebGL_Raw_Enums.compileStatus;
    };
    throw new Error("Failed pattern match at Graphics.WebGL.Types line 183, column 1 - line 189, column 1: " + [ v.constructor.name ]);
});
var toWebglEnumShader = new ToWebGLEnum(function (v) {
    if (v instanceof FragmentShader) {
        return Graphics_WebGL_Raw_Enums.fragmentShader;
    };
    if (v instanceof VertexShader) {
        return Graphics_WebGL_Raw_Enums.vertexShader;
    };
    throw new Error("Failed pattern match at Graphics.WebGL.Types line 193, column 1 - line 199, column 1: " + [ v.constructor.name ]);
});
var toWebglEnumProgramParam = new ToWebGLEnum(function (v) {
    if (v instanceof DeleteStatus) {
        return Graphics_WebGL_Raw_Enums.deleteStatus;
    };
    if (v instanceof LinkStatus) {
        return Graphics_WebGL_Raw_Enums.linkStatus;
    };
    if (v instanceof ValidateStatus) {
        return Graphics_WebGL_Raw_Enums.validateStatus;
    };
    if (v instanceof AttachedShaders) {
        return Graphics_WebGL_Raw_Enums.attachedShaders;
    };
    if (v instanceof ActiveAttrs) {
        return Graphics_WebGL_Raw_Enums.activeAttributes;
    };
    if (v instanceof ActiveUniforms) {
        return Graphics_WebGL_Raw_Enums.activeUniforms;
    };
    throw new Error("Failed pattern match at Graphics.WebGL.Types line 170, column 1 - line 178, column 1: " + [ v.constructor.name ]);
});
var toWebglEnumDrawMode = new ToWebGLEnum(function (v) {
    if (v instanceof Points) {
        return Graphics_WebGL_Raw_Enums.points;
    };
    if (v instanceof Lines) {
        return Graphics_WebGL_Raw_Enums.lines;
    };
    if (v instanceof LineLoop) {
        return Graphics_WebGL_Raw_Enums.lineLoop;
    };
    if (v instanceof LineStrip) {
        return Graphics_WebGL_Raw_Enums.lineStrip;
    };
    if (v instanceof Triangles) {
        return Graphics_WebGL_Raw_Enums.triangles;
    };
    if (v instanceof TriangleStrip) {
        return Graphics_WebGL_Raw_Enums.triangleStrip;
    };
    if (v instanceof TriangleFan) {
        return Graphics_WebGL_Raw_Enums.triangleFan;
    };
    throw new Error("Failed pattern match at Graphics.WebGL.Types line 129, column 1 - line 138, column 1: " + [ v.constructor.name ]);
});
var toWebglEnumDataType = new ToWebGLEnum(function (v) {
    if (v instanceof Byte) {
        return Graphics_WebGL_Raw_Enums["byte"];
    };
    if (v instanceof UnsignedByte) {
        return Graphics_WebGL_Raw_Enums.unsignedByte;
    };
    if (v instanceof Short) {
        return Graphics_WebGL_Raw_Enums["short"];
    };
    if (v instanceof UnsignedShort) {
        return Graphics_WebGL_Raw_Enums.unsignedShort;
    };
    if (v instanceof Int) {
        return Graphics_WebGL_Raw_Enums["int"];
    };
    if (v instanceof UnsignedInt) {
        return Graphics_WebGL_Raw_Enums.unsignedInt;
    };
    if (v instanceof Float) {
        return Graphics_WebGL_Raw_Enums["float"];
    };
    throw new Error("Failed pattern match at Graphics.WebGL.Types line 111, column 1 - line 120, column 1: " + [ v.constructor.name ]);
});
var toWebglEnumBufferUsage = new ToWebGLEnum(function (v) {
    if (v instanceof DynamicDraw) {
        return Graphics_WebGL_Raw_Enums.dynamicDraw;
    };
    if (v instanceof StaticDraw) {
        return Graphics_WebGL_Raw_Enums.staticDraw;
    };
    if (v instanceof StreamDraw) {
        return Graphics_WebGL_Raw_Enums.streamDraw;
    };
    throw new Error("Failed pattern match at Graphics.WebGL.Types line 97, column 1 - line 102, column 1: " + [ v.constructor.name ]);
});
var toWebglEnumBufferType = new ToWebGLEnum(function (v) {
    if (v instanceof DepthBuffer) {
        return Graphics_WebGL_Raw_Enums.depthBufferBit;
    };
    if (v instanceof ColorBuffer) {
        return Graphics_WebGL_Raw_Enums.colorBufferBit;
    };
    if (v instanceof StencilBuffer) {
        return Graphics_WebGL_Raw_Enums.stencilBufferBit;
    };
    throw new Error("Failed pattern match at Graphics.WebGL.Types line 87, column 1 - line 92, column 1: " + [ v.constructor.name ]);
});
var toWebglEnumArrayBufferType = new ToWebGLEnum(function (v) {
    if (v instanceof $$ArrayBuffer) {
        return Graphics_WebGL_Raw_Enums.arrayBuffer;
    };
    if (v instanceof ElementArrayBuffer) {
        return Graphics_WebGL_Raw_Enums.elementArrayBuffer;
    };
    throw new Error("Failed pattern match at Graphics.WebGL.Types line 78, column 1 - line 82, column 1: " + [ v.constructor.name ]);
});
var toWebglEnum = function (dict) {
    return dict.toWebglEnum;
};
var showErrorCode = new Prelude.Show(function (v) {
    if (v instanceof NoError) {
        return "no error";
    };
    if (v instanceof InvalidEnum) {
        return "invalid enum";
    };
    if (v instanceof InvalidValue) {
        return "invalid value";
    };
    if (v instanceof InvalidOperation) {
        return "invalid operation";
    };
    if (v instanceof OutOfMemory) {
        return "out of memory";
    };
    return "unknown error";
});
var showWebGLError = new Prelude.Show(function (err) {
    if (err instanceof ContextLost) {
        return "WebGL Error: " + "lost the WebGL context";
    };
    if (err instanceof ErrorCode) {
        return "WebGL Error: " + Prelude.show(showErrorCode)(err.value0);
    };
    if (err instanceof NullValue) {
        return "WebGL Error: " + ("null value in " + (err.value0 + " (due to an OpenGL error)"));
    };
    if (err instanceof ShaderError) {
        return "Shader Error: " + err.value0;
    };
    throw new Error("Failed pattern match at Graphics.WebGL.Types line 23, column 1 - line 34, column 1: " + [ err.constructor.name ]);
});
var fromWebglEnumErrorCode = new FromWebGLEnum(function (n) {
    if (n === Graphics_WebGL_Raw_Enums.noError) {
        return NoError.value;
    };
    if (n === Graphics_WebGL_Raw_Enums.invalidEnum) {
        return InvalidEnum.value;
    };
    if (n === Graphics_WebGL_Raw_Enums.invalidValue) {
        return InvalidValue.value;
    };
    if (n === Graphics_WebGL_Raw_Enums.invalidOperation) {
        return InvalidOperation.value;
    };
    if (Prelude.otherwise) {
        return UnknownError.value;
    };
    throw new Error("Failed pattern match at Graphics.WebGL.Types line 146, column 1 - line 154, column 1: " + [ n.constructor.name ]);
});
var fromWebglEnum = function (dict) {
    return dict.fromWebglEnum;
};
module.exports = {
    DataSize: DataSize, 
    DataSource: DataSource, 
    FragmentShader: FragmentShader, 
    VertexShader: VertexShader, 
    ShaderTypeSP: ShaderTypeSP, 
    DeleteStatusSP: DeleteStatusSP, 
    CompileStatusSP: CompileStatusSP, 
    DeleteStatus: DeleteStatus, 
    LinkStatus: LinkStatus, 
    ValidateStatus: ValidateStatus, 
    AttachedShaders: AttachedShaders, 
    ActiveAttrs: ActiveAttrs, 
    ActiveUniforms: ActiveUniforms, 
    NoError: NoError, 
    InvalidEnum: InvalidEnum, 
    InvalidValue: InvalidValue, 
    InvalidOperation: InvalidOperation, 
    OutOfMemory: OutOfMemory, 
    UnknownError: UnknownError, 
    Points: Points, 
    Lines: Lines, 
    LineLoop: LineLoop, 
    LineStrip: LineStrip, 
    Triangles: Triangles, 
    TriangleStrip: TriangleStrip, 
    TriangleFan: TriangleFan, 
    Byte: Byte, 
    UnsignedByte: UnsignedByte, 
    Short: Short, 
    UnsignedShort: UnsignedShort, 
    Int: Int, 
    UnsignedInt: UnsignedInt, 
    Float: Float, 
    DynamicDraw: DynamicDraw, 
    StaticDraw: StaticDraw, 
    StreamDraw: StreamDraw, 
    DepthBuffer: DepthBuffer, 
    ColorBuffer: ColorBuffer, 
    StencilBuffer: StencilBuffer, 
    "ArrayBuffer": $$ArrayBuffer, 
    ElementArrayBuffer: ElementArrayBuffer, 
    Uniform: Uniform, 
    Attribute: Attribute, 
    Mat4: Mat4, 
    Mat3: Mat3, 
    Mat2: Mat2, 
    Vec4: Vec4, 
    Vec3: Vec3, 
    Vec2: Vec2, 
    ContextLost: ContextLost, 
    ErrorCode: ErrorCode, 
    NullValue: NullValue, 
    ShaderError: ShaderError, 
    FromWebGLEnum: FromWebGLEnum, 
    ToWebGLEnum: ToWebGLEnum, 
    fromWebglEnum: fromWebglEnum, 
    toWebglEnum: toWebglEnum, 
    showWebGLError: showWebGLError, 
    toWebglEnumArrayBufferType: toWebglEnumArrayBufferType, 
    toWebglEnumBufferType: toWebglEnumBufferType, 
    toWebglEnumBufferUsage: toWebglEnumBufferUsage, 
    toWebglEnumDataType: toWebglEnumDataType, 
    toWebglEnumDrawMode: toWebglEnumDrawMode, 
    fromWebglEnumErrorCode: fromWebglEnumErrorCode, 
    showErrorCode: showErrorCode, 
    toWebglEnumProgramParam: toWebglEnumProgramParam, 
    toWebglEnumShaderParam: toWebglEnumShaderParam, 
    toWebglEnumShader: toWebglEnumShader
};

},{"Control.Monad.Eff":"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff/index.js","Control.Monad.Except.Trans":"/Users/gene/Programming/pure_morph/output/Control.Monad.Except.Trans/index.js","Control.Monad.Reader.Trans":"/Users/gene/Programming/pure_morph/output/Control.Monad.Reader.Trans/index.js","Data.ArrayBuffer.Types":"/Users/gene/Programming/pure_morph/output/Data.ArrayBuffer.Types/index.js","Data.Int":"/Users/gene/Programming/pure_morph/output/Data.Int/index.js","Graphics.Canvas":"/Users/gene/Programming/pure_morph/output/Graphics.Canvas/index.js","Graphics.WebGL.Raw.Enums":"/Users/gene/Programming/pure_morph/output/Graphics.WebGL.Raw.Enums/index.js","Graphics.WebGL.Raw.Types":"/Users/gene/Programming/pure_morph/output/Graphics.WebGL.Raw.Types/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Graphics.WebGL.Unsafe/foreign.js":[function(require,module,exports){
"use strict";

// module Graphics.WebGL.Unsafe

exports.unsafeCoerce = function unsafeCoerce(x) {
  return x;
}

},{}],"/Users/gene/Programming/pure_morph/output/Graphics.WebGL.Unsafe/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Control_Monad_Eff = require("Control.Monad.Eff");
module.exports = {
    unsafeCoerce: $foreign.unsafeCoerce
};

},{"./foreign":"/Users/gene/Programming/pure_morph/output/Graphics.WebGL.Unsafe/foreign.js","Control.Monad.Eff":"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Graphics.WebGL/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Monad = require("Control.Monad");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Control_Monad_Error_Class = require("Control.Monad.Error.Class");
var Control_Monad_Except_Trans = require("Control.Monad.Except.Trans");
var Control_Monad_Reader_Trans = require("Control.Monad.Reader.Trans");
var Data_Either = require("Data.Either");
var Data_Maybe = require("Data.Maybe");
var Graphics_Canvas = require("Graphics.Canvas");
var Graphics_WebGL_Raw_Enums = require("Graphics.WebGL.Raw.Enums");
var Graphics_WebGL_Raw_Types = require("Graphics.WebGL.Raw.Types");
var Graphics_WebGL_Methods = require("Graphics.WebGL.Methods");
var Graphics_WebGL_Shader = require("Graphics.WebGL.Shader");
var Graphics_WebGL_Types = require("Graphics.WebGL.Types");
var runWebgl = function (f) {
    return function (ctx) {
        return Control_Monad_Except_Trans.runExceptT(Control_Monad_Reader_Trans.runReaderT(f)(ctx));
    };
};
var runWebglWithShaders = function (f) {
    return function (ctx) {
        return function (vertSrc) {
            return function (fragSrc) {
                return runWebgl(Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Graphics_WebGL_Shader.compileShadersIntoProgram(vertSrc)(fragSrc))(function (v) {
                    return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Graphics_WebGL_Shader.getAttrBindings(v))(function (v1) {
                        return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Graphics_WebGL_Shader.getUniformBindings(v))(function (v2) {
                            return f(v)(v1)(v2);
                        });
                    });
                }))(ctx);
            };
        };
    };
};
var debug = (function () {
    var hasErr = function (v) {
        if (v instanceof Graphics_WebGL_Types.NoError) {
            return false;
        };
        return true;
    };
    return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Prelude["<$>"](Control_Monad_Reader_Trans.functorReaderT(Control_Monad_Except_Trans.functorExceptT(Control_Monad_Eff.functorEff)))(Prelude.not(Prelude.booleanAlgebraBoolean))(Graphics_WebGL_Methods.isContextLost))(function (v) {
        return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(Prelude["<$>"](Control_Monad_Reader_Trans.functorReaderT(Control_Monad_Except_Trans.functorExceptT(Control_Monad_Eff.functorEff)))(Graphics_WebGL_Types.fromWebglEnum(Graphics_WebGL_Types.fromWebglEnumErrorCode))(Graphics_WebGL_Methods.getError))(function (v1) {
            return Control_Monad.when(Control_Monad_Reader_Trans.monadReaderT(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff)))(v && hasErr(v1))(Control_Monad_Error_Class.throwError(Control_Monad_Reader_Trans.monadErrorReaderT(Control_Monad_Except_Trans.monadErrorExceptT(Control_Monad_Eff.monadEff)))(new Graphics_WebGL_Types.ErrorCode(v1)));
        });
    });
})();
module.exports = {
    debug: debug, 
    runWebglWithShaders: runWebglWithShaders, 
    runWebgl: runWebgl
};

},{"Control.Monad":"/Users/gene/Programming/pure_morph/output/Control.Monad/index.js","Control.Monad.Eff":"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff/index.js","Control.Monad.Error.Class":"/Users/gene/Programming/pure_morph/output/Control.Monad.Error.Class/index.js","Control.Monad.Except.Trans":"/Users/gene/Programming/pure_morph/output/Control.Monad.Except.Trans/index.js","Control.Monad.Reader.Trans":"/Users/gene/Programming/pure_morph/output/Control.Monad.Reader.Trans/index.js","Data.Either":"/Users/gene/Programming/pure_morph/output/Data.Either/index.js","Data.Maybe":"/Users/gene/Programming/pure_morph/output/Data.Maybe/index.js","Graphics.Canvas":"/Users/gene/Programming/pure_morph/output/Graphics.Canvas/index.js","Graphics.WebGL.Methods":"/Users/gene/Programming/pure_morph/output/Graphics.WebGL.Methods/index.js","Graphics.WebGL.Raw.Enums":"/Users/gene/Programming/pure_morph/output/Graphics.WebGL.Raw.Enums/index.js","Graphics.WebGL.Raw.Types":"/Users/gene/Programming/pure_morph/output/Graphics.WebGL.Raw.Types/index.js","Graphics.WebGL.Shader":"/Users/gene/Programming/pure_morph/output/Graphics.WebGL.Shader/index.js","Graphics.WebGL.Types":"/Users/gene/Programming/pure_morph/output/Graphics.WebGL.Types/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/JSUtil/foreign.js":[function(require,module,exports){
"use strict";

// module JSUtil

exports.unsafeURLGet = function(url) {
  return function (){
    var result;
    var request = new XMLHttpRequest();
    request.open('GET', url, false);
    request.addEventListener('load', function() {
      result = request.responseText;
    });
    request.send();
    return result;
  }
}

exports.unsafeNull = null


exports.requestAnimationFrame = function(x){
  if (typeof rAF === 'undefined') {
    var rAF = (function(){
      return  window.requestAnimationFrame ||
        window.webkitRequestAnimationFrame ||
        window.mozRequestAnimationFrame    ||
        function( callback ){
          window.setTimeout(callback, 1000 / 60);
        };
    })();
  }
  return function(){
    return rAF(x);
  };
};


exports.unsafeLog = function unsafeLog(x) {
  return function () {
    console.log(x);
  }
}


exports.now = function () {
  return Date.now();
};

exports.unsafeEval = function (s) {
  return function () {eval(s);};
}

},{}],"/Users/gene/Programming/pure_morph/output/JSUtil/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Either = require("Data.Either");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Control_Monad_Eff_Console = require("Control.Monad.Eff.Console");
module.exports = {
    now: $foreign.now, 
    requestAnimationFrame: $foreign.requestAnimationFrame, 
    unsafeEval: $foreign.unsafeEval, 
    unsafeLog: $foreign.unsafeLog, 
    unsafeNull: $foreign.unsafeNull, 
    unsafeURLGet: $foreign.unsafeURLGet
};

},{"./foreign":"/Users/gene/Programming/pure_morph/output/JSUtil/foreign.js","Control.Monad.Eff":"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff/index.js","Control.Monad.Eff.Console":"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff.Console/index.js","Data.Either":"/Users/gene/Programming/pure_morph/output/Data.Either/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Main/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Either = require("Data.Either");
var Data_Maybe = require("Data.Maybe");
var Data_Int = require("Data.Int");
var Control_Monad = require("Control.Monad");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Control_Monad_Except_Trans = require("Control.Monad.Except.Trans");
var Control_Monad_ST = require("Control.Monad.ST");
var Graphics_Canvas = require("Graphics.Canvas");
var DOM = require("DOM");
var Config = require("Config");
var Engine = require("Engine");
var UI = require("UI");
var Pattern = require("Pattern");
var System = require("System");
var JSUtil = require("JSUtil");
var Control_Monad_Trans = require("Control.Monad.Trans");
var init = Prelude.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Eff.monadEff))(Engine.loadEngineConf("default"))(function (v) {
    return Prelude.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Eff.monadEff))(UI.loadUIConf("default"))(function (v1) {
        return Prelude.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Eff.monadEff))(Pattern.loadPattern("default"))(function (v2) {
            return Prelude.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Eff.monadEff))(Control_Monad_Trans.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_Eff.monadEff)(Control_Monad_ST.newSTRef(v)))(function (v3) {
                return Prelude.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Eff.monadEff))(Control_Monad_Trans.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_Eff.monadEff)(Control_Monad_ST.newSTRef(v1)))(function (v4) {
                    return Prelude.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Eff.monadEff))(Control_Monad_Trans.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_Eff.monadEff)(Control_Monad_ST.newSTRef(v2)))(function (v5) {
                        return Prelude.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Eff.monadEff))(Engine.initEngineST(v1.canvasId)(v3)(v5))(function (v6) {
                            return Prelude.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Eff.monadEff))(System.initSystemST)(function (v7) {
                                return Prelude.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Eff.monadEff))(Control_Monad_Trans.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_Eff.monadEff)(Control_Monad_ST.newSTRef(v6)))(function (v8) {
                                    return Prelude.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Eff.monadEff))(Control_Monad_Trans.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_Eff.monadEff)(Control_Monad_ST.newSTRef(v7)))(function (v9) {
                                        return Prelude.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Eff.monadEff))(UI.initUIST(v4)(v3)(v8)(v5))(function () {
                                            return Prelude["return"](Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_Eff.applicativeEff))({
                                                ucRef: v4, 
                                                ssRef: v9, 
                                                ecRef: v3, 
                                                esRef: v8, 
                                                pRef: v5
                                            });
                                        });
                                    });
                                });
                            });
                        });
                    });
                });
            });
        });
    });
});
var handleError = function (epi) {
    return function __do() {
        var v = Control_Monad_Except_Trans.runExceptT(epi)();
        if (v instanceof Data_Either.Left) {
            return JSUtil.unsafeLog(v.value0)();
        };
        if (v instanceof Data_Either.Right) {
            return v.value0;
        };
        throw new Error("Failed pattern match at Main line 83, column 1 - line 84, column 1: " + [ v.constructor.name ]);
    };
};
var animate = function (stateM) {
    return handleError(Prelude.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Eff.monadEff))(stateM)(function (v) {
        return Prelude.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Eff.monadEff))(Control_Monad_Trans.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_Eff.monadEff)(Control_Monad_ST.readSTRef(v.ssRef)))(function (v1) {
            return Prelude.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Eff.monadEff))(Control_Monad_Trans.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_Eff.monadEff)(Control_Monad_ST.readSTRef(v.ecRef)))(function (v2) {
                return Prelude.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Eff.monadEff))(Control_Monad_Trans.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_Eff.monadEff)(Control_Monad_ST.readSTRef(v.esRef)))(function (v3) {
                    return Prelude.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Eff.monadEff))(Control_Monad_Trans.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_Eff.monadEff)(Control_Monad_ST.readSTRef(v.pRef)))(function (v4) {
                        return Prelude.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Eff.monadEff))(Control_Monad_Trans.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_Eff.monadEff)(JSUtil.now))(function (v5) {
                            var lastTimeMS = Data_Maybe.maybe(v5)(Prelude.id(Prelude.categoryFn))(v1.lastTimeMS);
                            var delta = (v5 - lastTimeMS) * v4.tSpd;
                            return Prelude.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Eff.monadEff))(Control_Monad_Trans.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_Eff.monadEff)(Control_Monad_ST.modifySTRef(v.ssRef)(function (s) {
                                var $37 = {};
                                for (var $38 in s) {
                                    if (s.hasOwnProperty($38)) {
                                        $37[$38] = s[$38];
                                    };
                                };
                                $37.lastTimeMS = new Data_Maybe.Just(v5);
                                return $37;
                            })))(function () {
                                return Prelude.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Eff.monadEff))(Control_Monad.when(Control_Monad_Except_Trans.monadExceptT(Control_Monad_Eff.monadEff))(v1.frameNum % 10 === 0)((function () {
                                    var lastFpsTimeMS = Data_Maybe.maybe(v5)(Prelude.id(Prelude.categoryFn))(v1.lastFpsTimeMS);
                                    var fps = Data_Int.round((10.0 * 1000.0) / (v5 - lastFpsTimeMS));
                                    return Prelude.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Eff.monadEff))(Control_Monad_Trans.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_Eff.monadEff)(Control_Monad_ST.modifySTRef(v.ssRef)(function (s) {
                                        var $39 = {};
                                        for (var $40 in s) {
                                            if (s.hasOwnProperty($40)) {
                                                $39[$40] = s[$40];
                                            };
                                        };
                                        $39.lastFpsTimeMS = new Data_Maybe.Just(v5);
                                        $39.fps = new Data_Maybe.Just(fps);
                                        return $39;
                                    })))(function () {
                                        return UI.showFps(fps);
                                    });
                                })()))(function () {
                                    var pattern$prime = Pattern.updatePattern(v4)(v4.t + delta);
                                    return Prelude.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Eff.monadEff))(Control_Monad_Trans.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_Eff.monadEff)(Control_Monad_ST.writeSTRef(v.pRef)(pattern$prime)))(function () {
                                        return Prelude.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Eff.monadEff))(Engine.render(v2)(v3)(pattern$prime)(v1.frameNum))(function () {
                                            return Prelude.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Eff.monadEff))(Control_Monad_Trans.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_Eff.monadEff)(Control_Monad_ST.modifySTRef(v.ssRef)(function (s) {
                                                var $41 = {};
                                                for (var $42 in s) {
                                                    if (s.hasOwnProperty($42)) {
                                                        $41[$42] = s[$42];
                                                    };
                                                };
                                                $41.frameNum = s.frameNum + 1 | 0;
                                                return $41;
                                            })))(function () {
                                                return Control_Monad_Trans.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_Eff.monadEff)(JSUtil.requestAnimationFrame(animate(Prelude["return"](Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_Eff.applicativeEff))(v))));
                                            });
                                        });
                                    });
                                });
                            });
                        });
                    });
                });
            });
        });
    }));
};
var main = animate(init);
module.exports = {
    main: main, 
    handleError: handleError, 
    animate: animate, 
    init: init
};

},{"Config":"/Users/gene/Programming/pure_morph/output/Config/index.js","Control.Monad":"/Users/gene/Programming/pure_morph/output/Control.Monad/index.js","Control.Monad.Eff":"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff/index.js","Control.Monad.Except.Trans":"/Users/gene/Programming/pure_morph/output/Control.Monad.Except.Trans/index.js","Control.Monad.ST":"/Users/gene/Programming/pure_morph/output/Control.Monad.ST/index.js","Control.Monad.Trans":"/Users/gene/Programming/pure_morph/output/Control.Monad.Trans/index.js","DOM":"/Users/gene/Programming/pure_morph/output/DOM/index.js","Data.Either":"/Users/gene/Programming/pure_morph/output/Data.Either/index.js","Data.Int":"/Users/gene/Programming/pure_morph/output/Data.Int/index.js","Data.Maybe":"/Users/gene/Programming/pure_morph/output/Data.Maybe/index.js","Engine":"/Users/gene/Programming/pure_morph/output/Engine/index.js","Graphics.Canvas":"/Users/gene/Programming/pure_morph/output/Graphics.Canvas/index.js","JSUtil":"/Users/gene/Programming/pure_morph/output/JSUtil/index.js","Pattern":"/Users/gene/Programming/pure_morph/output/Pattern/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js","System":"/Users/gene/Programming/pure_morph/output/System/index.js","UI":"/Users/gene/Programming/pure_morph/output/UI/index.js"}],"/Users/gene/Programming/pure_morph/output/Math/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Math

exports.abs = Math.abs;

exports.acos = Math.acos;

exports.asin = Math.asin;

exports.atan = Math.atan;

exports.atan2 = function (y) {
  return function (x) {
    return Math.atan2(y, x);
  };
};

exports.ceil = Math.ceil;

exports.cos = Math.cos;

exports.exp = Math.exp;

exports.floor = Math.floor;

exports.log = Math.log;

exports.max = function (n1) {
  return function (n2) {
    return Math.max(n1, n2);
  };
};

exports.min = function (n1) {
  return function (n2) {
    return Math.min(n1, n2);
  };
};

exports.pow = function (n) {
  return function (p) {
    return Math.pow(n, p);
  };
};

exports["%"] = function(n) {
  return function(m) {
    return n % m;
  };
};

exports.round = Math.round;

exports.sin = Math.sin;

exports.sqrt = Math.sqrt;

exports.tan = Math.tan;

exports.e = Math.E;

exports.ln2 = Math.LN2;

exports.ln10 = Math.LN10;

exports.log2e = Math.LOG2E;

exports.log10e = Math.LOG10E;

exports.pi = Math.PI;

exports.sqrt1_2 = Math.SQRT1_2;

exports.sqrt2 = Math.SQRT2;

},{}],"/Users/gene/Programming/pure_morph/output/Math/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var $foreign = require("./foreign");
module.exports = {
    sqrt2: $foreign.sqrt2, 
    sqrt1_2: $foreign.sqrt1_2, 
    pi: $foreign.pi, 
    log10e: $foreign.log10e, 
    log2e: $foreign.log2e, 
    ln10: $foreign.ln10, 
    ln2: $foreign.ln2, 
    e: $foreign.e, 
    "%": $foreign["%"], 
    tan: $foreign.tan, 
    sqrt: $foreign.sqrt, 
    sin: $foreign.sin, 
    round: $foreign.round, 
    pow: $foreign.pow, 
    min: $foreign.min, 
    max: $foreign.max, 
    log: $foreign.log, 
    floor: $foreign.floor, 
    exp: $foreign.exp, 
    cos: $foreign.cos, 
    ceil: $foreign.ceil, 
    atan2: $foreign.atan2, 
    atan: $foreign.atan, 
    asin: $foreign.asin, 
    acos: $foreign.acos, 
    abs: $foreign.abs
};

},{"./foreign":"/Users/gene/Programming/pure_morph/output/Math/foreign.js"}],"/Users/gene/Programming/pure_morph/output/Pattern/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var Data_StrMap = require("Data.StrMap");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Control_Monad_Error_Class = require("Control.Monad.Error.Class");
var Control_Monad_Except_Trans = require("Control.Monad.Except.Trans");
var Config = require("Config");
var updatePattern = function (pattern) {
    return function (t$prime) {
        var $0 = {};
        for (var $1 in pattern) {
            if (pattern.hasOwnProperty($1)) {
                $0[$1] = pattern[$1];
            };
        };
        $0.t = t$prime;
        return $0;
    };
};
var defaultPattern = {
    modules: Data_StrMap.empty, 
    scripts: [  ], 
    t: 0.0, 
    tPhase: 0.0, 
    tSpd: 1.0
};
var loadPattern = function (name) {
    return Prelude["return"](Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_Eff.applicativeEff))(defaultPattern);
};
var defaultModule = {
    name: "", 
    id: "", 
    family: "", 
    modules: Data_StrMap.empty, 
    par: Data_StrMap.empty, 
    zn: [  ], 
    images: [  ], 
    sub: Data_StrMap.empty
};
module.exports = {
    updatePattern: updatePattern, 
    loadPattern: loadPattern, 
    defaultPattern: defaultPattern, 
    defaultModule: defaultModule
};

},{"Config":"/Users/gene/Programming/pure_morph/output/Config/index.js","Control.Monad.Eff":"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff/index.js","Control.Monad.Error.Class":"/Users/gene/Programming/pure_morph/output/Control.Monad.Error.Class/index.js","Control.Monad.Except.Trans":"/Users/gene/Programming/pure_morph/output/Control.Monad.Except.Trans/index.js","Data.StrMap":"/Users/gene/Programming/pure_morph/output/Data.StrMap/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Prelude/foreign.js":[function(require,module,exports){
/* global exports */
"use strict";

// module Prelude

//- Functor --------------------------------------------------------------------

exports.arrayMap = function (f) {
  return function (arr) {
    var l = arr.length;
    var result = new Array(l);
    for (var i = 0; i < l; i++) {
      result[i] = f(arr[i]);
    }
    return result;
  };
};

//- Bind -----------------------------------------------------------------------

exports.arrayBind = function (arr) {
  return function (f) {
    var result = [];
    for (var i = 0, l = arr.length; i < l; i++) {
      Array.prototype.push.apply(result, f(arr[i]));
    }
    return result;
  };
};

//- Monoid ---------------------------------------------------------------------

exports.concatString = function (s1) {
  return function (s2) {
    return s1 + s2;
  };
};

exports.concatArray = function (xs) {
  return function (ys) {
    return xs.concat(ys);
  };
};

//- Semiring -------------------------------------------------------------------

exports.intAdd = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x + y | 0;
  };
};

exports.intMul = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x * y | 0;
  };
};

exports.numAdd = function (n1) {
  return function (n2) {
    return n1 + n2;
  };
};

exports.numMul = function (n1) {
  return function (n2) {
    return n1 * n2;
  };
};

//- ModuloSemiring -------------------------------------------------------------

exports.intDiv = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x / y | 0;
  };
};

exports.intMod = function (x) {
  return function (y) {
    return x % y;
  };
};

exports.numDiv = function (n1) {
  return function (n2) {
    return n1 / n2;
  };
};

//- Ring -----------------------------------------------------------------------

exports.intSub = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x - y | 0;
  };
};

exports.numSub = function (n1) {
  return function (n2) {
    return n1 - n2;
  };
};

//- Eq -------------------------------------------------------------------------

exports.refEq = function (r1) {
  return function (r2) {
    return r1 === r2;
  };
};

exports.refIneq = function (r1) {
  return function (r2) {
    return r1 !== r2;
  };
};

exports.eqArrayImpl = function (f) {
  return function (xs) {
    return function (ys) {
      if (xs.length !== ys.length) return false;
      for (var i = 0; i < xs.length; i++) {
        if (!f(xs[i])(ys[i])) return false;
      }
      return true;
    };
  };
};

exports.ordArrayImpl = function (f) {
  return function (xs) {
    return function (ys) {
      var i = 0;
      var xlen = xs.length;
      var ylen = ys.length;
      while (i < xlen && i < ylen) {
        var x = xs[i];
        var y = ys[i];
        var o = f(x)(y);
        if (o !== 0) {
          return o;
        }
        i++;
      }
      if (xlen === ylen) {
        return 0;
      } else if (xlen > ylen) {
        return -1;
      } else {
        return 1;
      }
    };
  };
};

//- Ord ------------------------------------------------------------------------

exports.unsafeCompareImpl = function (lt) {
  return function (eq) {
    return function (gt) {
      return function (x) {
        return function (y) {
          return x < y ? lt : x > y ? gt : eq;
        };
      };
    };
  };
};

//- Bounded --------------------------------------------------------------------

exports.topInt = 2147483647;
exports.bottomInt = -2147483648;

exports.topChar = String.fromCharCode(65535);
exports.bottomChar = String.fromCharCode(0);

//- BooleanAlgebra -------------------------------------------------------------

exports.boolOr = function (b1) {
  return function (b2) {
    return b1 || b2;
  };
};

exports.boolAnd = function (b1) {
  return function (b2) {
    return b1 && b2;
  };
};

exports.boolNot = function (b) {
  return !b;
};

//- Show -----------------------------------------------------------------------

exports.showIntImpl = function (n) {
  return n.toString();
};

exports.showNumberImpl = function (n) {
  /* jshint bitwise: false */
  return n === (n | 0) ? n + ".0" : n.toString();
};

exports.showCharImpl = function (c) {
  var code = c.charCodeAt(0);
  if (code < 0x20 || code === 0x7F) {
    switch (c) {
      case "\a": return "'\\a'";
      case "\b": return "'\\b'";
      case "\f": return "'\\f'";
      case "\n": return "'\\n'";
      case "\r": return "'\\r'";
      case "\t": return "'\\t'";
      case "\v": return "'\\v'";
    }
    return "'\\" + code.toString(10) + "'";
  }
  return c === "'" || c === "\\" ? "'\\" + c + "'" : "'" + c + "'";
};

exports.showStringImpl = function (s) {
  var l = s.length;
  return "\"" + s.replace(
    /[\0-\x1F\x7F"\\]/g,
    function (c, i) { // jshint ignore:line
      switch (c) {
        case "\"":
        case "\\":
          return "\\" + c;
        case "\a": return "\\a";
        case "\b": return "\\b";
        case "\f": return "\\f";
        case "\n": return "\\n";
        case "\r": return "\\r";
        case "\t": return "\\t";
        case "\v": return "\\v";
      }
      var k = i + 1;
      var empty = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
      return "\\" + c.charCodeAt(0).toString(10) + empty;
    }
  ) + "\"";
};

exports.showArrayImpl = function (f) {
  return function (xs) {
    var ss = [];
    for (var i = 0, l = xs.length; i < l; i++) {
      ss[i] = f(xs[i]);
    }
    return "[" + ss.join(",") + "]";
  };
};

},{}],"/Users/gene/Programming/pure_morph/output/Prelude/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var $foreign = require("./foreign");
var Unit = function (x) {
    return x;
};
var LT = (function () {
    function LT() {

    };
    LT.value = new LT();
    return LT;
})();
var GT = (function () {
    function GT() {

    };
    GT.value = new GT();
    return GT;
})();
var EQ = (function () {
    function EQ() {

    };
    EQ.value = new EQ();
    return EQ;
})();
var Semigroupoid = function (compose) {
    this.compose = compose;
};
var Category = function (__superclass_Prelude$dotSemigroupoid_0, id) {
    this["__superclass_Prelude.Semigroupoid_0"] = __superclass_Prelude$dotSemigroupoid_0;
    this.id = id;
};
var Functor = function (map) {
    this.map = map;
};
var Apply = function (__superclass_Prelude$dotFunctor_0, apply) {
    this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    this.apply = apply;
};
var Applicative = function (__superclass_Prelude$dotApply_0, pure) {
    this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
    this.pure = pure;
};
var Bind = function (__superclass_Prelude$dotApply_0, bind) {
    this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
    this.bind = bind;
};
var Monad = function (__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
    this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
    this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
};
var Semigroup = function (append) {
    this.append = append;
};
var Semiring = function (add, mul, one, zero) {
    this.add = add;
    this.mul = mul;
    this.one = one;
    this.zero = zero;
};
var Ring = function (__superclass_Prelude$dotSemiring_0, sub) {
    this["__superclass_Prelude.Semiring_0"] = __superclass_Prelude$dotSemiring_0;
    this.sub = sub;
};
var ModuloSemiring = function (__superclass_Prelude$dotSemiring_0, div, mod) {
    this["__superclass_Prelude.Semiring_0"] = __superclass_Prelude$dotSemiring_0;
    this.div = div;
    this.mod = mod;
};
var DivisionRing = function (__superclass_Prelude$dotModuloSemiring_1, __superclass_Prelude$dotRing_0) {
    this["__superclass_Prelude.ModuloSemiring_1"] = __superclass_Prelude$dotModuloSemiring_1;
    this["__superclass_Prelude.Ring_0"] = __superclass_Prelude$dotRing_0;
};
var Num = function (__superclass_Prelude$dotDivisionRing_0) {
    this["__superclass_Prelude.DivisionRing_0"] = __superclass_Prelude$dotDivisionRing_0;
};
var Eq = function (eq) {
    this.eq = eq;
};
var Ord = function (__superclass_Prelude$dotEq_0, compare) {
    this["__superclass_Prelude.Eq_0"] = __superclass_Prelude$dotEq_0;
    this.compare = compare;
};
var Bounded = function (bottom, top) {
    this.bottom = bottom;
    this.top = top;
};
var BoundedOrd = function (__superclass_Prelude$dotBounded_0, __superclass_Prelude$dotOrd_1) {
    this["__superclass_Prelude.Bounded_0"] = __superclass_Prelude$dotBounded_0;
    this["__superclass_Prelude.Ord_1"] = __superclass_Prelude$dotOrd_1;
};
var BooleanAlgebra = function (__superclass_Prelude$dotBounded_0, conj, disj, not) {
    this["__superclass_Prelude.Bounded_0"] = __superclass_Prelude$dotBounded_0;
    this.conj = conj;
    this.disj = disj;
    this.not = not;
};
var Show = function (show) {
    this.show = show;
};
var $dollar = function (f) {
    return function (x) {
        return f(x);
    };
};
var $hash = function (x) {
    return function (f) {
        return f(x);
    };
};
var zero = function (dict) {
    return dict.zero;
};
var unsafeCompare = $foreign.unsafeCompareImpl(LT.value)(EQ.value)(GT.value);
var unit = {};
var top = function (dict) {
    return dict.top;
};
var sub = function (dict) {
    return dict.sub;
};
var $minus = function (dictRing) {
    return sub(dictRing);
};
var showUnit = new Show(function (v) {
    return "unit";
});
var showString = new Show($foreign.showStringImpl);
var showOrdering = new Show(function (v) {
    if (v instanceof LT) {
        return "LT";
    };
    if (v instanceof GT) {
        return "GT";
    };
    if (v instanceof EQ) {
        return "EQ";
    };
    throw new Error("Failed pattern match at Prelude line 863, column 1 - line 868, column 1: " + [ v.constructor.name ]);
});
var showNumber = new Show($foreign.showNumberImpl);
var showInt = new Show($foreign.showIntImpl);
var showChar = new Show($foreign.showCharImpl);
var showBoolean = new Show(function (v) {
    if (v) {
        return "true";
    };
    if (!v) {
        return "false";
    };
    throw new Error("Failed pattern match at Prelude line 841, column 1 - line 845, column 1: " + [ v.constructor.name ]);
});
var show = function (dict) {
    return dict.show;
};
var showArray = function (dictShow) {
    return new Show($foreign.showArrayImpl(show(dictShow)));
};
var semiringUnit = new Semiring(function (v) {
    return function (v1) {
        return unit;
    };
}, function (v) {
    return function (v1) {
        return unit;
    };
}, unit, unit);
var semiringNumber = new Semiring($foreign.numAdd, $foreign.numMul, 1.0, 0.0);
var semiringInt = new Semiring($foreign.intAdd, $foreign.intMul, 1, 0);
var semigroupoidFn = new Semigroupoid(function (f) {
    return function (g) {
        return function (x) {
            return f(g(x));
        };
    };
});
var semigroupUnit = new Semigroup(function (v) {
    return function (v1) {
        return unit;
    };
});
var semigroupString = new Semigroup($foreign.concatString);
var semigroupOrdering = new Semigroup(function (v) {
    return function (v1) {
        if (v instanceof LT) {
            return LT.value;
        };
        if (v instanceof GT) {
            return GT.value;
        };
        if (v instanceof EQ) {
            return v1;
        };
        throw new Error("Failed pattern match at Prelude line 413, column 1 - line 418, column 1: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var semigroupArray = new Semigroup($foreign.concatArray);
var ringUnit = new Ring(function () {
    return semiringUnit;
}, function (v) {
    return function (v1) {
        return unit;
    };
});
var ringNumber = new Ring(function () {
    return semiringNumber;
}, $foreign.numSub);
var ringInt = new Ring(function () {
    return semiringInt;
}, $foreign.intSub);
var pure = function (dict) {
    return dict.pure;
};
var $$return = function (dictApplicative) {
    return pure(dictApplicative);
};
var otherwise = true;
var one = function (dict) {
    return dict.one;
};
var not = function (dict) {
    return dict.not;
};
var negate = function (dictRing) {
    return function (a) {
        return $minus(dictRing)(zero(dictRing["__superclass_Prelude.Semiring_0"]()))(a);
    };
};
var mul = function (dict) {
    return dict.mul;
};
var $times = function (dictSemiring) {
    return mul(dictSemiring);
};
var moduloSemiringUnit = new ModuloSemiring(function () {
    return semiringUnit;
}, function (v) {
    return function (v1) {
        return unit;
    };
}, function (v) {
    return function (v1) {
        return unit;
    };
});
var moduloSemiringNumber = new ModuloSemiring(function () {
    return semiringNumber;
}, $foreign.numDiv, function (v) {
    return function (v1) {
        return 0.0;
    };
});
var moduloSemiringInt = new ModuloSemiring(function () {
    return semiringInt;
}, $foreign.intDiv, $foreign.intMod);
var mod = function (dict) {
    return dict.mod;
};
var map = function (dict) {
    return dict.map;
};
var $less$dollar$greater = function (dictFunctor) {
    return map(dictFunctor);
};
var $less$hash$greater = function (dictFunctor) {
    return function (fa) {
        return function (f) {
            return $less$dollar$greater(dictFunctor)(f)(fa);
        };
    };
};
var id = function (dict) {
    return dict.id;
};
var functorArray = new Functor($foreign.arrayMap);
var flip = function (f) {
    return function (b) {
        return function (a) {
            return f(a)(b);
        };
    };
};
var eqUnit = new Eq(function (v) {
    return function (v1) {
        return true;
    };
});
var ordUnit = new Ord(function () {
    return eqUnit;
}, function (v) {
    return function (v1) {
        return EQ.value;
    };
});
var eqString = new Eq($foreign.refEq);
var ordString = new Ord(function () {
    return eqString;
}, unsafeCompare);
var eqOrdering = new Eq(function (v) {
    return function (v1) {
        if (v instanceof LT && v1 instanceof LT) {
            return true;
        };
        if (v instanceof GT && v1 instanceof GT) {
            return true;
        };
        if (v instanceof EQ && v1 instanceof EQ) {
            return true;
        };
        return false;
    };
});
var ordOrdering = new Ord(function () {
    return eqOrdering;
}, function (v) {
    return function (v1) {
        if (v instanceof LT && v1 instanceof LT) {
            return EQ.value;
        };
        if (v instanceof EQ && v1 instanceof EQ) {
            return EQ.value;
        };
        if (v instanceof GT && v1 instanceof GT) {
            return EQ.value;
        };
        if (v instanceof LT) {
            return LT.value;
        };
        if (v instanceof EQ && v1 instanceof LT) {
            return GT.value;
        };
        if (v instanceof EQ && v1 instanceof GT) {
            return LT.value;
        };
        if (v instanceof GT) {
            return GT.value;
        };
        throw new Error("Failed pattern match at Prelude line 668, column 1 - line 677, column 1: " + [ v.constructor.name, v1.constructor.name ]);
    };
});
var eqNumber = new Eq($foreign.refEq);
var ordNumber = new Ord(function () {
    return eqNumber;
}, unsafeCompare);
var eqInt = new Eq($foreign.refEq);
var ordInt = new Ord(function () {
    return eqInt;
}, unsafeCompare);
var eqChar = new Eq($foreign.refEq);
var ordChar = new Ord(function () {
    return eqChar;
}, unsafeCompare);
var eqBoolean = new Eq($foreign.refEq);
var ordBoolean = new Ord(function () {
    return eqBoolean;
}, unsafeCompare);
var eq = function (dict) {
    return dict.eq;
};
var $eq$eq = function (dictEq) {
    return eq(dictEq);
};
var eqArray = function (dictEq) {
    return new Eq($foreign.eqArrayImpl($eq$eq(dictEq)));
};
var divisionRingUnit = new DivisionRing(function () {
    return moduloSemiringUnit;
}, function () {
    return ringUnit;
});
var numUnit = new Num(function () {
    return divisionRingUnit;
});
var divisionRingNumber = new DivisionRing(function () {
    return moduloSemiringNumber;
}, function () {
    return ringNumber;
});
var numNumber = new Num(function () {
    return divisionRingNumber;
});
var div = function (dict) {
    return dict.div;
};
var $div = function (dictModuloSemiring) {
    return div(dictModuloSemiring);
};
var disj = function (dict) {
    return dict.disj;
};
var $bar$bar = function (dictBooleanAlgebra) {
    return disj(dictBooleanAlgebra);
};
var $$const = function (a) {
    return function (v) {
        return a;
    };
};
var $$void = function (dictFunctor) {
    return function (fa) {
        return $less$dollar$greater(dictFunctor)($$const(unit))(fa);
    };
};
var conj = function (dict) {
    return dict.conj;
};
var $amp$amp = function (dictBooleanAlgebra) {
    return conj(dictBooleanAlgebra);
};
var compose = function (dict) {
    return dict.compose;
};
var functorFn = new Functor(compose(semigroupoidFn));
var $less$less$less = function (dictSemigroupoid) {
    return compose(dictSemigroupoid);
};
var $greater$greater$greater = function (dictSemigroupoid) {
    return flip(compose(dictSemigroupoid));
};
var compare = function (dict) {
    return dict.compare;
};
var ordArray = function (dictOrd) {
    return new Ord(function () {
        return eqArray(dictOrd["__superclass_Prelude.Eq_0"]());
    }, function (xs) {
        return function (ys) {
            return $dollar(compare(ordInt)(0))($foreign.ordArrayImpl(function (x) {
                return function (y) {
                    var $79 = compare(dictOrd)(x)(y);
                    if ($79 instanceof EQ) {
                        return 0;
                    };
                    if ($79 instanceof LT) {
                        return 1;
                    };
                    if ($79 instanceof GT) {
                        return negate(ringInt)(1);
                    };
                    throw new Error("Failed pattern match at Prelude line 660, column 1 - line 666, column 1: " + [ $79.constructor.name ]);
                };
            })(xs)(ys));
        };
    });
};
var $less = function (dictOrd) {
    return function (a1) {
        return function (a2) {
            var $80 = compare(dictOrd)(a1)(a2);
            if ($80 instanceof LT) {
                return true;
            };
            return false;
        };
    };
};
var $less$eq = function (dictOrd) {
    return function (a1) {
        return function (a2) {
            var $81 = compare(dictOrd)(a1)(a2);
            if ($81 instanceof GT) {
                return false;
            };
            return true;
        };
    };
};
var $greater = function (dictOrd) {
    return function (a1) {
        return function (a2) {
            var $82 = compare(dictOrd)(a1)(a2);
            if ($82 instanceof GT) {
                return true;
            };
            return false;
        };
    };
};
var $greater$eq = function (dictOrd) {
    return function (a1) {
        return function (a2) {
            var $83 = compare(dictOrd)(a1)(a2);
            if ($83 instanceof LT) {
                return false;
            };
            return true;
        };
    };
};
var categoryFn = new Category(function () {
    return semigroupoidFn;
}, function (x) {
    return x;
});
var boundedUnit = new Bounded(unit, unit);
var boundedOrdering = new Bounded(LT.value, GT.value);
var boundedOrdUnit = new BoundedOrd(function () {
    return boundedUnit;
}, function () {
    return ordUnit;
});
var boundedOrdOrdering = new BoundedOrd(function () {
    return boundedOrdering;
}, function () {
    return ordOrdering;
});
var boundedInt = new Bounded($foreign.bottomInt, $foreign.topInt);
var boundedOrdInt = new BoundedOrd(function () {
    return boundedInt;
}, function () {
    return ordInt;
});
var boundedChar = new Bounded($foreign.bottomChar, $foreign.topChar);
var boundedOrdChar = new BoundedOrd(function () {
    return boundedChar;
}, function () {
    return ordChar;
});
var boundedBoolean = new Bounded(false, true);
var boundedOrdBoolean = new BoundedOrd(function () {
    return boundedBoolean;
}, function () {
    return ordBoolean;
});
var bottom = function (dict) {
    return dict.bottom;
};
var boundedFn = function (dictBounded) {
    return new Bounded(function (v) {
        return bottom(dictBounded);
    }, function (v) {
        return top(dictBounded);
    });
};
var booleanAlgebraUnit = new BooleanAlgebra(function () {
    return boundedUnit;
}, function (v) {
    return function (v1) {
        return unit;
    };
}, function (v) {
    return function (v1) {
        return unit;
    };
}, function (v) {
    return unit;
});
var booleanAlgebraFn = function (dictBooleanAlgebra) {
    return new BooleanAlgebra(function () {
        return boundedFn(dictBooleanAlgebra["__superclass_Prelude.Bounded_0"]());
    }, function (fx) {
        return function (fy) {
            return function (a) {
                return conj(dictBooleanAlgebra)(fx(a))(fy(a));
            };
        };
    }, function (fx) {
        return function (fy) {
            return function (a) {
                return disj(dictBooleanAlgebra)(fx(a))(fy(a));
            };
        };
    }, function (fx) {
        return function (a) {
            return not(dictBooleanAlgebra)(fx(a));
        };
    });
};
var booleanAlgebraBoolean = new BooleanAlgebra(function () {
    return boundedBoolean;
}, $foreign.boolAnd, $foreign.boolOr, $foreign.boolNot);
var $div$eq = function (dictEq) {
    return function (x) {
        return function (y) {
            return not(booleanAlgebraBoolean)($eq$eq(dictEq)(x)(y));
        };
    };
};
var bind = function (dict) {
    return dict.bind;
};
var liftM1 = function (dictMonad) {
    return function (f) {
        return function (a) {
            return bind(dictMonad["__superclass_Prelude.Bind_1"]())(a)(function (v) {
                return $$return(dictMonad["__superclass_Prelude.Applicative_0"]())(f(v));
            });
        };
    };
};
var $greater$greater$eq = function (dictBind) {
    return bind(dictBind);
};
var asTypeOf = function (x) {
    return function (v) {
        return x;
    };
};
var applyFn = new Apply(function () {
    return functorFn;
}, function (f) {
    return function (g) {
        return function (x) {
            return f(x)(g(x));
        };
    };
});
var bindFn = new Bind(function () {
    return applyFn;
}, function (m) {
    return function (f) {
        return function (x) {
            return f(m(x))(x);
        };
    };
});
var apply = function (dict) {
    return dict.apply;
};
var $less$times$greater = function (dictApply) {
    return apply(dictApply);
};
var liftA1 = function (dictApplicative) {
    return function (f) {
        return function (a) {
            return $less$times$greater(dictApplicative["__superclass_Prelude.Apply_0"]())(pure(dictApplicative)(f))(a);
        };
    };
};
var applicativeFn = new Applicative(function () {
    return applyFn;
}, $$const);
var monadFn = new Monad(function () {
    return applicativeFn;
}, function () {
    return bindFn;
});
var append = function (dict) {
    return dict.append;
};
var $plus$plus = function (dictSemigroup) {
    return append(dictSemigroup);
};
var $less$greater = function (dictSemigroup) {
    return append(dictSemigroup);
};
var semigroupFn = function (dictSemigroup) {
    return new Semigroup(function (f) {
        return function (g) {
            return function (x) {
                return $less$greater(dictSemigroup)(f(x))(g(x));
            };
        };
    });
};
var ap = function (dictMonad) {
    return function (f) {
        return function (a) {
            return bind(dictMonad["__superclass_Prelude.Bind_1"]())(f)(function (v) {
                return bind(dictMonad["__superclass_Prelude.Bind_1"]())(a)(function (v1) {
                    return $$return(dictMonad["__superclass_Prelude.Applicative_0"]())(v(v1));
                });
            });
        };
    };
};
var monadArray = new Monad(function () {
    return applicativeArray;
}, function () {
    return bindArray;
});
var bindArray = new Bind(function () {
    return applyArray;
}, $foreign.arrayBind);
var applyArray = new Apply(function () {
    return functorArray;
}, ap(monadArray));
var applicativeArray = new Applicative(function () {
    return applyArray;
}, function (x) {
    return [ x ];
});
var add = function (dict) {
    return dict.add;
};
var $plus = function (dictSemiring) {
    return add(dictSemiring);
};
module.exports = {
    LT: LT, 
    GT: GT, 
    EQ: EQ, 
    Show: Show, 
    BooleanAlgebra: BooleanAlgebra, 
    BoundedOrd: BoundedOrd, 
    Bounded: Bounded, 
    Ord: Ord, 
    Eq: Eq, 
    DivisionRing: DivisionRing, 
    Num: Num, 
    Ring: Ring, 
    ModuloSemiring: ModuloSemiring, 
    Semiring: Semiring, 
    Semigroup: Semigroup, 
    Monad: Monad, 
    Bind: Bind, 
    Applicative: Applicative, 
    Apply: Apply, 
    Functor: Functor, 
    Category: Category, 
    Semigroupoid: Semigroupoid, 
    show: show, 
    "||": $bar$bar, 
    "&&": $amp$amp, 
    not: not, 
    disj: disj, 
    conj: conj, 
    bottom: bottom, 
    top: top, 
    unsafeCompare: unsafeCompare, 
    ">=": $greater$eq, 
    "<=": $less$eq, 
    ">": $greater, 
    "<": $less, 
    compare: compare, 
    "/=": $div$eq, 
    "==": $eq$eq, 
    eq: eq, 
    "-": $minus, 
    negate: negate, 
    sub: sub, 
    "/": $div, 
    mod: mod, 
    div: div, 
    "*": $times, 
    "+": $plus, 
    one: one, 
    mul: mul, 
    zero: zero, 
    add: add, 
    "++": $plus$plus, 
    "<>": $less$greater, 
    append: append, 
    ap: ap, 
    liftM1: liftM1, 
    "return": $$return, 
    ">>=": $greater$greater$eq, 
    bind: bind, 
    liftA1: liftA1, 
    pure: pure, 
    "<*>": $less$times$greater, 
    apply: apply, 
    "void": $$void, 
    "<#>": $less$hash$greater, 
    "<$>": $less$dollar$greater, 
    map: map, 
    id: id, 
    ">>>": $greater$greater$greater, 
    "<<<": $less$less$less, 
    compose: compose, 
    otherwise: otherwise, 
    asTypeOf: asTypeOf, 
    "const": $$const, 
    flip: flip, 
    "#": $hash, 
    "$": $dollar, 
    unit: unit, 
    semigroupoidFn: semigroupoidFn, 
    categoryFn: categoryFn, 
    functorFn: functorFn, 
    functorArray: functorArray, 
    applyFn: applyFn, 
    applyArray: applyArray, 
    applicativeFn: applicativeFn, 
    applicativeArray: applicativeArray, 
    bindFn: bindFn, 
    bindArray: bindArray, 
    monadFn: monadFn, 
    monadArray: monadArray, 
    semigroupString: semigroupString, 
    semigroupUnit: semigroupUnit, 
    semigroupFn: semigroupFn, 
    semigroupOrdering: semigroupOrdering, 
    semigroupArray: semigroupArray, 
    semiringInt: semiringInt, 
    semiringNumber: semiringNumber, 
    semiringUnit: semiringUnit, 
    ringInt: ringInt, 
    ringNumber: ringNumber, 
    ringUnit: ringUnit, 
    moduloSemiringInt: moduloSemiringInt, 
    moduloSemiringNumber: moduloSemiringNumber, 
    moduloSemiringUnit: moduloSemiringUnit, 
    divisionRingNumber: divisionRingNumber, 
    divisionRingUnit: divisionRingUnit, 
    numNumber: numNumber, 
    numUnit: numUnit, 
    eqBoolean: eqBoolean, 
    eqInt: eqInt, 
    eqNumber: eqNumber, 
    eqChar: eqChar, 
    eqString: eqString, 
    eqUnit: eqUnit, 
    eqArray: eqArray, 
    eqOrdering: eqOrdering, 
    ordBoolean: ordBoolean, 
    ordInt: ordInt, 
    ordNumber: ordNumber, 
    ordString: ordString, 
    ordChar: ordChar, 
    ordUnit: ordUnit, 
    ordArray: ordArray, 
    ordOrdering: ordOrdering, 
    boundedBoolean: boundedBoolean, 
    boundedUnit: boundedUnit, 
    boundedOrdering: boundedOrdering, 
    boundedInt: boundedInt, 
    boundedChar: boundedChar, 
    boundedFn: boundedFn, 
    boundedOrdBoolean: boundedOrdBoolean, 
    boundedOrdUnit: boundedOrdUnit, 
    boundedOrdOrdering: boundedOrdOrdering, 
    boundedOrdInt: boundedOrdInt, 
    boundedOrdChar: boundedOrdChar, 
    booleanAlgebraBoolean: booleanAlgebraBoolean, 
    booleanAlgebraUnit: booleanAlgebraUnit, 
    booleanAlgebraFn: booleanAlgebraFn, 
    showBoolean: showBoolean, 
    showInt: showInt, 
    showNumber: showNumber, 
    showChar: showChar, 
    showString: showString, 
    showUnit: showUnit, 
    showArray: showArray, 
    showOrdering: showOrdering
};

},{"./foreign":"/Users/gene/Programming/pure_morph/output/Prelude/foreign.js"}],"/Users/gene/Programming/pure_morph/output/System/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Control_Monad_ST = require("Control.Monad.ST");
var Config = require("Config");
var Control_Monad_Except_Trans = require("Control.Monad.Except.Trans");
var Control_Monad_Eff = require("Control.Monad.Eff");
var defaultSystemST = {
    lastTimeMS: Data_Maybe.Nothing.value, 
    frameNum: 0, 
    lastFpsTimeMS: Data_Maybe.Nothing.value, 
    fps: Data_Maybe.Nothing.value
};
var initSystemST = Prelude["return"](Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_Eff.applicativeEff))(defaultSystemST);
module.exports = {
    initSystemST: initSystemST, 
    defaultSystemST: defaultSystemST
};

},{"Config":"/Users/gene/Programming/pure_morph/output/Config/index.js","Control.Monad.Eff":"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff/index.js","Control.Monad.Except.Trans":"/Users/gene/Programming/pure_morph/output/Control.Monad.Except.Trans/index.js","Control.Monad.ST":"/Users/gene/Programming/pure_morph/output/Control.Monad.ST/index.js","Data.Maybe":"/Users/gene/Programming/pure_morph/output/Data.Maybe/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/UI/foreign.js":[function(require,module,exports){
"use strict";

// module UI

exports.registerEventHandler = function(handler) {
  return function() {
    window.eventHandler = function(msg){handler(msg)()};
  }
};

},{}],"/Users/gene/Programming/pure_morph/output/UI/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");
var Data_Int = require("Data.Int");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Control_Monad_Eff_Class = require("Control.Monad.Eff.Class");
var Control_Monad_Error_Class = require("Control.Monad.Error.Class");
var Control_Monad_Except_Trans = require("Control.Monad.Except.Trans");
var Control_Monad_ST = require("Control.Monad.ST");
var DOM = require("DOM");
var Graphics_Canvas = require("Graphics.Canvas");
var Data_DOM_Simple_Window = require("Data.DOM.Simple.Window");
var Data_DOM_Simple_Document = require("Data.DOM.Simple.Document");
var Data_DOM_Simple_Element = require("Data.DOM.Simple.Element");
var Config = require("Config");
var Command = require("Command");
var JSUtil = require("JSUtil");
var Control_Monad_Trans = require("Control.Monad.Trans");
var showFps = function (fps) {
    return Prelude.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Eff.monadEff))(Control_Monad_Trans.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_Eff.monadEff)(Data_DOM_Simple_Window.document(Data_DOM_Simple_Window.htmlWindow)(Data_DOM_Simple_Window.globalWindow)))(function (v) {
        return Prelude.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Eff.monadEff))(Control_Monad_Trans.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_Eff.monadEff)(Data_DOM_Simple_Element.querySelector(Data_DOM_Simple_Document.htmlDocumentElement)("#showfps")(v)))(function (v1) {
            if (v1 instanceof Data_Maybe.Just) {
                return Control_Monad_Trans.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_Eff.monadEff)(Data_DOM_Simple_Element.setInnerHTML(Data_DOM_Simple_Element.htmlElement)(Prelude.show(Prelude.showInt)(fps) + "fps")(v1.value0));
            };
            throw new Error("Failed pattern match at UI line 67, column 1 - line 68, column 1: " + [ v1.constructor.name ]);
        });
    });
};
var initLayout = function (uiConf) {
    return Prelude.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Eff.monadEff))(Control_Monad_Trans.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_Eff.monadEff)(Data_DOM_Simple_Window.document(Data_DOM_Simple_Window.htmlWindow)(Data_DOM_Simple_Window.globalWindow)))(function (v) {
        return Prelude.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Eff.monadEff))(Control_Monad_Trans.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_Eff.monadEff)(Data_DOM_Simple_Window.innerWidth(Data_DOM_Simple_Window.htmlWindow)(Data_DOM_Simple_Window.globalWindow)))(function (v1) {
            return Prelude.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Eff.monadEff))(Control_Monad_Trans.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_Eff.monadEff)(Data_DOM_Simple_Window.innerHeight(Data_DOM_Simple_Window.htmlWindow)(Data_DOM_Simple_Window.globalWindow)))(function (v2) {
                return Prelude.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Eff.monadEff))(Control_Monad_Trans.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_Eff.monadEff)(Data_DOM_Simple_Element.querySelector(Data_DOM_Simple_Document.htmlDocumentElement)("#" + uiConf.canvasId)(v)))(function (v3) {
                    if (v3 instanceof Data_Maybe.Just) {
                        return Prelude.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Eff.monadEff))(Control_Monad_Trans.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_Eff.monadEff)(Data_DOM_Simple_Element.setStyleAttr(Data_DOM_Simple_Element.htmlElement)("width")(Prelude.show(Prelude.showNumber)(v2 - 10.0) + "px")(v3.value0)))(function () {
                            return Prelude.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Eff.monadEff))(Control_Monad_Trans.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_Eff.monadEff)(Data_DOM_Simple_Element.setStyleAttr(Data_DOM_Simple_Element.htmlElement)("height")(Prelude.show(Prelude.showNumber)(v2 - 11.0) + "px")(v3.value0)))(function () {
                                return Prelude.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Eff.monadEff))(Control_Monad_Trans.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_Eff.monadEff)(Data_DOM_Simple_Element.querySelector(Data_DOM_Simple_Document.htmlDocumentElement)("#" + uiConf.consoleId)(v)))(function (v4) {
                                    if (v4 instanceof Data_Maybe.Just) {
                                        return Prelude.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Eff.monadEff))(Control_Monad_Trans.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_Eff.monadEff)(Data_DOM_Simple_Element.setStyleAttr(Data_DOM_Simple_Element.htmlElement)("width")(Prelude.show(Prelude.showNumber)(v1 - v2 - 30.0) + "px")(v4.value0)))(function () {
                                            return Control_Monad_Trans.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_Eff.monadEff)(Data_DOM_Simple_Element.setStyleAttr(Data_DOM_Simple_Element.htmlElement)("height")(Prelude.show(Prelude.showNumber)(v2 - 21.0) + "px")(v4.value0));
                                        });
                                    };
                                    throw new Error("Failed pattern match at UI line 46, column 1 - line 47, column 1: " + [ v4.constructor.name ]);
                                });
                            });
                        });
                    };
                    throw new Error("Failed pattern match at UI line 46, column 1 - line 47, column 1: " + [ v3.constructor.name ]);
                });
            });
        });
    });
};
var initUIST = function (ucRef) {
    return function (ecRef) {
        return function (esRef) {
            return function (pRef) {
                return Prelude.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Eff.monadEff))(Control_Monad_Trans.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_Eff.monadEff)(Control_Monad_ST.readSTRef(ucRef)))(function (v) {
                    return Prelude.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Eff.monadEff))(initLayout(v))(function () {
                        return Control_Monad_Trans.lift(Control_Monad_Except_Trans.monadTransExceptT)(Control_Monad_Eff.monadEff)($foreign.registerEventHandler(Command.command(ucRef)(ecRef)(esRef)(pRef)));
                    });
                });
            };
        };
    };
};
var defaultUIConf = {
    canvasId: "glcanvas", 
    consoleId: "console"
};
var loadUIConf = function (name) {
    return Prelude["return"](Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_Eff.applicativeEff))(defaultUIConf);
};
module.exports = {
    showFps: showFps, 
    initLayout: initLayout, 
    initUIST: initUIST, 
    loadUIConf: loadUIConf, 
    defaultUIConf: defaultUIConf, 
    registerEventHandler: $foreign.registerEventHandler
};

},{"./foreign":"/Users/gene/Programming/pure_morph/output/UI/foreign.js","Command":"/Users/gene/Programming/pure_morph/output/Command/index.js","Config":"/Users/gene/Programming/pure_morph/output/Config/index.js","Control.Monad.Eff":"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff/index.js","Control.Monad.Eff.Class":"/Users/gene/Programming/pure_morph/output/Control.Monad.Eff.Class/index.js","Control.Monad.Error.Class":"/Users/gene/Programming/pure_morph/output/Control.Monad.Error.Class/index.js","Control.Monad.Except.Trans":"/Users/gene/Programming/pure_morph/output/Control.Monad.Except.Trans/index.js","Control.Monad.ST":"/Users/gene/Programming/pure_morph/output/Control.Monad.ST/index.js","Control.Monad.Trans":"/Users/gene/Programming/pure_morph/output/Control.Monad.Trans/index.js","DOM":"/Users/gene/Programming/pure_morph/output/DOM/index.js","Data.DOM.Simple.Document":"/Users/gene/Programming/pure_morph/output/Data.DOM.Simple.Document/index.js","Data.DOM.Simple.Element":"/Users/gene/Programming/pure_morph/output/Data.DOM.Simple.Element/index.js","Data.DOM.Simple.Window":"/Users/gene/Programming/pure_morph/output/Data.DOM.Simple.Window/index.js","Data.Int":"/Users/gene/Programming/pure_morph/output/Data.Int/index.js","Data.Maybe":"/Users/gene/Programming/pure_morph/output/Data.Maybe/index.js","Graphics.Canvas":"/Users/gene/Programming/pure_morph/output/Graphics.Canvas/index.js","JSUtil":"/Users/gene/Programming/pure_morph/output/JSUtil/index.js","Prelude":"/Users/gene/Programming/pure_morph/output/Prelude/index.js"}],"/Users/gene/Programming/pure_morph/output/Unsafe.Coerce/foreign.js":[function(require,module,exports){
"use strict";

// module Unsafe.Coerce

exports.unsafeCoerce = function(x) { return x; }

},{}],"/Users/gene/Programming/pure_morph/output/Unsafe.Coerce/index.js":[function(require,module,exports){
// Generated by psc version 0.8.0.0
"use strict";
var $foreign = require("./foreign");
module.exports = {
    unsafeCoerce: $foreign.unsafeCoerce
};

},{"./foreign":"/Users/gene/Programming/pure_morph/output/Unsafe.Coerce/foreign.js"}],"/Users/gene/Programming/pure_morph/output/browserify.js":[function(require,module,exports){
module.exports = require("Main");

},{"Main":"/Users/gene/Programming/pure_morph/output/Main/index.js"}]},{},["/Users/gene/Programming/pure_morph/output/browserify.js"])("/Users/gene/Programming/pure_morph/output/browserify.js")
});