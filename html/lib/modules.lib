--default_app
component test_pattern
family application
flags {lib}
var color
dim vec4

--epimorphism < default_app
component epimorphism
modules {seed: seed_wca, t:t_wrap_zo, color: rotate_hsv1, reduce: torus_reduce}

--epimorphism_farm1 < epimorphism
flags {farm1}
modules {seed: seed_wca, t:t_wrap, color: rotate_hsv1, reduce: torus_reduce}

--analysis < epimorphism
modules {seed: seed_analysis, t:t_wrap_zo, color: color_id, reduce: torus_reduce}

--julia < default_app
component julia
sub {t_expr: z * z + zn[0]}
zn [-0.123 + 0.745i, 0.0+0.0i, 0.0+0.0i, 0.0+0.0i]


--color_id
family color
flags {lib, color_main}
component color_id
var color
dim vec4

--color_bgr < color_id
flags {lib}
component color_bgr

--color_gbr < color_id
flags {lib}
component color_gbr

--rotate_hsv0 < color_id
flags {lib, color_main}
component rotate_hsv
par {rot: 0.06, len_sc:0.0, len_sc_amt:0.0, th_spd: 0.0}

--rotate_hsv1 < color_id
flags {lib, color_main}
component rotate_hsv
par {rot: 0.17, len_sc:1.0, len_sc_amt:0.5, th_spd: 0.0}



--disp_id
family disp
flags {root}
component disp
modules {post: post_id}



--epimorphism_main
family main
flags {epimorphism, root}
component main
modules {application: epimorphism}

--epimorphism_main_farm1
family main
flags {epimorphism, root}
component main
modules {application: epimorphism_farm1}


--post_id
family post
flags {lib, post_main}
component post_id
var frame
dim vec4

--post_hlim1 < post_id
flags {post_hlim, lib}
component post_hlim
par {gamma:1.5, hue:0.0, spread:0.5, lgv:0.5}

--post_hlim2 < post_hlim1
par {gamma:1.5, hue:0.33, spread:0.5, lgv:0.5}

--post_hlim3 < post_hlim1
par {gamma:1.5, hue:0.66, spread:0.5, lgv:0.5}

--post_hlim_anim < post_hlim1
flags {lib}
par {gamma:2.0, hue:0.0, spread:0.5, lgv:0.5}
paths {hue:loop 0.01, spread:wave 0.011 0.35 1.5, lgv:wave 0.07 0.125 0.5}

--post_hlim_anim2 < post_hlim1
flags {lib, post_main}
par {gamma:1.8, hue:0.0, spread:0.5, lgv:0.5}
paths {hue:loop 0.01, spread:wave 0.011 0.35 1.5, lgv:wave 0.07 0.125 0.5, gamma:wave 0.03 0.3 1.7}



--grid_reduce
family reduce
flags {lib}
component reduce
sub {reduce: grid_reduce(z)}
var z
dim vec2

--torus_reduce < grid_reduce
sub {reduce: torus_reduce(z)}



--seed_nothing
family seed
flags {lib}
component seed_nothing
var seed
dim vec4

--seed_analysis < seed_nothing
flags {analysis}
par {w: 0.05}
component seed_analysis

--seed_simple < seed_nothing
flags {lib, t_test}
component seed_simple
par {w: 0.2, alpha: 1.0}
modules {t: t_wrap}

--seed_img1 < seed_simple
flags {t_test, img}
component seed_simple_img
images [textures/simplegeom/tile_grid1.png]

--seed_wca < seed_nothing
flags {lib,wca}
component seed_wca
modules {t: t_wrap, w:w_lines_border, wt:wt_id, a:alpha_id, seed_color:simple_color}

--seed_multi < seed_nothing
flags {lib,multi}
component seed_multi
modules {t:t_wrap, seed0:seed_wca, seed1:seed_nothing, seed2:seed_nothing}


--wt_id
family wt
flags {lib}
component wt
sub {wt_exp: w}
var w
dim float

--wt_inv < wt_id
sub {wt_exp: 1.0 - w}

--wt_circ < wt_id
sub {wt_exp: sqrt(1.0 - (1.0 - w) * (1.0 - w))}

--wt_inv_circ < wt_id
sub {wt_exp: 1.0 - sqrt(1.0 - (1.0 - w) * (1.0 - w))}

--wt_anim < wt_id
scripts [randomizeWT1]

--alpha_id
family a
flags {lib}
component alpha
sub {a_exp: a}
par {alpha: 1.0}
var a
dim float

--alpha_no < alpha_id
sub {a_exp: 1.0}

--alpha_solid < alpha_id
sub {a_exp: a * @alpha@}

--alpha_linear < alpha_id
sub {a_exp: w * a * @alpha@}

--alpha_circ < alpha_id
sub {a_exp: sqrt(1.0 - (1.0 - w) * (1.0 - w)) * a * @alpha@}

--alpha_anim < alpha_solid
paths {alpha:wave 0.048 0.3 0.7}
scripts [randomizeA1]



--simple_color
family seed_color
flags {lib}
component simple_color
par {spd: 0.0, rot: 0.15, sat:1.0, val:1.0}
var seed
dim vec4

--tex_color < simple_color
component tex_color
par {scale: 0.333, spd: 0.0, rot: 0.0, sat:1.0, val:1.0}
images [textures/simplegeom/tile_grid1.png]

--simple_color_anim1 < simple_color
flags {anim1}
par {spd: 0.05, rot: 0.15, sat:1.0, val:1.0}

--tex_color_anim1 < tex_color
scripts [randomizeImg1]
flags {anim1}

--tex_color_anim2 < tex_color
scripts [randomizeImg2]
flags {anim2}

--tex_color_anim3 < tex_color
scripts [randomizeImg3]
flags {anim2}


--fb_color < simple_color
component fb_color
par {scale: 0.333, spd: 0.0, rot: 0.0, sat:1.0, val:1.0}
modules {bg: simple_color}


--w_nul
family w
flags {lib}
component w_nul
var wdt
dim vec4

--w_circle < w_nul
component w_circle
par {w:0.2, r:0.7}

--w_lines_inner < w_nul
component w_lines_inner
par {w:0.2}

--w_lines_border < w_nul
component w_lines_border
par {w:0.2}

--w_lines_lr < w_nul
component w_lines_lr
par {w:0.2}

--w_lines_stag < w_nul
component w_lines_stag
par {w:0.2}

--w_square < w_nul
component w_square
par {w:0.3}


--w_circle_anim < w_circle
flags {anim}
paths {w:wave 0.032 0.2 0.55, r: wave 0.02 0.15 0.65}

--w_lines_inner_anim < w_lines_inner
flags {anim}
paths {w:wave 0.032 0.2 0.55}

--w_lines_border_anim < w_lines_border
flags {anim}
paths {w:wave 0.032 0.2 0.55}

--w_lines_lr_anim < w_lines_lr
flags {anim}
paths {w:wave 0.032 0.2 0.55}

--w_lines_stag_anim < w_lines_stag
flags {anim}
paths {w:wave 0.032 0.2 0.55}

--w_square_anim < w_square
flags {anim}
paths {w:wave 0.032 0.35 0.55}



--switch
family switch
component switch
sub {var: v0, dim: float}
par {intrp: 0.0}
modules {m0: id, m1: id}

--smooth_switch < switch
component smooth_switch



--t_id
family t
component t_id
var z
dim vec2

--t_wrap < t_id
flags {wrap, lib}
zn [1.0 + 0.0i, 0.0 + 0.0i, 1.0 + 0.0i, 0.0 + 0.0i]
component t_wrap
modules {t_inner: t_z}

--t_wrap_zo < t_wrap
flags {wrap, all, lib}
zn [1.1 + 0.0i, 0.0 + 0.0i, 1.0 + 0.0i, 0.0 + 0.0i]

--t_wrap_zo' < t_wrap_zo
zn [1.1 + 0.0i, 0.0 + 0.0i, 0.0 + 1.0i, 1.0 + 0.0i]

--t_wrap_zo'1 < t_wrap
flags {wrap, all'}
zn [1.1 + 0.0i, 0.0 + 0.0i, 0.0 + 1.0i, 1.0 + 0.0i]
paths {0:circle 0.005 1.0}

--t_wrap_zo'2 < t_wrap
flags {wrap, all'}
zn [1.1 + 0.0i, 0.0 + 0.0i, 0.0 + 1.0i, 1.0 + 0.0i]
paths {1:rose 0.006 0.8 5.0 -0.8}

--t_wrap_zo'3 < t_wrap
flags {wrap, all'}
zn [1.1 + 0.0i, 0.0 + 0.0i, 0.0 + 1.0i, 1.0 + 0.0i]
paths {3:rose 0.0035 1.1 4.0 0.0}

--t_wrap_zo'4 < t_wrap
flags {wrap, all'}
zn [1.1 + 0.0i, 0.0 + 0.0i, 0.0 + 1.0i, 1.0 + 0.0i]
paths {0:circle 0.005 1.0, 3:rose 0.0035 1.1 4.0 0.0}

--t_main1 < t_wrap
flags {wrap, all'', lib}
zn [1.0 + 0.0i, 0.0 + 0.0i, 0.0 + 1.1i, 1.0 + 0.0i]
modules {t_inner: t_sinh}
paths {0:circle 0.005 1.0, 1:rose 0.006 0.8 5.0 -0.8, 3:rose 0.0035 1.1 4.0 0.0}
scripts [randomizeTI1]

--t_seed_anim1 < t_wrap
flags {wrap}
zn [1.0 + 0.0i, 0.0 + 0.0i, 1.0 + 0.0i, 0.0 + 0.0i]
modules {t_inner: t_id}
paths {0:rose 0.004 0.4 6.0 0.9, 1:rose 0.0015 0.8 5.0 -0.8, 2:rose 0.0035 0.3 7.0 0.9, 3:rose 0.0045 1.2 4.0 0.0}
scripts [randomizeTI2]

--t_seed_anim2 < t_seed_anim1
paths {0:rose 0.025 0.4 6.0 0.9, 1:rose 0.001 0.8 5.0 -0.8, 2:rose 0.003 0.3 7.0 0.9, 3:rose 0.004 1.2 4.0 0.0}
scripts [randomizeTI3]



--t_z
family t_inner
flags {lib, all, all_seed}
component t_sub
var z
dim vec2
sub {t_expr: z}

--t_cos < t_z
flags {lib, all, all_seed}
sub {t_expr: cos(z)}

--t_sin < t_z
flags {lib, all, all_seed}
sub {t_expr: sin(z)}

--t_cosh < t_z
flags {lib, all, all_seed}
sub {t_expr: cosh(z)}

--t_sinh < t_z
flags {lib, all, all_seed}
sub {t_expr: sinh(z)}

--t_tan < t_z
flags {lib, all}
sub {t_expr: tan(z)}

--t_tanh < t_z
flags {lib, all}
sub {t_expr: tanh(z)}

--t_exp < t_z
flags {lib, all, all_seed}
sub {t_expr: exp(z)}

--t_p0 < t_z
flags {lib, all}
sub {t_expr: z / (z + 1) + z / (z - 1)}

--t_p1 < t_z
flags {lib, all, all_seed}
sub {t_expr: 1 - 5 * z * z * z / 3}

--t_p2 < t_z
flags {lib, all, all_seed}
sub {t_expr: 1 - z * z}

--t_p3 < t_z
flags {lib, all, all_seed}
sub {t_expr: z * (1 + z) / 2}

--t_p4 < t_z
flags {lib, all, all_seed}
sub {t_expr: z * z}

--t_tp0 < t_z
flags {lib, all}
sub {t_expr: 1 - (z * z + tanh(z)) / 2}

--t_tp1 < t_z
flags {lib, all}
sub {t_expr: cos(z) - tanh(z)}

--t_tp2 < t_z
flags {lib, all, all_seed}
sub {t_expr: (z + exp(z)) / 2}

--t_tp3 < t_z
flags {lib, all}
sub {t_expr: (sin(z) + tan(z)) / 2}

--t_tp4 < t_z
flags {lib, all, all_seed}
sub {t_expr: cosh(z) + exp(z)}

--t_tp5 < t_z
flags {lib, all, all_seed}
sub {t_expr: z * cos(z)}

--t_tp6 < t_z
flags {lib, all, all_seed}
sub {t_expr: (cosh(z) + sinh(z)) / 2}

--t_inv < t_z
flags {lib, all, inv}
sub {t_expr: 1.0 / z}

--t_zti < t_z
flags {lib, all}
sub {t_expr: 2.0 * z / tan (z * i)}



--default_vert
family vert
flags {root}
component default_vert









--epimorphism1_main < epimorphism_main
modules {application: epimorphism_auto1}

--epimorphism_auto1 < epimorphism
modules {t: t_main1, seed: seed_borderM, color: rotate_hsv1, reduce: torus_reduce}

--seed_borderM < seed_simple
flags {}
par {w: 0.5, alpha: 0.5}
modules {t: ts_wrap_linx3', reduce: torus_reduce}
paths {w:wave 0.032 0.45 0.55, alpha:wave 0.048 0.35 0.65}

--seed_borderM1 < seed_borderM
component seed_simple_img
images [textures/simplegeom/tile_grid1.png]

--ts_wrap_linx3' < t_id
zn [1.1 + 0.0i, 0.0 + 0.0i, 1.0 + 0.0i, 0.0 + 0.0i]
component t_wrap
modules {t_inner: t_z}
paths {3:rose 0.0035 1.1 4.0 0.0}

--disp_main1 < disp_id
flags {}
modules {post: post_hlim_anim}
--epimorphism1_main < epimorphism_main
modules {application: epimorphism_auto1}

--epimorphism_auto1 < epimorphism
modules {t: t_main1, seed: seed_borderM, color: rotate_hsv1, reduce: torus_reduce}

--seed_borderM < seed_simple
flags {}
par {w: 0.5, alpha: 0.5}
modules {t: ts_wrap_linx3', reduce: torus_reduce}
paths {w:wave 0.032 0.45 0.55, alpha:wave 0.048 0.35 0.65}

--seed_borderM1 < seed_borderM
component seed_simple_img
images [textures/simplegeom/tile_grid1.png]

--ts_wrap_linx3' < t_id
zn [1.1 + 0.0i, 0.0 + 0.0i, 1.0 + 0.0i, 0.0 + 0.0i]
component t_wrap
modules {t_inner: t_z}
paths {3:rose 0.0035 1.1 4.0 0.0}

--disp_main1 < disp_id
flags {}
modules {post: post_hlim_anim}









--epimorphism1_main < epimorphism_main
modules {application: epimorphism_auto1}

--epimorphism_auto1 < epimorphism
modules {t: t_main1, seed: seed_borderM, color: rotate_hsv1, reduce: torus_reduce}

--seed_borderM < seed_simple
flags {}
par {w: 0.5, alpha: 0.5}
modules {t: ts_wrap_linx3', reduce: torus_reduce}
paths {w:wave 0.032 0.45 0.55, alpha:wave 0.048 0.35 0.65}

--seed_borderM1 < seed_borderM
component seed_simple_img
images [textures/simplegeom/tile_grid1.png]

--ts_wrap_linx3' < t_id
zn [1.1 + 0.0i, 0.0 + 0.0i, 1.0 + 0.0i, 0.0 + 0.0i]
component t_wrap
modules {t_inner: t_z}
paths {3:rose 0.0035 1.1 4.0 0.0}

--disp_main1 < disp_id
flags {}
modules {post: post_hlim_anim}



--epimorphism2_main < epimorphism_main
modules {application: epimorphism_auto2}

--epimorphism_auto2 < epimorphism
scripts [randomizeC1, randomizeP1]
modules {seed: seed_multi_anim, t:t_main2, color: rotate_hsv1, reduce: torus_reduce}

--seed_wca_anim < seed_wca
modules {t: t_wrap, w:w_lines_border, wt:wt_anim, a:alpha_id, seed_color:simple_color}


--seed_wca_anim1 < seed_wca
scripts [randomizeW1, randomizeSC1]
modules {t: t_seed_anim1, w:w_lines_border_anim, wt:wt_anim, a:alpha_anim, seed_color:simple_color_anim1}

--seed_wca_anim2 < seed_wca
scripts [randomizeW2]
modules {t: t_seed_anim2, w:w_lines_border_anim, wt:wt_anim, a:alpha_anim, seed_color:tex_color_anim2}

--seed_multi_anim < seed_nothing
flags {multi}
component seed_multi
modules {t:t_wrap, seed0:seed_wca_anim1, seed1:seed_wca_anim2, seed2:seed_nothing}

--t_main2 < t_wrap
flags {wrap, lib}
zn [1.0 + 0.0i, 0.0 + 0.0i, 0.0 + 1.1i, 1.0 + 0.0i]
modules {t_inner: t_sinh}
scripts [randomizeTI1]

--disp_main2 < disp_id
flags {}
modules {post: post_hlim_anim2}
--epimorphism2_main < epimorphism_main
modules {application: epimorphism_auto2}

--epimorphism_auto2 < epimorphism
scripts [randomizeC1, randomizeP1]
modules {seed: seed_multi_anim, t:t_main2, color: rotate_hsv1, reduce: torus_reduce}

--seed_wca_anim < seed_wca
modules {t: t_wrap, w:w_lines_border, wt:wt_anim, a:alpha_id, seed_color:simple_color}


--seed_wca_anim1 < seed_wca
scripts [randomizeW1, randomizeSC1]
modules {t: t_seed_anim1, w:w_lines_border_anim, wt:wt_anim, a:alpha_anim, seed_color:simple_color_anim1}

--seed_wca_anim2 < seed_wca
scripts [randomizeW2]
modules {t: t_seed_anim2, w:w_lines_border_anim, wt:wt_anim, a:alpha_anim, seed_color:tex_color_anim2}

--seed_multi_anim < seed_nothing
flags {multi}
component seed_multi
modules {t:t_wrap, seed0:seed_wca_anim1, seed1:seed_wca_anim2, seed2:seed_nothing}

--t_main2 < t_wrap
flags {wrap, lib}
zn [1.0 + 0.0i, 0.0 + 0.0i, 0.0 + 1.1i, 1.0 + 0.0i]
modules {t_inner: t_sinh}
scripts [randomizeTI1]

--disp_main2 < disp_id
flags {}
modules {post: post_hlim_anim2}






--epimorphism2_main < epimorphism_main
modules {application: epimorphism_auto2}

--epimorphism_auto2 < epimorphism
scripts [randomizeC1, randomizeP1]
modules {seed: seed_multi_anim, t:t_main2, color: rotate_hsv1, reduce: torus_reduce}

--seed_wca_anim < seed_wca
modules {t: t_wrap, w:w_lines_border, wt:wt_anim, a:alpha_id, seed_color:simple_color}


--seed_wca_anim1 < seed_wca
scripts [randomizeW1, randomizeSC1]
modules {t: t_seed_anim1, w:w_lines_border_anim, wt:wt_anim, a:alpha_anim, seed_color:simple_color_anim1}

--seed_wca_anim2 < seed_wca
scripts [randomizeW2]
modules {t: t_seed_anim2, w:w_lines_border_anim, wt:wt_anim, a:alpha_anim, seed_color:tex_color_anim2}

--seed_multi_anim < seed_nothing
flags {multi}
component seed_multi
modules {t:t_wrap, seed0:seed_wca_anim1, seed1:seed_wca_anim2, seed2:seed_nothing}

--t_main2 < t_wrap
flags {wrap, lib}
zn [1.0 + 0.0i, 0.0 + 0.0i, 0.0 + 1.1i, 1.0 + 0.0i]
modules {t_inner: t_sinh}
scripts [randomizeTI1]

--disp_main2 < disp_id
flags {}
modules {post: post_hlim_anim2}
--epimorphism_ponies < epimorphism_main
modules {application: epimorphism_ponies_app}

--epimorphism_ponies_app < epimorphism
scripts [randomizeC1]
modules {seed: seed_multi_anim_ponies, t:t_main2, color: rotate_hsv1, reduce: torus_reduce}

--seed_multi_anim_ponies < seed_nothing
flags {multi}
component seed_multi
modules {t:t_wrap, seed0:seed_wca_anim1_ponies, seed1:seed_wca_anim2_ponies, seed2:seed_nothing}

--seed_wca_anim1_ponies < seed_wca
flags {}
scripts [randomizeW1]
modules {t: t_seed_anim1, w:w_lines_border_anim, wt:wt_id, a:alpha_id, seed_color:tex_color_ponies1}

--seed_wca_anim2_ponies < seed_wca
scripts [randomizeW2]
flags {}
modules {t: t_seed_anim2, w:w_lines_border_anim, wt:wt_anim, a:alpha_anim, seed_color:tex_color_ponies2}

--tex_color_ponies1 < tex_color
scripts [randomizePonies1]
images [textures/ponies/ponies_1.png]
flags {}

--tex_color_ponies2 < tex_color_ponies1
scripts [randomizePonies2]
images [textures/ponies/ponies_9.png]



--epimorphism_ponies < epimorphism_main
modules {application: epimorphism_ponies_app}

--epimorphism_ponies_app < epimorphism
scripts [randomizeC1]
modules {seed: seed_multi_anim_ponies, t:t_main2, color: rotate_hsv1, reduce: torus_reduce}

--seed_multi_anim_ponies < seed_nothing
flags {multi}
component seed_multi
modules {t:t_wrap, seed0:seed_wca_anim1_ponies, seed1:seed_wca_anim2_ponies, seed2:seed_nothing}

--seed_wca_anim1_ponies < seed_wca
flags {}
scripts [randomizeW1]
modules {t: t_seed_anim1, w:w_lines_border_anim, wt:wt_id, a:alpha_id, seed_color:tex_color_ponies1}

--seed_wca_anim2_ponies < seed_wca
scripts [randomizeW2]
flags {}
modules {t: t_seed_anim2, w:w_lines_border_anim, wt:wt_anim, a:alpha_anim, seed_color:tex_color_ponies2}

--tex_color_ponies1 < tex_color
scripts [randomizePonies1]
images [textures/ponies/ponies_1.png]
flags {}

--tex_color_ponies2 < tex_color_ponies1
scripts [randomizePonies2]
images [textures/ponies/ponies_9.png]






--epimorphism_ponies < epimorphism_main
modules {application: epimorphism_ponies_app}

--epimorphism_ponies_app < epimorphism
scripts [randomizeC1]
modules {seed: seed_multi_anim_ponies, t:t_main2, color: rotate_hsv1, reduce: torus_reduce}

--seed_multi_anim_ponies < seed_nothing
flags {multi}
component seed_multi
modules {t:t_wrap, seed0:seed_wca_anim1_ponies, seed1:seed_wca_anim2_ponies, seed2:seed_nothing}

--seed_wca_anim1_ponies < seed_wca
flags {}
scripts [randomizeW1]
modules {t: t_seed_anim1, w:w_lines_border_anim, wt:wt_id, a:alpha_id, seed_color:tex_color_ponies1}

--seed_wca_anim2_ponies < seed_wca
scripts [randomizeW2]
flags {}
modules {t: t_seed_anim2, w:w_lines_border_anim, wt:wt_anim, a:alpha_anim, seed_color:tex_color_ponies2}

--tex_color_ponies1 < tex_color
scripts [randomizePonies1]
images [textures/ponies/ponies_1.png]
flags {}

--tex_color_ponies2 < tex_color_ponies1
scripts [randomizePonies2]
images [textures/ponies/ponies_9.png]



