SERIALIZING & COMPILING

serializing
 patterns & modules
 config files
 glsl components
 glsl files
 images

1. read from url
2. read from db
3. sync url to db
3. read from local storage
4. sync db to local storage
- split across multiple tables for organization (i.e. defaults vs module.seed.17623984237)

modules & patterns not serialized inline


LIBRARY USES CASES
- load configuration files by name
- load patterns & modules by name
- save patterns & modules - generate new name, or manual name - no updates(unless forced by me)
- synchronizing local/remote/etc



UICONF, etc

$name
canvasId glcanvas
consoleId console


MODULES, etc

$name
..
par.par1 shiz
par.par2 shiz
..
sub.v1 "asfasf asdfasdf ..."
..
zn 3+4i
zn 5+2i
..
module.name name
..



SEED_W, etc

component $family.name{


}

t_FB, etc

sub $family.name.var {
 exp(z)
 sin(z) + cos(z)
 ..
}


PARSING - configs





COMPILING

 - library includes - #include
 - par - @par
 - zn - zn[i]
 - modules - @@module
 - sub - $sub

1. load files from disk/db
2. map par & zn values
2. process main module
  a. process & splice includes
  b. process & splice components
  c. substitute par & zn
  d. magic for complex functions?
